{"version":3,"file":"static/js/3687.db614732.chunk.js","mappings":"8PAgGA,UApF2B,WAAoB,IAADA,EACpCC,EAASC,IAATD,KACR,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBC,EAAG,OACHC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CC,SAAU,MAAMC,SAEH,QAFGT,EAEf,CAAC,EAAG,EAAG,EAAG,UAAE,IAAAA,OAAA,EAAZA,EAAcU,KAAI,kBACjBC,EAAAA,EAAAA,eAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKZ,GAAI,IAAEa,QAAS,SAAUC,KAAKC,EAAAA,EAAAA,SACtCC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACZ,EAAG,QAAQG,SAAA,EACdN,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CACPC,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjCC,UAAU,EAAMd,UAEhBN,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHN,EAAG,QACHkB,EAAG,QACHJ,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjCR,QAAS,SACTW,GAAI,YACJC,SAAS,SACTC,UAAU,aACVC,GAAG,SAAQnB,UAGXN,EAAAA,EAAAA,KAACe,EAAAA,GAAG,CACFW,IAAK,WACLT,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjChB,EAAG,QACHkB,EAAG,QACHC,GAAI,mBAIVR,EAAAA,EAAAA,MAACL,EAAAA,EAAI,CAACE,QAAS,SAAUgB,GAAI,KAAKrB,SAAA,EAChCN,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAACN,EAAG,QAASyB,QAAS,gBAAiBC,MAAO,SAASvB,UAC1DN,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CACPC,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjCC,UAAU,EAAMd,UAEhBN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CC,UAAW,EAAE1B,SACd,sBAKLN,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CACPC,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjCC,UAAU,EAAMd,UAEhBN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHC,SAAU,CAAC,MAAO,MAAO,OAAQ,OAAQ,QACzCE,QAAS,GACTD,UAAW,EAAE1B,SACd,cAKHN,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CACPC,aAAc,CAAEC,KAAM,MAAOC,GAAI,QACjCC,UAAU,EAAMd,UAEhBQ,EAAAA,EAAAA,MAACoB,EAAAA,EAAM,CAAA5B,SAAA,EACLN,EAAAA,EAAAA,KAACmC,EAAAA,EAAO,CAACJ,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQzB,SAAC,YAG7DN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAACC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQzB,SAAC,qBAO7D,KAIf,EAIA,IAAMP,EAAY,WAChB,MAAO,CACLD,KAAM,CAEJsC,GAAI,MACJP,MAAO,SACPQ,GAAI,KACJpB,aAAc,QAGpB,C","sources":["components/SkeletonLoader/index.tsx"],"sourcesContent":["import {\n  Flex,\n  Skeleton,\n  HStack,\n  Heading,\n  Box,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst SkeletonLoader: FC = (): JSX.Element => {\n  const { root } = useStyles();\n  return (\n    <SimpleGrid\n      columns={[2, 2, 3, 4, 4]}\n      w={\"100%\"}\n      spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n      spacingY={\"5px\"}\n    >\n      {[1, 2, 3, 4]?.map(() => (\n        <Flex {...root} flexDir={\"column\"} key={nanoid()}>\n          <Box w={\"280px\"}>\n            <Skeleton\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              isLoaded={false}\n            >\n              <Flex\n                w={\"280px\"}\n                h={\"280px\"}\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                flexDir={\"column\"}\n                bg={\"#99999951\"}\n                overflow=\"hidden\"\n                className=\"card-hover\"\n                as=\"button\"\n              >\n                {/* OVERLAY */}\n                <Box\n                  pos={\"absolute\"}\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  w={\"280px\"}\n                  h={\"280px\"}\n                  bg={\"#99999951\"}\n                />\n              </Flex>\n            </Skeleton>\n            <Flex flexDir={\"column\"} mt={\"2%\"}>\n              <Flex w={\"280px\"} justify={\"space-between\"} align={\"center\"}>\n                <Skeleton\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  isLoaded={false}\n                >\n                  <Text\n                    fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}\n                    noOfLines={1}\n                  >\n                    productTitle\n                  </Text>\n                </Skeleton>\n              </Flex>\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <Text\n                  fontSize={[\"8px\", \"8px\", \"12px\", \"14px\", \"14px\"]}\n                  opacity={0.7}\n                  noOfLines={1}\n                >\n                  points\n                </Text>\n              </Skeleton>\n\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <HStack>\n                  <Heading fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    points\n                  </Heading>\n                  <Text fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    price\n                  </Text>\n                </HStack>\n              </Skeleton>\n            </Flex>\n          </Box>\n        </Flex>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default SkeletonLoader;\n\nconst useStyles = () => {\n  return {\n    root: {\n      //   w: \"90vw\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      borderRadius: \"16px\",\n    },\n  };\n};\n"],"names":["_ref","root","useStyles","_jsx","SimpleGrid","columns","w","spacingX","spacingY","children","map","_createElement","Flex","_objectSpread","flexDir","key","nanoid","_jsxs","Box","Skeleton","borderRadius","base","md","isLoaded","h","bg","overflow","className","as","pos","mt","justify","align","Text","fontSize","noOfLines","opacity","HStack","Heading","pt","pb"],"sourceRoot":""}