{"version":3,"file":"static/js/6001.39b438a5.chunk.js","mappings":"gaA0BMA,EAAO,CACX,CAAEC,GAAI,IAAKC,KAAM,eAYNC,EAA4D,SAAHC,GAKlD,IAJlBC,EAAUD,EAAVC,WACAC,EAAaF,EAAbE,cACAC,EAAcH,EAAdG,eACAC,EAAWJ,EAAXI,YAEAC,EAAgEC,IAA9BC,GAAjBF,EAATG,UAAeH,EAAJI,KAAaJ,EAAPK,QAAaL,EAAJE,MAAMI,EAAWN,EAAXM,YAAaC,EAAMP,EAANO,OAK/CC,GAAUC,EAAAA,EAAAA,cAAY,WAC1BZ,GAAc,EAChB,GAAG,CAACD,IACEc,GAAUD,EAAAA,EAAAA,cAAY,WAC1BZ,GAAc,EAChB,GAAG,CAACD,IAEJ,OACEe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAACC,EAAG,OAAQC,MAAO,SAASH,UAC/BI,EAAAA,EAAAA,MAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKjB,GAAI,IAAAW,SAAA,EACdF,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAACC,QAAM,EAAAR,UACVF,EAAAA,EAAAA,KAACW,EAAAA,EAAO,CAAAT,SACD,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMgC,KAAI,SAACC,EAAGC,GAAC,OACdC,EAAAA,EAAAA,eAACC,EAAAA,GAAGR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACEb,GAAW,IACfsB,UAAW,CAAEC,MAAO,QAASC,YAAa,SAE1CC,IAAKP,EAAEhC,GACPqC,MAAM,aAENlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAAAnB,SAAEW,EAAE/B,OACL,SAIZkB,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,KACPhB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAL,SAAA,EACLF,EAAAA,EAAAA,KAACuB,EAAAA,GAAG,CAAArB,UACFF,EAAAA,EAAAA,KAACG,EAAAA,GAAIK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHgB,GAAG,UAEC5B,GAAM,IACV6B,QAAQ,SACRpB,MAAM,SAAQH,UAEdI,EAAAA,EAAAA,MAACoB,EAAAA,EAAU,CAAAxB,SAAA,EACTF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CACfC,cAAc,OACd1B,UAAUF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,CAACL,GAAIM,EAAAA,IAAUZ,MAAM,eAEtClB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,MAAO5C,EACP6C,YAAY,kBACZC,aAAa,IACbC,YAAY,IACZC,SAAU,SAACvB,GAAC,OAAI1B,EAAe0B,EAAEwB,OAAOL,MAAM,aAyEtDhC,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHmC,MAAM,OACNC,OAAO,OACPd,QAAQ,SACRpB,MAAM,SACNmC,GAAG,QACHC,QAAS5C,EAAQK,SAEhBjB,GACCe,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAAA,kBAEZ5C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAAA,qBAIhB5C,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHmC,MAAM,OACNC,OAAO,OACPd,QAAQ,SACRpB,MAAM,SACNoC,QAAS1C,EAAQG,SAEhBjB,GACCe,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAAA,mBAEZ5C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAAA,6BAQ5B,EAEA,YAEO,IAAMtD,EAAY,WACvB,MAAO,CACLC,KAAM,CACJc,MAAO,aACPiC,MAAO,CACLO,KAAM,OACNC,GAAI,SAIRC,KAAM,CACJC,SAAU,CACRH,KAAM,OACNC,GAAI,SAIRnD,YAAa,CACXqD,SAAU,CACRH,KAAM,OACNC,GAAI,SAIRtD,UAAW,CACTY,EAAG,QACH6C,EAAG,OACHC,OAAQ,CACNC,WAAY,QACZjC,MAAO,UAIXtB,OAAQ,CACNQ,EAAG,QACH6C,EAAG,OACHE,WAAY,UACZjB,aAAc,QAGhBzC,KAAM,CACJuD,SAAU,OACVI,WAAY,OACZF,OAAQ,CACNhC,MAAO,YAIXxB,QAAS,CACPsD,SAAU,OACVI,WAAY,OACZlC,MAAO,WAGb,C","sources":["components/MyAssetsFilterSearchBar/index.tsx"],"sourcesContent":["// @flow\nimport {\n  Box,\n  Flex,\n  HStack,\n  Icon,\n  Image,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  Tab,\n  TabList,\n  Tabs,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\nimport {\n  Dispatch,\n  FC,\n  SetStateAction,\n  useCallback,\n} from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport Images_Icons from \"../../constants/icons-images\";\n\nconst tabs = [\n  { id: \"1\", name: \"All assets\" },\n  // { id: \"2\", name: \"Issue cards\" },\n  // { id: \"3\", name: \"Synced brands\" },\n];\n\ninterface MyAssetsFilterSearchBarProps {\n  isListMode?: any\n  setIsListMode?: any\n  setSearchQuery: any\n  searchQuery: any\n}\n\nexport const MyAssetsFilterSearchBar: FC<MyAssetsFilterSearchBarProps> = ({\n  isListMode,\n  setIsListMode,\n  setSearchQuery,\n  searchQuery\n}): JSX.Element => {\n  const { container, font, popfont, root, smallerDesc, search } = useStyles();\n\n  // const [isListMode, setIsListMode] = useState<boolean>(false);\n  const sortedItems = [\"Item\", \"Item\"];\n\n  const SetList = useCallback(() => {\n    setIsListMode(true);\n  }, [isListMode]);\n  const SetGrid = useCallback(() => {\n    setIsListMode(false);\n  }, [isListMode]);\n\n  return (\n    <>\n      <Flex w={\"100%\"} align={\"center\"}>\n        <HStack {...root}>\n          <Tabs isLazy>\n            <TabList>\n              {tabs?.map((e, i) => (\n                <Tab\n                  {...smallerDesc}\n                  _selected={{ color: \"black\", borderColor: \"black\" }}\n                  // w={\"80%\"}\n                  key={e.id}\n                  color=\"#999999\"\n                >\n                  <Text>{e.name}</Text>\n                </Tab>\n              ))}\n            </TabList>\n          </Tabs>\n          <Spacer />\n          <HStack>\n            <Box>\n              <Flex\n                as=\"button\"\n                // ml=\"200\"\n                {...search}\n                justify=\"center\"\n                align=\"center\"\n              >\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<Icon as={FaSearch} color=\"#999999\" />}\n                  />\n                  <Input\n                    value={searchQuery}\n                    placeholder=\"Filter Cards...\"\n                    borderRadius=\"0\"\n                    borderWidth=\"0\"\n                    onChange={(e)=> setSearchQuery(e.target.value)}\n                  />\n                </InputGroup>\n              </Flex>\n            </Box>\n\n            {/* <Popover isLazy placement=\"bottom-start\">\n              <PopoverTrigger>\n                <Flex\n                  as=\"button\"\n                  {...container}\n                  justify=\"center\"\n                  align=\"center\"\n                >\n                  <Text {...font}>\n                    Sort{\" \"}\n                    <Icon\n                      as={FaAngleDown}\n                      alignSelf=\"center\"\n                      justifySelf=\"center\"\n                    />\n                  </Text>\n                </Flex>\n              </PopoverTrigger>\n              <PopoverContent\n                borderRadius=\"0\"\n                boxSizing=\"border-box\"\n                position=\"absolute\"\n                width=\"246px\"\n                height=\"371px\"\n                background=\"#FFFFFF\"\n                border=\"1px\"\n              >\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<Icon as={FaSearch} color=\"gray\" />}\n                  />\n                  <Input\n                    placeholder=\"Search\"\n                    borderRadius=\"0\"\n                    borderWidth=\"0\"\n                    borderBottomWidth={1}\n                  />\n                </InputGroup>\n                <PopoverBody>\n                  <Text {...popfont}>Watchlist</Text>\n                </PopoverBody>\n                <PopoverContent\n                  borderRadius=\"0\"\n                  boxSizing=\"border-box\"\n                  position=\"absolute\"\n                  width=\"246px\"\n                  background=\"#FFFFFF\"\n                  border=\"1px\"\n                >\n                  {sortedItems?.map((e, i) => (\n                    <PopoverHeader {...font} key={nanoid()}>\n                      <HStack>\n                        <Box\n                          bg=\"black\"\n                          h=\"20px\"\n                          w=\"20px\"\n                          borderRadius={\"10px\"}\n                        ></Box>\n                        <Text>{e}</Text>\n                      </HStack>\n                    </PopoverHeader>\n                  ))}\n                </PopoverContent>\n              </PopoverContent>\n            </Popover> */}\n\n            <Flex\n              width=\"40px\"\n              height=\"40px\"\n              justify=\"center\"\n              align=\"center\"\n              bg=\"black\"\n              onClick={SetList}\n            >\n              {isListMode ? (\n                <Image src={Images_Icons.list_mode_dark} />\n              ) : (\n                <Image src={Images_Icons.list_mode_light} />\n              )}\n            </Flex>\n\n            <Flex\n              width=\"40px\"\n              height=\"40px\"\n              justify=\"center\"\n              align=\"center\"\n              onClick={SetGrid}\n            >\n              {isListMode ? (\n                <Image src={Images_Icons.grid_mode_light} />\n              ) : (\n                <Image src={Images_Icons.grid_mode_dark} />\n              )}\n            </Flex>\n          </HStack>\n        </HStack>\n      </Flex>\n    </>\n  );\n};\n\nexport default MyAssetsFilterSearchBar;\n\nexport const useStyles = () => {\n  return {\n    root: {\n      align: \"flex-start\",\n      width: {\n        base: \"85vw\",\n        md: \"100%\",\n      },\n    },\n\n    head: {\n      fontSize: {\n        base: \"18px\",\n        md: \"20px\",\n      },\n    },\n\n    smallerDesc: {\n      fontSize: {\n        base: \"10px\",\n        md: \"16px\",\n      },\n    },\n\n    container: {\n      w: \"100px\",\n      h: \"36px\",\n      _hover: {\n        background: \"black\",\n        color: \"white\",\n      },\n    },\n\n    search: {\n      w: \"240px\",\n      h: \"40px\",\n      background: \"#F6F6F6\",\n      borderRadius: \"53px\",\n    },\n\n    font: {\n      fontSize: \"16px\",\n      lineHeight: \"19px\",\n      _hover: {\n        color: \"#FFFFFF\",\n      },\n    },\n\n    popfont: {\n      fontSize: \"12px\",\n      lineHeight: \"14px\",\n      color: \"#999999\",\n    },\n  };\n};\n"],"names":["tabs","id","name","MyAssetsFilterSearchBar","_ref","isListMode","setIsListMode","setSearchQuery","searchQuery","_useStyles","useStyles","root","container","font","popfont","smallerDesc","search","SetList","useCallback","SetGrid","_jsx","_Fragment","children","Flex","w","align","_jsxs","HStack","_objectSpread","Tabs","isLazy","TabList","map","e","i","_createElement","Tab","_selected","color","borderColor","key","Text","Spacer","Box","as","justify","InputGroup","InputLeftElement","pointerEvents","Icon","FaSearch","Input","value","placeholder","borderRadius","borderWidth","onChange","target","width","height","bg","onClick","Image","src","Images_Icons","base","md","head","fontSize","h","_hover","background","lineHeight"],"sourceRoot":""}