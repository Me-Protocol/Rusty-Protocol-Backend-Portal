{"version":3,"file":"static/js/547.390426a2.chunk.js","mappings":"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","sources":["components/DashboardProductItem/index.tsx","components/SkeletonLoader/index.tsx","pages/DashboardModule/DashboardOffers/DashboardOffers.tsx"],"sourcesContent":["import { Box, Flex, HStack, Image, Skeleton, Text } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { DashboardProductItemProps } from \"../../interfaces\";\nimport { NewSvg, TrendingSvg } from \"../../assets/iconsSvg/iconsSvg\";\n\n// import { Cloudinary } from \"@cloudinary/url-gen\";\n// import { backgroundRemoval } from \"@cloudinary/url-gen/actions/effect\";\n\nconst DashboardProductItem: FC<DashboardProductItemProps> = ({\n  productTitle,\n  productSubtitle,\n  points,\n  price,\n  isLoaded,\n  trending,\n  isNew,\n  bgImage,\n  onClick,\n  i,\n  rest,\n}) => {\n  const { root } = useStyles();\n\n  // const cld = new Cloudinary({\n  //   cloud: { cloudName: \"digital-specie\" },\n  // });\n  // const myImage = cld.image(\"sample\").effect(backgroundRemoval());\n\n  // return <Flex {...root} flexDir={\"column\"} onClick={onClick}></Flex>;\n\n  // console.log(isNew);\n\n  return (\n    <Flex {...root} flexDir={\"column\"} pos=\"relative\">\n      <Box w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]} px=\"0px\">\n        <Skeleton borderRadius={{ base: \"8px\", md: \"10px\" }} isLoaded={isLoaded}>\n          <Flex\n            w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n            h={[\"350px\", \"270px\", \"350px\", \"320px\", \"360px\"]}\n            px=\"0px\"\n            borderRadius={{ base: \"8px\", md: \"10px\" }}\n            flexDir={\"column\"}\n            // bg={\"grey\"}\n            bg={\"#F2F2F2\"}\n            // overflow=\"hidden\"\n            className=\"card-hover\"\n            as=\"button\"\n            onClick={onClick}\n            role=\"group\"\n            // bg=\"white\"\n            borderColor={\"#00000012\"}\n            borderWidth=\"1px\"\n            // pos={\"relative\"}\n          >\n            {/* OVERLAY */}\n            <Box\n              pos={\"absolute\"}\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              h={[\"350px\", \"270px\", \"350px\", \"320px\", \"360px\"]}\n              bg={\"#0000000E\"}\n              // bg={\"#F6F6F6\"}\n              zIndex={100}\n            />\n            <Box\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              // h={[\"160px\", \"190px\", \"260px\", \"230px\", \"260px\"]}\n              overflow=\"hidden\"\n            >\n              <Image\n                src={bgImage[0]?.url}\n                w=\"100%\"\n                h={[\"160px\", \"190px\", \"260px\", \"230px\", \"270px\"]}\n                // h=\"100%\"\n                // borderRadius={{ base: \"8px\", md: \"16px\" }}\n                borderBottomEndRadius={{ base: \"8px\", md: \"10px\" }}\n                borderBottomStartRadius={{ base: \"8px\", md: \"10px\" }}\n                objectFit=\"cover\"\n                // className=\"img-card\"\n                fallbackSrc={Images_Icons.appLogoPlaceholder}\n                fallbackStrategy=\"beforeLoadOrError\"\n                mixBlendMode=\"multiply\"\n                _groupHover={{\n                  transform: \"scale(1.2)\",\n                  transition: \"all .2s linear\",\n                }}\n              />\n            </Box>\n\n            <HStack w=\"70%\" alignSelf={\"center\"} mt=\"5px\">\n              <Image\n                src={rest?.brand?.logo}\n                w=\"20px\"\n                h=\"20px\"\n                borderRadius=\"20px\"\n                objectFit={\"contain\"}\n                bg=\"grey\"\n              />\n              <Text noOfLines={1} textTransform={\"uppercase\"}>\n                {productTitle}\n              </Text>\n            </HStack>\n            <Text noOfLines={1} w=\"70%\" alignSelf={\"center\"} opacity={0.6}>\n              {productSubtitle}\n            </Text>\n\n            <Flex\n              pos={\"absolute\"}\n              top={\"-14.5px\"}\n              right={[\n                \"-1.5px\",\n                \"-1.5px\",\n                i === 2 ? \"0px\" : i === 5 ? \"0px\" : i === 8 ? \"0px\" : i === 11 ? \"0px\" : \"-18.5px\",\n                i === 3 ? \"0px\" : i === 7 ? \"0px\" : i === 11 ? \"0px\" : i === 15 ? \"0px\" : \"-15.5px\",\n                i === 3 ? \"0px\" : i === 7 ? \"0px\" : i === 11 ? \"0px\" : i === 15 ? \"0px\" : \"-10.5px\",\n              ]}\n            >\n              {isNew ? <NewSvg /> : null}\n              {/* {!trending ? <TrendingSvg /> : isNew ? <NewSvg /> : null} */}\n            </Flex>\n            <Box\n              bg=\"dark\"\n              pos={\"absolute\"}\n              bottom=\"0\"\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              h=\"30px\"\n              borderBottomRadius={\"10px\"}\n              color=\"white\"\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n            >\n              <Text pt=\"2px\" fontFamily=\"Dot Matrix\" fontSize=\"20px\" textTransform=\"uppercase\">\n                {points} {rest?.brand?.brandName} PT\n              </Text>\n            </Box>\n          </Flex>\n        </Skeleton>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default DashboardProductItem;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      align: \"center\",\n      my: \"5%\",\n      borderRadius: \"16px\",\n      px: 0,\n    },\n  };\n};\n","import {\n  Flex,\n  Skeleton,\n  HStack,\n  Heading,\n  Box,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst SkeletonLoader: FC = (): JSX.Element => {\n  const { root } = useStyles();\n  return (\n    <SimpleGrid\n      columns={[2, 2, 3, 4, 4]}\n      w={\"100%\"}\n      spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n      spacingY={\"5px\"}\n    >\n      {[1, 2, 3, 4]?.map(() => (\n        <Flex {...root} flexDir={\"column\"} key={nanoid()}>\n          <Box w={\"280px\"}>\n            <Skeleton\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              isLoaded={false}\n            >\n              <Flex\n                w={\"280px\"}\n                h={\"280px\"}\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                flexDir={\"column\"}\n                bg={\"#99999951\"}\n                overflow=\"hidden\"\n                className=\"card-hover\"\n                as=\"button\"\n              >\n                {/* OVERLAY */}\n                <Box\n                  pos={\"absolute\"}\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  w={\"280px\"}\n                  h={\"280px\"}\n                  bg={\"#99999951\"}\n                />\n              </Flex>\n            </Skeleton>\n            <Flex flexDir={\"column\"} mt={\"2%\"}>\n              <Flex w={\"280px\"} justify={\"space-between\"} align={\"center\"}>\n                <Skeleton\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  isLoaded={false}\n                >\n                  <Text\n                    fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}\n                    noOfLines={1}\n                  >\n                    productTitle\n                  </Text>\n                </Skeleton>\n              </Flex>\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <Text\n                  fontSize={[\"8px\", \"8px\", \"12px\", \"14px\", \"14px\"]}\n                  opacity={0.7}\n                  noOfLines={1}\n                >\n                  points\n                </Text>\n              </Skeleton>\n\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <HStack>\n                  <Heading fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    points\n                  </Heading>\n                  <Text fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    price\n                  </Text>\n                </HStack>\n              </Skeleton>\n            </Flex>\n          </Box>\n        </Flex>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default SkeletonLoader;\n\nconst useStyles = () => {\n  return {\n    root: {\n      //   w: \"90vw\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      borderRadius: \"16px\",\n    },\n  };\n};\n","import { Flex, SimpleGrid, Spinner, Stack } from \"@chakra-ui/react\";\nimport { lazy, FC, Suspense, useEffect } from \"react\";\nimport { useDashboardStyles } from \"../Dashboard/styles\";\nimport { DashExploreIcon, DashIcon1, DashShopIcon } from \"../../../assets/iconsSvg/iconsSvg\";\nimport Images_Icons from \"../../../constants/icons-images\";\nimport { useSelector } from \"react-redux\";\nimport { AuthReducerProps } from \"../../../interfaces\";\nimport { RootState } from \"../../../redux/store\";\nimport Container from \"../../../components/Container\";\nimport { useGetOffersBasedOnMyPointsQuery } from \"../../../redux/rtkQuery/api\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport DashboardProductItem from \"../../../components/DashboardProductItem\";\nimport SkeletonLoader from \"../../../components/SkeletonLoader\";\nimport { useNavigate } from \"react-router-dom\";\nimport DashboardProductItemOld from \"../../../components/DashboardProductItemOld\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\n\nconst Footer = lazy(() => import(\"../../../components/Footer\"));\nconst Breadcrumbs = lazy(() => import(\"../../../components/Breadcrumbs\"));\nconst DashboardTopCard = lazy(() => import(\"../../../components/DashboardTopCard\"));\n// const DashboardNavBar = lazy(\n//   () => import(\"../../../components/DashboardNavBar\")\n// );\nconst NewDashboardNavBar = lazy(() => import(\"../../../components/NewDashboardNavBar\"));\nconst DashboardNewTopCard = lazy(() => import(\"../../../components/DashboardNewTopCard\"));\n\nconst DashboardOffers: FC = (): JSX.Element => {\n  let navigate = useNavigate();\n  const { root } = useDashboardStyles();\n\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n\n  const { data, isLoading, error }: any = useGetOffersBasedOnMyPointsQuery(\n    { page: 1, limit: 7 },\n    { refetchOnMountOrArgChange: 300 }\n  );\n\n  // useEffect(() => {\n  //   console.log(data, \"LLKIOIOI\");\n  // }, []);\n\n  return (\n    <Flex flexDir={\"column\"}>\n      {/* ----------------------------------------------------------------------NAV BAR------------------------------------------------------------ */}\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        {/* <DashboardNavBar borderBottomRightRadius={\"0px\"} /> */}\n        <NewDashboardNavBar />\n      </Suspense>\n      {/* ----------------------------------------------------------------------TOP CARD------------------------------------------------------------ */}\n      <Container>\n        <Stack {...root}>\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            <Container>\n              <Breadcrumbs\n                breadcrumbs={[\n                  {\n                    name: \"Home\",\n                    link: token ? `${GLOBAL_PREFIX}/dashboard` : `${GLOBAL_PREFIX}/`,\n                  },\n                  {\n                    name: \"Offers\",\n                    link: `${GLOBAL_PREFIX}/dashboard/offers`,\n                    isCurrentPage: true,\n                  },\n                ]}\n              />\n            </Container>\n\n            <DashboardNewTopCard\n              title={`Discover worlds.`}\n              desc={\"Explore brand’s shops.\"}\n              buttonLabel={\"\"}\n              icon={<DashExploreIcon color={\"#FFFFFF\"} w={\"330px\"} h={\"300px\"} />}\n              design={\"\"}\n              // design={Images_Icons.dashboardCardDesign2}\n              onClick={() => {\n                navigate(`${GLOBAL_PREFIX}/dashboard/shop`);\n\n                // navigate(\n                //   `/dashboard/category/${\n                //     data?.data?.[Math.floor(Math.random() * 7)].name\n                //   }`,\n                //   { state: data?.data?.[Math.floor(Math.random() * 7)] }\n                // );\n              }}\n            />\n          </Suspense>\n\n          {isLoading ? (\n            <SkeletonLoader />\n          ) : (\n            <SimpleGrid\n              columns={[2, 2, 3, 4, 4]}\n              w={\"100%\"}\n              spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n              spacingY={\"5px\"}\n              // justifyContent=\"space-between\"\n              // justifyItems={\"space-between\"}\n            >\n              <Suspense fallback={<Spinner size=\"sm\" />}>\n                {data?.data?.offers?.map(\n                  (\n                    e: {\n                      id: number;\n                      slug: string;\n\n                      name: string;\n                      category: { name: string };\n                      price: number | string;\n                      point_discount: number | string;\n                      isNew: boolean;\n                      images: Array<string>;\n                      reward: {\n                        rewardSymbol: string;\n                      };\n                    },\n                    i: number\n                  ) => (\n                    <DashboardProductItem\n                      key={nanoid()}\n                      isLoaded={!isLoading}\n                      productTitle={e.name}\n                      points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                      productSubtitle={e.category.name}\n                      price={e.price}\n                      isNew={e.isNew}\n                      // trending={e.trending}\n                      bgImage={[]}\n                      rest={{ ...e }}\n                      i={i}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`)}\n                    />\n                  )\n                )}\n              </Suspense>\n            </SimpleGrid>\n          )}\n        </Stack>\n      </Container>\n\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        <Footer />\n      </Suspense>\n    </Flex>\n  );\n};\n\nexport default DashboardOffers;\n"],"names":["_ref","_bgImage$","_rest$brand","_rest$brand2","productTitle","productSubtitle","points","isLoaded","price","isNew","trending","bgImage","onClick","i","rest","root","useStyles","_jsx","Flex","_objectSpread","flexDir","pos","children","Box","w","px","Skeleton","borderRadius","base","md","_jsxs","h","bg","className","as","role","borderColor","borderWidth","zIndex","overflow","Image","src","url","borderBottomEndRadius","borderBottomStartRadius","objectFit","fallbackSrc","Images_Icons","fallbackStrategy","mixBlendMode","_groupHover","transform","transition","HStack","alignSelf","mt","brand","logo","Text","noOfLines","textTransform","opacity","top","right","NewSvg","bottom","borderBottomRadius","color","alignItems","justifyContent","pt","fontFamily","fontSize","brandName","align","my","SimpleGrid","columns","spacingX","spacingY","map","_createElement","key","nanoid","justify","Heading","pb","Footer","lazy","Breadcrumbs","NewDashboardNavBar","DashboardNewTopCard","_data$data","_data$data$offers","navigate","useNavigate","useDashboardStyles","token","useSelector","state","authReducer","_useGetOffersBasedOnM","useGetOffersBasedOnMyPointsQuery","page","limit","refetchOnMountOrArgChange","data","isLoading","error","Suspense","fallback","Spinner","size","Container","Stack","breadcrumbs","name","link","concat","GLOBAL_PREFIX","isCurrentPage","title","desc","buttonLabel","icon","DashExploreIcon","design","SkeletonLoader","offers","e","_e$reward","DashboardProductItem","point_discount","reward","rewardSymbol","category","slug"],"sourceRoot":""}