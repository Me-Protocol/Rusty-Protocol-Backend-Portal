{"version":3,"file":"static/js/1138.c1e67eb6.chunk.js","mappings":"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","sources":["components/HorizontalCarousel/index.tsx"],"sourcesContent":["import { Box, Center, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { FC, memo, useRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport ReactCardFlip from \"react-card-flip\";\nimport iconsImages from \"../../constants/icons-images\";\nimport { nanoid } from \"nanoid\";\nimport { BrandDataProps } from \"../../interfaces/responseTypes\";\n\ninterface HorizontalCarouselProps {\n  brandsItems?: BrandDataProps[];\n  rtl?: boolean;\n}\n\nconst HorizontalCarousel: FC<HorizontalCarouselProps> = ({ rtl, brandsItems }) => {\n  const sliderRef = useRef<any>(null);\n  const [cardHover, setCardHover] = useState<boolean>(false);\n  const [activeIndex, setActiveIndex] = useState<number | undefined>(0);\n\n  // const slidesToShow = useBreakpointValue(\n  //   {\n  //     base: 2.6,\n  //     sm: 3.1,\n  //     md: 3.5,\n  //     lg: 3.5,\n  //     xl: 3,\n  //   },\n  //   { fallback: \"md\" }\n  // );\n\n  const settings = {\n    // focusOnSelect: true,\n    dots: false,\n    infinite: true,\n    // slidesToShow,\n    slidesToScroll: 1,\n    pauseOnHover: true,\n    autoplay: true,\n    speed: 2000,\n    autoplaySpeed: 2000,\n    variableWidth: true,\n    cssEase: \"linear\",\n    rtl,\n  };\n  const { root } = useStyles();\n\n  return (\n    <Flex {...root} flexDir={\"column\"}>\n      <Box w={\"100%\"}>\n        <Slider ref={sliderRef} {...settings}>\n          {brandsItems?.map((e, i: number) => (\n            <Box key={nanoid()} mr={5}>\n              {i % 2 === 0 ? (\n                <Flex>\n                  <ReactCardFlip\n                    isFlipped={activeIndex === i && cardHover}\n                    flipDirection=\"horizontal\"\n                  >\n                    <Image\n                      w={[\"100px\", \"180px\", \"180px\", \"200px\", \"220px\"]}\n                      h={[\"50px\", \"150px\", \"150px\", \"180px\", \"200px\"]}\n                      bg={\"#BBBBBB\"}\n                      borderRadius={{ base: \"16px\", md: \"48px\" }}\n                      objectFit={\"contain\"}\n                      onMouseEnter={() => {\n                        setActiveIndex(i);\n                        if (activeIndex === i) {\n                          setCardHover(true);\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        setActiveIndex(undefined);\n                      }}\n                      src={e?.logo}\n                    />\n\n                    <Center\n                      w={[\"100px\", \"180px\", \"180px\", \"200px\", \"220px\"]}\n                      h={[\"50px\", \"150px\", \"150px\", \"180px\", \"200px\"]}\n                      borderRadius={{ base: \"16px\", md: \"48px\" }}\n                      bg={\"#BBBBBB34\"}\n                    >\n                      <Center bg={\"dark\"} w={\"70%\"} h={\"20%\"} borderRadius={\"110px\"}>\n                        <Image h={\"50%\"} w={\"20%\"} src={iconsImages.appLogoLight} />\n                        <Text\n                          fontSize={[\"10px\", \"10px\", \"10px\", \"10px\", \"12px\"]}\n                          color={\"light\"}\n                          noOfLines={1}\n                        >\n                          {\" \"}\n                          / {e.name}\n                        </Text>\n                      </Center>\n                    </Center>\n                  </ReactCardFlip>\n                </Flex>\n              ) : (\n                <Flex>\n                  <ReactCardFlip\n                    isFlipped={activeIndex === i && cardHover}\n                    flipDirection=\"horizontal\"\n                  >\n                    <Image\n                      w={[\"50px\", \"90px\", \"90px\", \"100px\", \"110px\"]}\n                      h={[\"50px\", \"150px\", \"150px\", \"180px\", \"200px\"]}\n                      bg={\"grey\"}\n                      borderRadius={{ base: \"16px\", md: \"110px\" }}\n                      onMouseEnter={() => {\n                        setActiveIndex(i);\n                        if (activeIndex === i) {\n                          setCardHover(!cardHover);\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        setActiveIndex(undefined);\n                      }}\n                      objectFit={\"contain\"}\n                      src={e.logo}\n                    />\n                    <Center\n                      w={[\"50px\", \"90px\", \"90px\", \"100px\", \"110px\"]}\n                      h={[\"50px\", \"150px\", \"150px\", \"180px\", \"200px\"]}\n                      borderRadius={{ base: \"16px\", md: \"110px\" }}\n                      bg={\"#BBBBBB\"}\n                    >\n                      <Center bg={\"dark\"} w={\"70%\"} h={\"20%\"} borderRadius={\"110px\"}>\n                        <Image\n                          h={\"50%\"}\n                          w={\"40%\"}\n                          src={iconsImages.appLogoLight}\n                          objectFit=\"contain\"\n                        />\n                        <Text\n                          fontSize={[\"10px\", \"10px\", \"10px\", \"10px\", \"12px\"]}\n                          color={\"light\"}\n                          noOfLines={1}\n                        >\n                          {\" \"}\n                          / {e.name}\n                        </Text>\n                      </Center>\n                    </Center>\n                  </ReactCardFlip>\n                </Flex>\n              )}\n            </Box>\n          ))}\n        </Slider>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default memo(HorizontalCarousel);\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      overflow: \"hidden\",\n    },\n  };\n};\n"],"names":["HorizontalCarousel","_ref","rtl","brandsItems","sliderRef","useRef","_useState","useState","_useState2","_slicedToArray","cardHover","setCardHover","_useState3","_useState4","activeIndex","setActiveIndex","settings","dots","infinite","slidesToScroll","pauseOnHover","autoplay","speed","autoplaySpeed","variableWidth","cssEase","root","useStyles","_jsx","Flex","_objectSpread","flexDir","children","Box","w","Slider","ref","map","e","i","mr","_jsxs","ReactCardFlip","isFlipped","flipDirection","Image","h","bg","borderRadius","base","md","objectFit","onMouseEnter","onMouseLeave","undefined","src","logo","Center","iconsImages","Text","fontSize","color","noOfLines","name","nanoid","memo","pt","align","pb","overflow"],"sourceRoot":""}