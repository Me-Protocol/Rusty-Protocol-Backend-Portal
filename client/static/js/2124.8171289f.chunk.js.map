{"version":3,"file":"static/js/2124.8171289f.chunk.js","mappings":"6UAYMA,EAAwB,SAAHC,GAAmBA,EAAbC,cAAkC,IAADC,EAAAC,EAC5DC,GAAWC,EAAAA,EAAAA,MAGPC,IADSC,EAAAA,EAAAA,OACmBC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,WAAW,IAA/EJ,OACAK,GAAgCH,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMG,WAAW,IAAnFD,UAERE,EAAsCC,IAA9BC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UACxB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKL,GAAI,IAAEM,IAAI,WAAWC,QAAS,SAASC,UAI/CL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,EAAE,OAAOC,GAAG,UAASH,UACxBL,EAAAA,EAAAA,KAACS,EAAAA,QAAS,CAAAJ,UACRK,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAN,SAAA,EACLL,EAAAA,EAAAA,KAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCJ,GAAQ,IACZc,GAAG,SACHC,QAAS,WACC3B,EAAS,GAAD4B,OAAIC,EAAAA,GAApB3B,EAAiC,aAAyC,KAC5E,EAAEiB,UAEFL,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAaC,QAASC,UAAW,cAG/CpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KAGPX,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAjB,SAAA,EAOEL,EAAAA,EAAAA,KAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACU,GAAG,UAAab,GAAS,IAAEc,QAAS,kBAAM3B,EAAS,GAAD4B,OAAIC,EAAAA,GAAa,QAAO,EAACV,UAC/EL,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,IAAKC,EAAAA,EAAaK,UAI3BvB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACW,GAAG,SAAQP,UACfL,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACLC,GAAI,MACJC,KAAI,GAAAZ,OAAc,OAATrB,QAAS,IAATA,GAAmB,QAAVT,EAATS,EAAWkC,gBAAQ,IAAA3C,OAAV,EAATA,EAAqB0C,MAC9BT,IAAc,OAATxB,QAAS,IAATA,GAAmB,QAAVR,EAATQ,EAAWkC,gBAAQ,IAAA1C,OAAV,EAATA,EAAqB2C,eAC1BC,KAAM,qBASxB,EAEA,WAAeC,EAAAA,EAAAA,MAAKjD,GAEb,IAAMe,EAAkB,WAC7B,MAAO,CACLC,KAAM,CACJU,EAAG,OACHwB,OAAQ,IAEVjC,SAAU,CACRkC,MAAO,OACPC,OAAQ,OACRC,QAAS,SACTC,MAAO,SACPC,GAAI,MAENrC,UAAW,CACTiC,MAAO,OACPC,OAAQ,OACRC,QAAS,SACTC,MAAO,UAGb,C","sources":["components/RedeemNavbar/index.tsx"],"sourcesContent":["import { Flex, HStack, Image, Spacer, Avatar, Box } from \"@chakra-ui/react\";\r\nimport { FC, memo, useEffect } from \"react\";\r\nimport Images_Icons from \"../../constants/icons-images\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthReducerProps, UserReducerProps } from \"../../interfaces\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { getUserCollection, getUserInfo } from \"../../redux/UserSlice\";\r\nimport Container from \"../Container\";\r\nimport { GLOBAL_PREFIX } from \"../../constants\";\r\n\r\nconst RedeemNavBar: FC<any> = ({ customPadding }): JSX.Element => {\r\n  let navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\r\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const { root, homeIcon, iconsLogo } = useNavbarStyles();\r\n  return (\r\n    <Flex {...root} pos=\"absolute\" flexDir={\"column\"}>\r\n      {/* ----------------------------------------------------------------TOP SECTION ----------------------------------------------------------------*/}\r\n\r\n      {/* ------------------------------ ME PROTOCOL LOGO AREA ------------------------------------ */}\r\n      <Box w=\"100%\" bg=\"#E3E3E3\">\r\n        <Container>\r\n          <HStack>\r\n            <Flex\r\n              {...homeIcon}\r\n              as=\"button\"\r\n              onClick={() => {\r\n                token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\r\n              }}\r\n            >\r\n              <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\r\n            </Flex>\r\n\r\n            <Spacer />\r\n\r\n            {/* ---------------------------------------- MESSAGE ICON, CART ICON AND PROFILE ICON --------------------------------------------*/}\r\n            <>\r\n              {/* ++++++++++++++++++ Message icon is here +++++++++++++++++++++ */}\r\n              {/* <Flex as=\"button\" {...iconsLogo} pos=\"relative\">\r\n                <Image src={Images_Icons.messageIcon} />\r\n              </Flex> */}\r\n\r\n              {/* ++++++++++++++++++ The END Notification Bell is here +++++++++++++++++++++ */}\r\n              <Flex as=\"button\" {...iconsLogo} onClick={() => navigate(`${GLOBAL_PREFIX}/bag`)}>\r\n                <Image src={Images_Icons.box} />\r\n              </Flex>\r\n\r\n              {/* --------------------- USER PROFILE IMAGE ---------------------- */}\r\n              <Flex as=\"button\">\r\n                <Avatar\r\n                  ml={\"5px\"}\r\n                  name={`${user_data?.customer?.name}`}\r\n                  src={user_data?.customer?.profilePicture}\r\n                  size={\"xs\"}\r\n                />\r\n              </Flex>\r\n            </>\r\n          </HStack>\r\n        </Container>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default memo(RedeemNavBar);\r\n\r\nexport const useNavbarStyles = () => {\r\n  return {\r\n    root: {\r\n      w: \"100%\",\r\n      zIndex: 10,\r\n    },\r\n    homeIcon: {\r\n      width: \"44px\",\r\n      height: \"44px\",\r\n      justify: \"center\",\r\n      align: \"center\",\r\n      mr: \"2%\",\r\n    },\r\n    iconsLogo: {\r\n      width: \"30px\",\r\n      height: \"24px\",\r\n      justify: \"center\",\r\n      align: \"center\",\r\n    },\r\n  };\r\n};\r\n"],"names":["RedeemNavBar","_ref","customPadding","_user_data$customer","_user_data$customer2","navigate","useNavigate","token","useDispatch","useSelector","state","authReducer","user_data","userReducer","_useNavbarStyles","useNavbarStyles","root","homeIcon","iconsLogo","_jsx","Flex","_objectSpread","pos","flexDir","children","Box","w","bg","Container","_jsxs","HStack","as","onClick","concat","GLOBAL_PREFIX","Image","src","Images_Icons","appLogo","objectFit","Spacer","_Fragment","box","Avatar","ml","name","customer","profilePicture","size","memo","zIndex","width","height","justify","align","mr"],"sourceRoot":""}