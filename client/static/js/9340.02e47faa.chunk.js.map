{"version":3,"file":"static/js/9340.02e47faa.chunk.js","mappings":"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","sources":["assets/icons/Line 69.svg","assets/icons/Vector.svg","pages/Notification/components/CustomCheckbox.tsx","pages/Notification/components/FilterListItem.tsx","pages/Notification/interface.ts","pages/Notification/components/NotificationItem.tsx","pages/Notification/Notification.tsx","../node_modules/@chakra-ui/layout/src/wrap.tsx"],"sourcesContent":["var _line;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLine69(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 2,\n    viewBox: \"0 0 10 2\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    y1: 1.25,\n    x2: 10,\n    y2: 1.25,\n    stroke: \"white\",\n    strokeWidth: 1.5\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLine69);\nexport default __webpack_public_path__ + \"static/media/Line 69.1eacae240c9a94a7534c82a1c63fd37f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVector(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 9,\n    viewBox: \"0 0 11 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 4.8571L4.5 7.3572L9.8572 2\",\n    stroke: \"white\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"square\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector);\nexport default __webpack_public_path__ + \"static/media/Vector.5d9a5b451caa8273a2971c7cdb178768.svg\";\nexport { ForwardRef as ReactComponent };","import checkIcon from \"../../../assets/icons/Vector.svg\";\nimport { useCheckbox, chakra, Flex, Image, UseCheckboxProps } from \"@chakra-ui/react\";\n\nexport const CustomCheckbox = (props?: UseCheckboxProps) => {\n    const { state, getCheckboxProps, getInputProps, htmlProps } = useCheckbox(props);\n\n    return (\n        <chakra.label\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            // gridColumnGap={2}\n            w=\"25px\"\n            bg=\"dark\"\n            borderRadius=\"2px\"\n            // px={1.4}\n            h={6}\n            cursor=\"pointer\"\n            {...htmlProps}\n        >\n            <input {...getInputProps()} hidden />\n            <Flex\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                // border='2px solid'\n                // borderColor='green.500'\n                px={2}\n                h={6}\n                {...getCheckboxProps()}\n            >\n                {state.isChecked && <Image src={checkIcon} />}\n            </Flex>\n        </chakra.label>\n    );\n};","import { Flex, TextProps, Text } from \"@chakra-ui/react\"\nimport { CustomCheckbox } from \"./CustomCheckbox\"\nimport { NotificationType } from \"../../../redux/rtkQuery/api\";\nimport { Dispatch, SetStateAction } from \"react\";\n\ninterface FilterListItemProps {\n    isItemEven: boolean,\n    type: NotificationType\n    itemHeading: string;\n    itemHeadingProps?: TextProps;\n    itemSubHeading: string;\n    itemSubHeadingProps?: TextProps;\n    selectedFilter: NotificationType[] | undefined;\n    setFilter: Dispatch<SetStateAction<NotificationType[] | undefined>>\n}\n\nexport const FilterListItem = ({\n    itemHeading,\n    itemSubHeading,\n    itemHeadingProps,\n    itemSubHeadingProps,\n    isItemEven,\n    type,\n    selectedFilter,\n    setFilter,\n}: FilterListItemProps) => {\n    const bg = isItemEven ? '#F2F2F2' : '';\n    const borderColor = !isItemEven ? \"1px solid rgba(0, 0, 0, 0.07)\" : '';\n\n    // update the filter state\n    const handleFilter = (type: NotificationType) => {\n        // if selectedFilter is undefined then set it to an array with the type\n        if (!selectedFilter) {\n            setFilter([type]);\n            return;\n        }\n\n        // if selectedFilter is not undefined then check if the type is already in the array\n        // if it is then remove it from the array\n        // if it is not then add it to the array\n        if (selectedFilter?.find((value) => value === type)) {\n            setFilter(selectedFilter?.filter((value) => value !== type));\n            return;\n        }\n\n        setFilter([...selectedFilter, type]);\n    }\n\n    return (\n        <Flex\n            flexDir={\"row\"}\n            justify={\"space-between\"}\n            alignItems=\"center\"\n            padding=\"1rem\"\n            bg={bg}\n            borderColor={borderColor}\n        >\n            <Flex flexDir=\"column\">\n                <Text {...itemHeadingProps}>{itemHeading}</Text>\n                <Text {...itemSubHeadingProps}>{itemSubHeading}</Text>\n            </Flex>\n\n            <Flex>\n                <CustomCheckbox value={type} isChecked={selectedFilter?.find((value) => value === type) ? true : false} onChange={(e) => handleFilter(e.target.value as NotificationType)} />\n            </Flex>\n        </Flex>\n    )\n}","import { NotificationType } from \"../../redux/rtkQuery/api\";\n\nexport interface FilterItem {\n  type: NotificationType;\n  header: string;\n  subHeader: string;\n}\n\nexport const filterItems: FilterItem[] = [\n  {\n    type: NotificationType.NEWS,\n    header: \"News\",\n    subHeader: \"New brands\",\n  },\n  {\n    type: NotificationType.OFFER,\n    header: \"New listed offers\",\n    subHeader: \"From brands you follow\",\n  },\n  {\n    type: NotificationType.BRAND,\n    header: \"Token variations\",\n    subHeader: \"From watchlist brands\",\n  },\n  {\n    type: NotificationType.EXPIRING,\n    header: \"Item expiring\",\n    subHeader: \"From your saved\",\n  },\n  {\n    type: NotificationType.POINT,\n    header: \"Asset movements\",\n    subHeader: \"New deposits, cards, etc\",\n  },\n  {\n    type: NotificationType.ORDER,\n    header: \"From orders\",\n    subHeader: \"Expiring vouchers\",\n  },\n  {\n    type: NotificationType.OTHER,\n    header: \"Other\",\n    subHeader: \"\",\n  },\n];\n\nexport interface NotificationResponseDto {\n  id: string;\n  createdAt: string;\n  updatedAt: string;\n  type: NotificationType;\n  title: string;\n  message: string;\n  emailMessage: string;\n  isRead: boolean;\n  userId: string;\n  orderId: string;\n  news_id: string;\n  image: string;\n  icon: string;\n  offers: any[];\n  rewards: any[];\n  brands: any[];\n}\n","import { Flex, Circle, Image, Text, Avatar, WrapItem } from \"@chakra-ui/react\";\nimport Images_Icons from \"../../../constants/icons-images\";\nimport { NotificationResponseDto } from \"../interface\";\nimport { NotificationType, useGetNotificationMutation } from \"../../../redux/rtkQuery/api\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\n\ninterface NotificationItemProps {\n  dto: NotificationResponseDto;\n  lowerSec: any;\n  boxCircleColor: any;\n  bodyStyle: any;\n  subHeadStyle: any;\n}\n\nexport const NotificationItem = ({\n  dto,\n  lowerSec,\n  boxCircleColor,\n  bodyStyle,\n  subHeadStyle,\n}: NotificationItemProps) => {\n  const [getNotification] = useGetNotificationMutation();\n  let navigate = useNavigate();\n\n  const [showHoverState, setShowHoverState] = useState<boolean>(false);\n  const [updatedDto, setUpdateDto] = useState<NotificationResponseDto>(dto);\n\n  const handleNavigation = () => {\n    // if updatedDto.type === 'offer' then navigate to offer page\n    if (updatedDto.type === NotificationType.OFFER) {\n      // navigate(`/offer/${updatedDto.offerId}`);\n      // navigate(`${GLOBAL_PREFIX}/dashboard/offers`);\n      return;\n    }\n    // if updatedDto.type === 'brand' then navigate to brand page\n    if (updatedDto.type === NotificationType.BRAND) {\n      // navigate(`/brand/${updatedDto.brandId}`);\n      return;\n    }\n    // if updatedDto.type === 'order' then navigate to order page\n    if (updatedDto.type === NotificationType.ORDER && updatedDto.orderId) {\n      // navigate(`${GLOBAL_PREFIX}/dashboard/orders/${updatedDto.orderId}`);\n      return;\n    }\n    // if updatedDto.type === 'news' then navigate to news page\n    if (updatedDto.type === NotificationType.NEWS && updatedDto.news_id) {\n      // navigate(`/news/${updatedDto.news_id}`);\n      return;\n    }\n    // if updatedDto.type === 'user' then navigate to user page\n    if (updatedDto.type === NotificationType.OTHER && updatedDto.userId) {\n      // navigate(`/user/${updatedDto.userId}`);\n      return;\n    }\n  };\n\n  async function handleGetAndUpdateNotification() {\n    if (updatedDto.isRead) {\n      setShowHoverState(true);\n      handleNavigation();\n      return;\n    }\n    await getNotification({ id: dto.id })\n      .then((res: any) => {\n        if (res?.data?.statusCode === 200) {\n          setShowHoverState(true);\n          setUpdateDto(res?.data.data);\n          handleNavigation();\n        }\n      })\n      .catch((e: any | unknown) => {\n        console.log(\"GET: Handle get and update Notification\", e);\n      });\n  }\n\n  return (\n    <Flex\n      {...lowerSec}\n      flexDir={\"row\"}\n      justify={\"space-between\"}\n      padding=\"1rem\"\n      borderBottom={\"1px\"}\n      borderBottomColor=\"gray.300\"\n      bg={showHoverState ? \"#F2F2F2\" : \"\"}\n      onClick={handleGetAndUpdateNotification}\n    >\n      {/* status notification  */}\n      <Flex alignItems={\"center\"}>\n        {!updatedDto.isRead && <Circle size=\"10px\" {...boxCircleColor} />}\n\n        {/* The brand image is here */}\n        <WrapItem>\n          <Avatar m={4} size=\"sm\" name=\"Brand Name\" src={updatedDto?.icon} />{\" \"}\n        </WrapItem>\n      </Flex>\n\n      <Flex flexDir={\"column\"} mr=\"4%\">\n        <Text {...bodyStyle}>{updatedDto.title}</Text>\n        <Text {...subHeadStyle}>{updatedDto.message}</Text>\n      </Flex>\n      {/* The collection brand image is here */}\n      <Image\n        h=\"100px\"\n        w={\"100px\"}\n        src={updatedDto?.image}\n        objectFit={\"contain\"}\n        bg=\"grey\"\n        fallbackStrategy=\"beforeLoadOrError\"\n        fallbackSrc={Images_Icons.appLogoPlaceholder}\n      />\n    </Flex>\n  );\n};\n","// @flow\r\nimport { Flex, Text, Spacer, Image, Stack, Box, Spinner, Center } from \"@chakra-ui/react\";\r\nimport { lazy, Suspense, useEffect, useState } from \"react\";\r\n// import DashboardNavBar from \"../../components/DashboardNavBar\";\r\nimport lineicon from \"../../assets/icons/Line 69.svg\";\r\nimport { NotificationType, useGetAllNotificationsQuery } from \"../../redux/rtkQuery/api\";\r\nimport Container from \"../../components/Container\";\r\nimport Lottie from \"lottie-react\";\r\nimport noNotificationAnimation from \"../../assets/json/4021-no-notification-state.json\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthReducerProps, UserReducerProps } from \"../../interfaces\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { setPrevNotificationCount } from \"../../redux/UserSlice\";\r\nimport { Dispatch } from \"redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { FilterListItem } from \"./components/FilterListItem\";\r\nimport { filterItems } from \"./interface\";\r\nimport { NotificationItem } from \"./components/NotificationItem\";\r\n// const DashboardNavBar = lazy(() => import(\"../../components/DashboardNavBar\"));\r\nconst NewDashboardNavBar = lazy(() => import(\"../../components/NewDashboardNavBar\"));\r\n\r\nconst style = {\r\n  height: 300,\r\n};\r\n\r\nexport const Notification = () => {\r\n  const [isFilterActive, setIsFilterActive] = useState<boolean>(true);\r\n  const [filters, setFilters] = useState<NotificationType[] | undefined>(undefined);\r\n\r\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\r\n  const { prev_notification_count }: UserReducerProps = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const {\r\n    root,\r\n    nameStyles,\r\n    boxCircleColor,\r\n    leftSection,\r\n    rightSection,\r\n    lowerSec,\r\n    headingStyle,\r\n    subHeadStyle,\r\n    bodyStyle,\r\n    headingStyle2,\r\n  } = useNotificationStyles();\r\n\r\n  const { data, isLoading } = useGetAllNotificationsQuery(\r\n    { page: 1, types: filters },\r\n    {\r\n      refetchOnMountOrArgChange: true,\r\n      skip: !token,\r\n    }\r\n  );\r\n\r\n  const notificationArray: any = data?.data;\r\n\r\n  // console.log(\"notificationArray\", data?.data);\r\n  // console.log('filter', filter)\r\n\r\n  useEffect(() => {\r\n    dispatch(setPrevNotificationCount(notificationArray?.total));\r\n  }, [notificationArray?.total]);\r\n\r\n  return (\r\n    <Flex flexDir={\"column\"}>\r\n      {/* ----------------------------------------------------------------------NAV BAR------------------------------------------------------------ */}\r\n      <Suspense fallback={<Spinner size=\"sm\" />}>\r\n        {/* <DashboardNavBar /> */}\r\n        <NewDashboardNavBar />\r\n      </Suspense>\r\n      {/* ----------------------------------------------------------------------TOP CARDS------------------------------------------------------------ */}\r\n\r\n      <Container>\r\n        <Stack {...root}>\r\n          <Text {...nameStyles}>\r\n            Notifications ({notificationArray?.total})\r\n            {/* {notificationArray?.total - prev_notification_count > 0 &&\r\n              `(\r\n            ${notificationArray?.total - prev_notification_count})`} */}\r\n          </Text>\r\n          <Spacer />\r\n          <Flex>\r\n            {/* -----------------------------------LEFT SECTION---------------------------------------------- */}\r\n            {isLoading && (\r\n              <Center>\r\n                <Spinner alignContent={\"center\"} justifyContent={\"center\"} />\r\n              </Center>\r\n            )}\r\n            {notificationArray && !isLoading && (\r\n              <Flex {...leftSection} flexDir={\"column\"}>\r\n                {notificationArray && notificationArray.total === 0 && (\r\n                  <Box key={nanoid()}>\r\n                    <Lottie animationData={noNotificationAnimation} style={style} />\r\n                    <Text alignContent={\"center\"} justifyContent={\"center\"}>\r\n                      Dear user, you have no notification yet.\r\n                    </Text>\r\n                  </Box>\r\n                )}\r\n                <Flex flexDir=\"column\">\r\n                  {notificationArray &&\r\n                    notificationArray.notifications?.map((e: any) => (\r\n                      <NotificationItem\r\n                        key={nanoid()}\r\n                        dto={e}\r\n                        lowerSec={{ ...lowerSec }}\r\n                        bodyStyle={{ ...bodyStyle }}\r\n                        boxCircleColor={{ ...boxCircleColor }}\r\n                        subHeadStyle={{ ...subHeadStyle }}\r\n                      />\r\n                    ))}\r\n                </Flex>\r\n              </Flex>\r\n            )}\r\n\r\n            <Spacer m={\"1%\"} />\r\n            {/* -----------------------------------RIGHT SECTION---------------------------------------------- */}\r\n            <Flex {...rightSection} flexDir=\"column\">\r\n              <Flex flexDir=\"column\">\r\n                {/* +++++++++++++++++++++++++++++++ Filters ++++++++++++++++++++++++++++++++++++++ */}\r\n                <Flex\r\n                  flexDir={\"row\"}\r\n                  justify={\"space-between\"}\r\n                  padding=\"1rem\"\r\n                  border={\"1px solid rgba(0, 0, 0, 0.07)\"}\r\n                >\r\n                  <Text {...headingStyle}>Filters</Text>\r\n                  <Flex>\r\n                    {/* <Checkbox borderColor={\"#00000027\"} spacing={\"0.5rem\"}></Checkbox> */}\r\n                    <Box\r\n                      as=\"button\"\r\n                      borderRadius=\"2px\"\r\n                      bg=\"#000000\"\r\n                      color=\"white\"\r\n                      px={2}\r\n                      h={6}\r\n                      onClick={() => setIsFilterActive(!isFilterActive)}\r\n                    >\r\n                      <Image src={lineicon} />\r\n                    </Box>\r\n                  </Flex>\r\n                </Flex>\r\n                {/* -------------------------------- Filter Contents ---------------------------- */}\r\n                {isFilterActive && (\r\n                  <Flex flexDir={\"column\"}>\r\n                    {/* map the notification type as an array instead of listing them separately  */}\r\n                    {filterItems.map((item, index) => {\r\n                      // if index is even set borderColor else set bg to F2F2F2 instead.\r\n                      return (\r\n                        <FilterListItem\r\n                          key={nanoid()}\r\n                          isItemEven={index % 2 ? false : true}\r\n                          type={item.type}\r\n                          itemHeading={item.header}\r\n                          itemSubHeading={item.subHeader}\r\n                          itemHeadingProps={{ ...headingStyle }}\r\n                          itemSubHeadingProps={{ ...headingStyle2 }}\r\n                          selectedFilter={filters}\r\n                          setFilter={setFilters}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Flex>\r\n                )}\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        </Stack>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nexport const useNotificationStyles = () => {\r\n  return {\r\n    root: {\r\n      w: \"100%\",\r\n      // px: \"10%\",\r\n      // px: [5, 5, 10, 20, 40],\r\n      //   h: \"458px\",\r\n      mt: \"108px\",\r\n      pt: \"3%\",\r\n      overflow: \"hidden\",\r\n      // bg: \"green\",\r\n    },\r\n    nameStyles: {\r\n      fontSize: [\"20px\", \"20px\"],\r\n    },\r\n    itemBox: {\r\n      w: \"100%\",\r\n      h: \"3vw\",\r\n      bg: \"white\",\r\n      border: \"1px\",\r\n      justify: \"space-between\",\r\n      align: \"center\",\r\n      px: \"5%\",\r\n    },\r\n    boxCircleColor: {\r\n      bgColor: \"#3478F6\",\r\n    },\r\n    infoBox: {\r\n      w: \"60%\",\r\n      h: \"10vw\",\r\n      px: \"2%\",\r\n      borderBottom: \"1px\",\r\n      borderBottomColor: \"gray.300\",\r\n    },\r\n    rootBox: {\r\n      w: \"100%\",\r\n      h: \"100%\",\r\n      borderRadius: \"15px\",\r\n      overflow: \"hidden\",\r\n      borderWidth: \"1px\",\r\n      borderColor: \"#00000007\",\r\n    },\r\n    leftSection: {\r\n      h: \"100%\",\r\n      w: \"55%\",\r\n    },\r\n    rightSection: {\r\n      h: \"100%\",\r\n      w: \"45%\",\r\n      py: \"3%\",\r\n    },\r\n    lowerSec: {\r\n      w: \"100%\",\r\n      align: \"center\",\r\n    },\r\n    headingStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"18px\"],\r\n    },\r\n    headingStyle2: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"18px\"],\r\n      color: \"#999999\",\r\n    },\r\n    subHeadStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"12px\", \"12px\", \"14px\"],\r\n    },\r\n    bodyStyle: {\r\n      fontSize: [\"14px\", \"14px\", \"16px\", \"16px\", \"18px\"],\r\n      color: \"#000000\",\r\n    },\r\n    button: {\r\n      borderWidth: 1,\r\n      borderColor: \"#000000\",\r\n      px: \"2%\",\r\n      py: \"0.5%\",\r\n      borderRadius: \"100px\",\r\n    },\r\n    contain: {\r\n      w: \"100%\",\r\n      h: \"64px\",\r\n      mt: \"297px\",\r\n    },\r\n    head: {\r\n      fontSize: {\r\n        base: \"18px\",\r\n        md: \"20px\",\r\n      },\r\n    },\r\n\r\n    smallerDesc: {\r\n      fontSize: {\r\n        base: \"10px\",\r\n        md: \"16px\",\r\n      },\r\n    },\r\n\r\n    container: {\r\n      w: \"100px\",\r\n      _hover: {\r\n        background: \"black\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n\r\n    search: {\r\n      w: \"240px\",\r\n      h: \"40px\",\r\n      background: \"#F6F6F6\",\r\n      borderRadius: \"53px\",\r\n    },\r\n\r\n    font: {\r\n      fontSize: \"16px\",\r\n      lineHeight: \"19px\",\r\n      _hover: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n\r\n    popfont: {\r\n      fontSize: \"12px\",\r\n      lineHeight: \"14px\",\r\n      color: \"#999999\",\r\n    },\r\n    singleCol: {\r\n      w: \"44%\",\r\n      h: \"150px\",\r\n      borderRadius: \"3px\",\r\n      borderWidth: \"1px\",\r\n      borderColor: \"#9999992B\",\r\n      overflow: \"hidden\",\r\n      mb: \"2vw\",\r\n    },\r\n    popContentStyle: {\r\n      borderRadius: \"0\",\r\n      width: \"100%\",\r\n      background: \"#FFFFFF\",\r\n      border: \"0px\",\r\n    },\r\n    colOptionText: {\r\n      fontSize: \"12px\",\r\n    },\r\n  };\r\n};\r\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { Children, useMemo } from \"react\"\n\nexport interface WrapProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The space between each child (even if it wraps)\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The horizontal space between the each child (even if it wraps). Defaults to `spacing` if not defined.\n   * @type SystemProps[\"margin\"]\n   */\n  spacingX?: SystemProps[\"margin\"]\n  /**\n   * The vertical space between the each child (even if it wraps). Defaults to `spacing` if not defined.\n   * @type SystemProps[\"margin\"]\n   */\n  spacingY?: SystemProps[\"margin\"]\n  /**\n   * The `justify-content` value (for cross-axis alignment)\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * The `align-items` value (for main axis alignment)\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The `flex-direction` value\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * If `true`, the children will be wrapped in a `WrapItem`\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n}\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/wrap\n */\nexport const Wrap = forwardRef<WrapProps, \"div\">(function Wrap(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const _children = useMemo(\n    () =>\n      shouldWrapChildren\n        ? Children.map(children, (child, index) => (\n            <WrapItem key={index}>{child}</WrapItem>\n          ))\n        : children,\n    [children, shouldWrapChildren],\n  )\n\n  return (\n    <chakra.div ref={ref} className={cx(\"chakra-wrap\", className)} {...rest}>\n      <chakra.ul\n        className=\"chakra-wrap__list\"\n        __css={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: justify,\n          alignItems: align,\n          flexDirection: direction,\n          listStyleType: \"none\",\n          gap: spacing,\n          columnGap: spacingX,\n          rowGap: spacingY,\n          padding: \"0\",\n        }}\n      >\n        {_children}\n      </chakra.ul>\n    </chakra.div>\n  )\n})\n\nWrap.displayName = \"Wrap\"\n\nexport interface WrapItemProps extends HTMLChakraProps<\"li\"> {}\n\nexport const WrapItem = forwardRef<WrapItemProps, \"li\">(function WrapItem(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  return (\n    <chakra.li\n      ref={ref}\n      __css={{ display: \"flex\", alignItems: \"flex-start\" }}\n      className={cx(\"chakra-wrap__listitem\", className)}\n      {...rest}\n    />\n  )\n})\n\nWrapItem.displayName = \"WrapItem\"\n"],"names":["CustomCheckbox","props","_useCheckbox","useCheckbox","state","getCheckboxProps","getInputProps","htmlProps","_jsxs","chakra","label","_objectSpread","display","flexDirection","alignItems","w","bg","borderRadius","h","cursor","children","_jsx","hidden","Flex","justifyContent","px","isChecked","Image","src","checkIcon","FilterListItem","_ref","itemHeading","itemSubHeading","itemHeadingProps","itemSubHeadingProps","isItemEven","type","selectedFilter","setFilter","borderColor","flexDir","justify","padding","Text","value","find","onChange","e","filter","concat","_toConsumableArray","handleFilter","target","filterItems","NotificationType","NEWS","header","subHeader","OFFER","BRAND","EXPIRING","POINT","ORDER","OTHER","NotificationItem","dto","lowerSec","boxCircleColor","bodyStyle","subHeadStyle","_useGetNotificationMu","useGetNotificationMutation","getNotification","_slicedToArray","_useState","useNavigate","useState","_useState2","showHoverState","setShowHoverState","_useState3","_useState4","updatedDto","setUpdateDto","handleNavigation","orderId","news_id","userId","_handleGetAndUpdateNotification","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isRead","abrupt","id","then","res","_res$data","data","statusCode","catch","console","log","stop","apply","arguments","borderBottom","borderBottomColor","onClick","Circle","size","WrapItem","Avatar","m","name","icon","mr","title","message","image","objectFit","fallbackStrategy","fallbackSrc","Images_Icons","appLogoPlaceholder","NewDashboardNavBar","lazy","style","height","_notificationArray$no","isFilterActive","setIsFilterActive","undefined","filters","setFilters","token","useSelector","authReducer","dispatch","userReducer","prev_notification_count","useDispatch","_useNotificationStyle","useNotificationStyles","root","nameStyles","leftSection","rightSection","headingStyle","headingStyle2","_useGetAllNotificatio","useGetAllNotificationsQuery","page","types","refetchOnMountOrArgChange","skip","isLoading","notificationArray","useEffect","setPrevNotificationCount","total","Suspense","fallback","Spinner","Container","Stack","Spacer","Center","alignContent","Box","Lottie","animationData","noNotificationAnimation","nanoid","notifications","map","border","as","color","lineicon","item","index","mt","pt","overflow","fontSize","itemBox","align","bgColor","infoBox","rootBox","borderWidth","py","button","contain","head","base","md","smallerDesc","container","_hover","background","search","font","lineHeight","popfont","singleCol","mb","popContentStyle","width","colOptionText","Wrap","forwardRef","ref","_props$spacing","spacing","spacingX","spacingY","direction","className","shouldWrapChildren","rest","_objectWithoutProperties","_excluded","_children","useMemo","Children","child","jsx","div","cx","ul","__css","flexWrap","listStyleType","gap","columnGap","rowGap","displayName","_excluded2","li"],"sourceRoot":""}