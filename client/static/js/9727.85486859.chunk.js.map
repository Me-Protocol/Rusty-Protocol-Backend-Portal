{"version":3,"file":"static/js/9727.85486859.chunk.js","mappings":"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","sources":["pages/MyProfile/MyProfile.tsx"],"sourcesContent":["import {\n  Box,\n  HStack,\n  Input,\n  Text,\n  Spacer,\n  Avatar,\n  Stack,\n  Spinner,\n  useToast,\n  FormControl,\n  FormLabel,\n  Button,\n} from \"@chakra-ui/react\";\nimport { FC, lazy, Suspense, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n// import CountrySelector from \"../../components/CountrySelector\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//useDispatch,\nimport { AuthReducerProps, UserReducerProps } from \"../../interfaces\";\nimport { RootState } from \"../../redux/store\";\n// import MeProtocolToast from \"../../hooks/MeProtocolToast\";\n// import { getUserInfo } from \"../../redux/UserSlice\";\n// import { useUpdateUserMutation } from \"../../redux/rtkQuery/api\";\nimport { Dispatch } from \"redux\";\nimport { BASE_URL } from \"../../config\";\nimport { useUpdateUserMutation } from \"../../redux/rtkQuery/api\";\nimport MeProtocolToast from \"../../hooks/MeProtocolToast\";\nimport { getUserInfo } from \"../../redux/UserSlice\";\n\nconst CountrySelector = lazy(() => import(\"../../components/CountrySelector\"));\nconst MyProfile: FC = (): JSX.Element => {\n  const { button, profileFont1, profileFont2, profileFont3, inputStyle } = useStyles();\n  const { id } = useParams();\n  let toast = useToast();\n  const dispatch = useDispatch<Dispatch>();\n\n  const { countrySelect } = useStyles();\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n  const [updateUser] = useUpdateUserMutation();\n  const [country, setCountry] = useState<string>(\"United States of America\");\n  const [file, setFile] = useState<any>();\n  const [fileData, setFileData] = useState<any>();\n  // const [uploading, setUploading] = useState<boolean>(false);\n  const [userUpdateLoading, setUserUpdateLoading] = useState<boolean>(false);\n\n  const [height, setHeight] = useState<string | any>(user_data?.customer?.height);\n  const [weight, setWeight] = useState<string | any>(user_data?.customer?.weight);\n  const [bio, setBio] = useState<string | any>(user_data?.customer?.bio);\n  const [fullName, setFullName] = useState<string | any>(user_data?.customer?.name);\n\n  function handleChange(e: any) {\n    console.log(e.target.files);\n    setFile(URL.createObjectURL(e.target.files[0]));\n    setFileData(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    // console.log(user_data);\n\n    getGeoInfo();\n  }, []);\n\n  const getGeoInfo = () => {\n    axios\n      .get(\"https://ipapi.co/json/\")\n      .then((response) => {\n        let data = response.data;\n        setCountry(data.country_name);\n        // alert(JSON.stringify(data.country_name));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  async function getSignature() {\n    return await axios\n      .get(`${BASE_URL}/upload/image-signature`, {\n        headers: { \"x-access-token\": token },\n      })\n      .then(({ data }) => {\n        return {\n          apiKey: data.apiKey,\n          cloudName: data.cloudName,\n          signature: data.signature,\n          timestamp: data.timestamp,\n          upload_preset: data.upload_preset,\n        };\n      });\n  }\n\n  async function uploadImageToCloudinary() {\n    const { signature, timestamp, cloudName, apiKey, upload_preset }: any = await getSignature(); // api call to get signature\n\n    const formData = new FormData();\n    formData.append(\"file\", fileData);\n    formData.append(\"upload_preset\", upload_preset);\n    formData.append(\"api_key\", apiKey);\n    formData.append(\"timestamp\", timestamp);\n    formData.append(\"signature\", signature);\n\n    return axios\n      .post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then(({ data }) => {\n        console.log(data, \"pppp\");\n\n        return { secure_url: data?.secure_url };\n      });\n  }\n\n  // ------------------------------------------------------------------------------\n  async function UpdateProfile(): Promise<void> {\n    setUserUpdateLoading(true);\n    if (fileData) {\n      const { secure_url }: any = await uploadImageToCloudinary();\n      // console.log(secure_url);\n\n      await updateUser({\n        fullName,\n        profilePicture: secure_url,\n        weight,\n        height,\n        bio,\n      })\n        .then(({ data }: any) => {\n          if (token) dispatch(getUserInfo({ token }));\n          MeProtocolToast(toast, \"Profile updated successfully\", 2000);\n          // console.log(data, \"E CHANGE OOO\");\n        })\n        .catch((e: any | unknown) => {\n          console.log(e, \"UPDATeYUSERZRR\");\n        })\n        .finally(() => {\n          setUserUpdateLoading(false);\n        });\n      return;\n    }\n\n    await updateUser({\n      fullName,\n      weight,\n      height,\n      bio,\n    })\n      .then(({ data }: any) => {\n        if (token) dispatch(getUserInfo({ token }));\n        MeProtocolToast(toast, \"Profile updated successfully\", 2000);\n        // console.log(data, \"E CHANGE OOO\");\n      })\n      .catch((e: any | unknown) => {\n        console.log(e, \"UPDATeYUSERZRR\");\n      })\n      .finally(() => {\n        setUserUpdateLoading(false);\n      });\n  }\n\n  return (\n    <Stack>\n      {/* ----------------------------------------------FIRST SECTION------------------------------------------------------- */}\n      <HStack>\n        <Box>\n          <Text {...profileFont1}>Edit Profile</Text>\n        </Box>\n        <Spacer />\n        <Box\n          as=\"button\"\n          {...button}\n          // onClick={UpdateProfile}\n          onClick={UpdateProfile}\n        >\n          <Text>{userUpdateLoading ? <Spinner size={\"xs\"} /> : \"Save\"}</Text>\n        </Box>\n      </HStack>\n      {/* ----------------------------------------------SECOND SECTION------------------------------------------------------- */}\n      <HStack py=\"2%\">\n        <Avatar\n          name={user_data?.customer?.name}\n          src={file || user_data?.customer?.profilePicture}\n        />\n        <Stack>\n          <Text {...profileFont2}>{user_data?.customer?.name}</Text>\n          <Text {...profileFont3} decoration=\"underline\" as=\"button\">\n            <div>\n              <label htmlFor=\"image_uploads\" style={{ cursor: \"pointer\" }}>\n                Change profile photo\n              </label>\n              <input\n                type=\"file\"\n                id=\"image_uploads\"\n                name=\"image_uploads\"\n                accept=\".jpg, .jpeg, .png\"\n                style={{ opacity: \"0\" }}\n                onChange={handleChange}\n                placeholder=\"Changle profile photo\"\n              />\n            </div>\n          </Text>\n        </Stack>\n      </HStack>\n      {/* ----------------------------------------------SECOND SECTION------------------------------------------------------- */}\n      <Stack>\n        <HStack w=\"100%\">\n          <Stack w=\"25%\">\n            <Text {...profileFont3} ml=\"0\">\n              Full Name\n            </Text>\n            <Input\n              {...inputStyle}\n              placeholder=\"Enter Full Name\"\n              value={fullName}\n              onChange={({ target }: { target: { value: string } }) => {\n                setFullName(target.value);\n              }}\n              border=\"1px solid rgba(0, 0, 0, 0.08)\"\n              _focus={{ borderColor: \"dark\", boxShadow: \"none\" }}\n            />\n          </Stack>\n          <Stack w=\"50%\">\n            <Text {...profileFont3} ml=\"0\">\n              Email\n            </Text>\n\n            <Input\n              {...inputStyle}\n              placeholder=\"Enter Email\"\n              isDisabled={true}\n              value={user_data?.email}\n              border=\"1px solid rgba(0, 0, 0, 0.08)\"\n              _focus={{ borderColor: \"dark\", boxShadow: \"none\" }}\n            />\n          </Stack>\n        </HStack>\n        <HStack py=\"20px\">\n          <Stack w=\"50%\">\n            <Text {...profileFont3} ml=\"0\">\n              Location\n            </Text>\n            <Suspense fallback={<Spinner size=\"sm\" />}>\n              <CountrySelector\n                value={country}\n                onChange={(e: any) => {\n                  // alert(e.target.value);\n                  setCountry(e.target.value);\n                }}\n                {...countrySelect}\n              />\n            </Suspense>\n          </Stack>\n\n          <Stack w=\"25%\">\n            <Text {...profileFont3} ml=\"0\">\n              Weight\n            </Text>\n            <Input\n              {...inputStyle}\n              placeholder=\"Enter Weight\"\n              value={weight}\n              onChange={({ target }: { target: { value: string } }) => {\n                setWeight(target.value);\n              }}\n              border=\"1px solid rgba(0, 0, 0, 0.08)\"\n              _focus={{ borderColor: \"dark\", boxShadow: \"none\" }}\n            />\n          </Stack>\n          <Stack w=\"25%\">\n            <Text {...profileFont3} ml=\"0\">\n              Height\n            </Text>\n            <Input\n              {...inputStyle}\n              placeholder=\"Enter Height\"\n              value={height}\n              onChange={({ target }: { target: { value: string } }) => {\n                setHeight(target.value);\n              }}\n              border=\"1px solid rgba(0, 0, 0, 0.08)\"\n              _focus={{ borderColor: \"dark\", boxShadow: \"none\" }}\n            />\n          </Stack>\n        </HStack>\n        <Stack>\n          <Text {...profileFont3} ml=\"0\">\n            Bio\n          </Text>\n          <Input\n            {...inputStyle}\n            as=\"textarea\"\n            h=\"100px\"\n            w=\"100%\"\n            textAlign={\"start\"}\n            placeholder=\" Write your review here. It must be at least 5 characters long.\"\n            noOfLines={5}\n            _focus={{ borderColor: \"dark\", boxShadow: \"none\" }}\n            value={bio}\n            onChange={({ target }: { target: { value: string } }) => {\n              setBio(target.value);\n            }}\n            border=\"1px solid rgba(0, 0, 0, 0.08)\"\n          />\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default MyProfile;\n\nexport const useStyles = () => {\n  return {\n    button: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"71px\",\n      height: \"42px\",\n      border: \"1px solid #000000\",\n      borderRadius: \"100px\",\n    },\n\n    copyrightText: {\n      color: \"light\",\n      //   pl: \"5%\",\n      fontSize: [\"14px\", \"16px\", \"16px\", \"14px\", \"16px\"],\n    },\n\n    countrySelect: {\n      w: \"100%\",\n      bg: \"light\",\n      color: \"dark\",\n      borderWidth: \"1px\",\n      my: \"30px\",\n      borderRadius: \"0px\",\n      borderColor: \"grey\",\n    },\n\n    linksStyle: {\n      color: \"darkGrey\",\n    },\n\n    profileFont1: {\n      fontSize: \"24px\",\n      lineHeight: \"29px\",\n      color: \"#000000\",\n    },\n\n    profileFont2: {\n      fontSize: \"18px\",\n      lineHeight: \"22px\",\n      color: \"#000000\",\n    },\n\n    profileFont3: {\n      fontSize: \"14px\",\n      lineHeight: \"17px\",\n      color: \"#000000\",\n      marginLeft: 0,\n      left: 0,\n    },\n\n    profileFont4: {\n      fontSize: \"14px\",\n      lineHeight: \"20px\",\n      color: \"#AFAFAF\",\n      marginLeft: 0,\n      left: 0,\n    },\n    inputStyle: {\n      h: \"48px\",\n      borderColor: \"grey\",\n      variant: \"outline\",\n      borderRadius: \"0px\",\n    },\n  };\n};\n"],"names":["CountrySelector","lazy","_user_data$customer","_user_data$customer2","_user_data$customer3","_user_data$customer4","_user_data$customer5","_user_data$customer6","_user_data$customer7","_useStyles","useStyles","button","profileFont1","profileFont2","profileFont3","inputStyle","toast","useParams","id","useToast","dispatch","useDispatch","countrySelect","user_data","useSelector","state","userReducer","token","authReducer","_useUpdateUserMutatio","useUpdateUserMutation","updateUser","_slicedToArray","_useState","useState","_useState2","country","setCountry","_useState3","_useState4","file","setFile","_useState5","_useState6","fileData","setFileData","_useState7","_useState8","userUpdateLoading","setUserUpdateLoading","_useState9","customer","height","_useState10","setHeight","_useState11","weight","_useState12","setWeight","_useState13","bio","_useState14","setBio","_useState15","name","_useState16","fullName","setFullName","useEffect","getGeoInfo","axios","then","response","data","country_name","catch","error","console","log","getSignature","_getSignature","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","concat","BASE_URL","headers","_ref5","apiKey","cloudName","signature","timestamp","upload_preset","abrupt","sent","stop","uploadImageToCloudinary","_uploadImageToCloudinary","_callee2","_yield$getSignature","formData","_context2","FormData","append","_ref6","secure_url","_UpdateProfile","_callee3","_yield$uploadImageToC","_context3","profilePicture","_ref7","getUserInfo","MeProtocolToast","e","finally","_ref8","_jsxs","Stack","children","HStack","_jsx","Box","Text","_objectSpread","Spacer","as","onClick","Spinner","size","py","Avatar","src","decoration","htmlFor","style","cursor","type","accept","opacity","onChange","target","files","URL","createObjectURL","placeholder","w","ml","Input","value","_ref","border","_focus","borderColor","boxShadow","isDisabled","email","Suspense","fallback","_ref2","_ref3","h","textAlign","noOfLines","_ref4","display","alignItems","justifyContent","width","borderRadius","copyrightText","color","fontSize","bg","borderWidth","my","linksStyle","lineHeight","marginLeft","left","profileFont4","variant"],"sourceRoot":""}