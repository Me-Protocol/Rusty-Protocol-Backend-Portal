{"version":3,"file":"static/js/2322.76632007.chunk.js","mappings":"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","sources":["constants/FAQJSON.ts","components/CustomErrorToast/index.tsx","pages/RedeemSubsequent/RedeemSubsequent.tsx"],"sourcesContent":["\r\nexport const FAQ = [\r\n  {\r\n    id: \"1\",\r\n    title: \"What is Me App website?\",\r\n    body: \"The Me App is a website whereby customers purchase offers from brands. It provides the fundamental technology for the creation of a frictionless, limitless, and decentralized rewards ecosystem for brands to participate big/small.\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Is it safe to buy from the Me App?\",\r\n    body: \"Me App is a safe e-commerce website for online businesses. It's a platform where customers get to purchase products from favorites and trusted brands. While you can trust that me protocol is legit, you can also be guaranteed safety from purchasing from the website.\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"How do I shop on the app?\",\r\n    body: \"A user logs in / registers - searches for their desired product - pick a product of choice ( the price + discount will be displayed/updated)- clicks on add to bag -proceed to make a purchase.\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"What items can users make payments on with Me App?\",\r\n    body: \"Users can make payments on all items on the page, provided that the product is in stock.\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    title: \"How do users access / view their coupons on Me App?\",\r\n    body: \"Available points and coupons are displayed alongside the product price on the Me App. In as much as you are registered under the brand and you have a loyalty offer with the brand.\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    title: \"Can I purchase offers from a particular brand using another brand's point bonus?\",\r\n    body: \"Yes, at Me App users get to purchase an offer from a brand using another brand's point bonus as long as both brands are registered under the Me App.\",\r\n  },\r\n  {\r\n    id: \"7\",\r\n    title: \"How does Me App know the exact point a user has?\",\r\n    body: \"The Me App uses a decentralized system. As long as a company is registered with Me App, details such as a customer's point balance, transactions with apps are updated.\",\r\n  },\r\n];\r\n\r\nexport const HOW_IT_WORKS = [\r\n  {\r\n    text: \"To redeem an offer, choose  an offer of choice, click on REDEEM NOW on the Me protocol web page. It automatically connects you to the reward from the brand....voila redeemed successful.\",\r\n  },\r\n  {\r\n    text: \"To claim an offer from a brand,  users need to receive coupons or QR code to shop online or at physical stores. Once a user has their coupon it makes shopping easy peasy from anywhere in the world.\",\r\n  },\r\n  {\r\n    text: \"Users can visit brand stores physically or online to claim offers using claimed  coupons .\",\r\n  },\r\n  {\r\n    text: \"Earn more loyalty offers from your favorite brand stores and repeat process\",\r\n  },\r\n];\r\n\r\n\r\nexport const BOUNTIES_TEXT_DEMO = [\r\n  {\r\n    id: 1,\r\n    title: \"Earn 19 District Vision\",\r\n    body: \"Neque porro quisquam est qui dolorem\",\r\n    titleTiming: \"Redeem in\",\r\n    time: \"5m 30s\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Earn 19 District Vision\",\r\n    body: \"Neque porro quisquam est qui dolorem\",\r\n    titleTiming: \"Redeem in\",\r\n    time: \"5m 30s\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Earn 19 District Vision\",\r\n    body: \"Neque porro quisquam est qui dolorem\",\r\n    titleTiming: \"Redeem in\",\r\n    time: \"5m 30s\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Earn 19 District Vision\",\r\n    body: \"Neque porro quisquam est qui dolorem\",\r\n    titleTiming: \"Redeem in\",\r\n    time: \"5m 30s\"\r\n  },\r\n]\r\n\r\n\r\n","import { ToastPosition } from \"@chakra-ui/react\";\n\nconst CustomErrorToast = (\n  toast: any,\n  msg: string,\n  description: string,\n  duration?: number,\n  pos?: ToastPosition | undefined\n) => {\n  toast({\n    title: msg,\n    description,\n    status: \"error\",\n    duration: 2000 || duration,\n    isClosable: true,\n    position: pos ? pos : \"top-right\",\n  });\n};\n\nexport default CustomErrorToast;\n","// \r\nimport {\r\n  Flex,\r\n  Text,\r\n  Spacer,\r\n  Image,\r\n  Stack,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Circle,\r\n  Box,\r\n  Divider,\r\n  Icon,\r\n  Spinner,\r\n  Checkbox,\r\n  Skeleton,\r\n  Button,\r\n  useToast,\r\n  Heading,\r\n  VStack,\r\n  useDisclosure,\r\n  Avatar,\r\n  useSteps,\r\n  Step,\r\n  StepDescription,\r\n  StepIcon,\r\n  StepIndicator,\r\n  StepNumber,\r\n  StepSeparator,\r\n  StepStatus,\r\n  StepTitle,\r\n  Stepper,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\nimport React, { lazy, Suspense, useEffect, useState } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Images_Icons from \"../../constants/icons-images\";\r\nimport Container from \"../../components/Container\";\r\nimport { addToSwap, clearSwap, setCostPayerId } from \"../../redux/TokenSwapSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { getTokenBasedRewards } from \"../../redux/ProductsSlice\";\r\nimport { AuthReducerProps } from \"../../interfaces\";\r\nimport { useGetWallet } from \"../../hooks/tokenBalance\";\r\nimport MeProtocolToast from \"../../hooks/MeProtocolToast\";\r\nimport { ethers } from \"ethers\";\r\nimport Lottie from \"lottie-react\";\r\nimport MeProtocolButton from \"../../components/MeProtocolButton\";\r\nimport ModalComponent from \"../../components/ModalComponent\";\r\nimport checkMark from \"../../assets/json/checkMark.json\";\r\nimport spinning_loader from \"../../assets/json/spinning_loader.json\";\r\nimport { HOW_IT_WORKS, BOUNTIES_TEXT_DEMO } from \"../../constants/FAQJSON\";\r\nimport { GLOBAL_PREFIX } from \"../../constants\";\r\nimport { useMeProtocol } from \"me-protocol\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL, ME_API_KEY } from \"../../config\";\r\nimport CustomErrorToast from \"../../components/CustomErrorToast\";\r\n\r\nconst RedeemNavBar = lazy(() => import(\"../../components/RedeemNavbar/index\"));\r\n\r\nexport const RedeemSubsequent = (): JSX.Element => {\r\n  const dispatch = useDispatch<Dispatch>();\r\n  const {\r\n    getExpectedAmountOfTargetedReward,\r\n    spendRewardsOnAnotherBrandWithVaultPermit,\r\n    spendRewardsOnIssuingBrandWithVaultPermit,\r\n    spendingSteps,\r\n  } = useMeProtocol();\r\n\r\n  const { state }: any = useLocation();\r\n  const toast = useToast();\r\n  let navigate = useNavigate();\r\n\r\n  const steps = [\r\n    { title: \"First\", description: \"Validating\" },\r\n    { title: \"Second\", description: \"Performing Redemption\" },\r\n    { title: \"Third\", description: \"Completing Redemption\" },\r\n  ];\r\n\r\n  const { activeStep, setActiveStep } = useSteps({\r\n    index: 0,\r\n    count: steps.length,\r\n  });\r\n\r\n  // const { isConnected } = useAccount();\r\n\r\n  const [searchOpen, setSearchOpen] = useState<boolean>(false);\r\n  const [tokenChecked, setTokenChecked] = useState<boolean>(false);\r\n  const [searchValue, setSearchValue] = useState<string>(\"\");\r\n  const [orderId, setOrderId] = useState<string>(\"\");\r\n  const [activeCheckIndex, setActiveCheckIndex] = useState<number | null>(null);\r\n\r\n  const [tokenBalance, setTokenBalance] = useState<any>({});\r\n  const [ticker, setTicker] = useState<string>(\"\");\r\n\r\n  const [redeemLoading, setRedeemLoading] = useState<boolean>(false);\r\n  const [neededValueLoading, setNeededValueLoading] = useState<boolean>(false);\r\n  const [neededTokens, setNeededTokens] = useState<string>(\"\");\r\n  const [neededTokenInBigNumber, setNeededTokensInBigNumber] = useState<any>();\r\n  const [rerunTokenFetch, setRerunTokenFetch] = useState<boolean>(false);\r\n\r\n  const {\r\n    isOpen: syncSuccessIsOpen,\r\n    onOpen: syncSuccessOnOpen,\r\n    onClose: syncSuccessOnClose,\r\n  } = useDisclosure();\r\n  const {\r\n    isOpen: progressModalIsOpen,\r\n    onOpen: progressModalOnOpen,\r\n    onClose: progressModalOnClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    root,\r\n    root2,\r\n    nameStyles,\r\n    boxCircleColor,\r\n    leftSection,\r\n    rightSection,\r\n    font,\r\n    font1,\r\n    subHeadStyle,\r\n    headingStyle,\r\n    circleReward,\r\n    searchFlex,\r\n    balanceFlex,\r\n    balanceButton,\r\n    inputStack,\r\n    imageBrandLogo,\r\n    doneBox,\r\n    rightSectionImage,\r\n    dealPriceFlex,\r\n    differenceFlex,\r\n    subtotalFlex,\r\n    headingsFlex,\r\n    editText,\r\n    boxPrice,\r\n    boxPercent,\r\n  } = useRedeemStyles();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(spendingSteps, \"spendingSteps\");\r\n  // }, [spendingSteps]);\r\n\r\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\r\n\r\n  const { swapTokens }: any = useSelector((state: RootState) => state.tokenSwapReducer);\r\n\r\n  const { reward_type_product, reward_type_loading } = useSelector(\r\n    (state: RootState) => state.productReducer\r\n  );\r\n\r\n  const { getTokenBalance, loading: tokenBalanceLoading } = useGetWallet();\r\n  // const contractAddress = \"0x970383043fd7f021fd5000ac173ac6e7be5eb296\";\r\n  const contractAddress = swapTokens[0]?.contractAddress;\r\n\r\n  // console.log(swapTokens[0]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTokenBalance(await getTokenBalance(contractAddress));\r\n    })();\r\n  }, [swapTokens, rerunTokenFetch]);\r\n\r\n  useEffect(() => {\r\n    CALC_NEEDED_REWARDS();\r\n    dispatch(getTokenBasedRewards({ token }));\r\n    // SET COST PAYER ID\r\n    dispatch(setCostPayerId(state?.brandId));\r\n  }, []);\r\n\r\n  // console.log(reward_type_product);\r\n  // console.log(reward_type_product.find((item: any) => item?.brandId === state?.brandId));\r\n\r\n  useEffect(() => {\r\n    setActiveStep(spendingSteps);\r\n    if (spendingSteps > 0) progressModalOnOpen();\r\n  }, [spendingSteps]);\r\n  useEffect(() => {\r\n    if (reward_type_product?.length > 0) {\r\n      dispatch(clearSwap());\r\n      dispatch(\r\n        addToSwap(reward_type_product.find((item: any) => item?.brandId === state?.brandId))\r\n      );\r\n    }\r\n    setFilteredSearch(reward_type_product ? [...reward_type_product].reverse() : []);\r\n    setMasterData(reward_type_product ? [...reward_type_product].reverse() : []);\r\n  }, [reward_type_product]);\r\n\r\n  const [filteredSearch, setFilteredSearch] = useState([]);\r\n  const [masterData, setMasterData] = useState([]);\r\n\r\n  // SEARCH FUNCTION\r\n  function SearchFilter(text: string) {\r\n    if (text) {\r\n      const newData = masterData.filter((item: any) => {\r\n        const itemData = item?.brand?.brandName\r\n          ? item?.brand?.brandName.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredSearch(newData);\r\n      setSearchValue(text);\r\n    } else {\r\n      setFilteredSearch(masterData);\r\n      setSearchValue(text);\r\n    }\r\n  }\r\n\r\n  console.log(state?.tokens?.toString());\r\n\r\n  // console.log(state?.reward?.contractAddress, contractAddress, \"ESATå\");\r\n  // console.log(spendingSteps, \"MY STEPS\");\r\n\r\n  //JUNE 2023 new fn for swap =================================================================\r\n\r\n  const CALC_NEEDED_REWARDS = async () => {\r\n    if (!state?.reward?.contractAddress || !contractAddress) return;\r\n    setNeededValueLoading(true);\r\n\r\n    try {\r\n      if (swapTokens[0]?.brandId === state?.brandId) {\r\n        setNeededTokens(state?.tokens.toString());\r\n        return;\r\n      }\r\n      // console.log(state?.reward?.contractAddress, contractAddress, \"COMPare\");\r\n\r\n      let expectedAmount: any = await getExpectedAmountOfTargetedReward({\r\n        amount: state?.tokens.toString(),\r\n        inputRewardAddress: contractAddress,\r\n        outPutRewardAddress: state?.reward?.contractAddress,\r\n      });\r\n\r\n      // expectedAmount = expectedAmount + ethers.utils.parseEther(\"1\");\r\n\r\n      setNeededTokens(Number(ethers.utils.formatUnits(expectedAmount, 18)).toFixed(2));\r\n      setNeededTokensInBigNumber(expectedAmount);\r\n\r\n      // console.log(expectedAmount);\r\n    } catch (error) {\r\n      console.log(error, \"CALC_NEEDED_REWARDS_ER\");\r\n    } finally {\r\n      setNeededValueLoading(true);\r\n    }\r\n  };\r\n\r\n  const SWAP_FUNCTIONALITY = async () => {\r\n    try {\r\n      if (swapTokens[0]?.brandId === state?.brandId) {\r\n        return;\r\n      }\r\n      setRedeemLoading(true);\r\n\r\n      // console.log(state?.reward?.contractAddress, contractAddress, \"@ ADDS\");\r\n\r\n      // console.log(state?.reward?.id);\r\n\r\n      const { data }: any = await axios.post(\r\n        `${BASE_URL}/order/redeem-offer`,\r\n        {\r\n          offerId: state.id,\r\n          quantity: 1,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      if (data?.data?.id) {\r\n        const swapRes: any = await spendRewardsOnAnotherBrandWithVaultPermit({\r\n          rewardId: state?.reward?.id,\r\n          spendInfo: {\r\n            rewardAtHand: contractAddress,\r\n            targettedReward: state?.reward?.contractAddress,\r\n            amountOfRewardAtHand: neededTokenInBigNumber,\r\n            expectedAmountOfTargetedReward: ethers.utils.parseEther(state?.tokens.toString()),\r\n          },\r\n        });\r\n\r\n        if (swapRes?.taskId) {\r\n          const { data: completeData }: any = await axios.post(\r\n            `${BASE_URL}/order/complete`,\r\n            {\r\n              orderId: data?.data?.id,\r\n              taskId: swapRes?.taskId,\r\n            },\r\n            { headers: { Authorization: `Bearer ${ME_API_KEY}` } }\r\n          );\r\n          syncSuccessOnOpen();\r\n          setRedeemLoading(false);\r\n          setOrderId(data?.data?.id);\r\n\r\n          // navigate(`${GLOBAL_PREFIX}/dashboard_my_deals_details`, {\r\n          //   state: { orderId: data?.data?.id },\r\n          // });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.log(error);\r\n\r\n      // console.log(error?.response?.data?.message, \"SWAP_FUNCTIONALITY\");\r\n      CustomErrorToast(toast, \"Error\", error?.response?.data?.message, 2000);\r\n    } finally {\r\n      setRedeemLoading(false);\r\n      progressModalOnClose();\r\n    }\r\n  };\r\n\r\n  const SWAP_FOR_SAME_BRAND = async () => {\r\n    setRedeemLoading(true);\r\n\r\n    try {\r\n      const { data }: any = await axios.post(\r\n        `${BASE_URL}/order/redeem-offer`,\r\n        {\r\n          offerId: state.id,\r\n          quantity: 1,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      if (data?.data?.id) {\r\n        const swapRes = await spendRewardsOnIssuingBrandWithVaultPermit({\r\n          reward_address: state?.reward?.contractAddress,\r\n          reward_amount: ethers.utils.parseEther(state?.tokens.toString()),\r\n          rewardId: state?.reward?.id,\r\n        });\r\n\r\n        if (swapRes?.taskId) {\r\n          const { data: completeData }: any = await axios.post(\r\n            `${BASE_URL}/order/complete`,\r\n            {\r\n              orderId: data?.data?.id,\r\n              taskId: swapRes?.taskId,\r\n            },\r\n            { headers: { Authorization: `Bearer ${ME_API_KEY}` } }\r\n          );\r\n          syncSuccessOnOpen();\r\n          setRedeemLoading(false);\r\n          setOrderId(data?.data?.id);\r\n\r\n          // navigate(`${GLOBAL_PREFIX}/dashboard_my_deals_details`, {\r\n          //   state: { orderId: data?.data?.id },\r\n          // });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.log(error, \"SWAP_FOR_SAME_BRANDERR\");\r\n      CustomErrorToast(toast, \"Error\", error?.response?.data?.message, 2000);\r\n\r\n      // onCloseSteps();\r\n    } finally {\r\n      setRedeemLoading(false);\r\n      progressModalOnClose();\r\n    }\r\n  };\r\n\r\n  const activeStepText = steps[activeStep - 1]?.description;\r\n\r\n  const max = steps.length - 1;\r\n  const progressPercent = (activeStep / max) * 100;\r\n\r\n  return (\r\n    <Box w=\"100%\" h=\"100vh\">\r\n      <Suspense fallback={<Spinner size=\"sm\" />}>\r\n        {/* ---------------------------------------------------------------------- REDEEM NAV BAR------------------------------------------------------------ */}\r\n        <RedeemNavBar />\r\n        {/* ---------------------------------------------------------------------- THE END REDEEM NAV BAR------------------------------------------------------------ */}\r\n      </Suspense>\r\n\r\n      <Flex flexDir={\"column\"}>\r\n        <Container>\r\n          <Stack {...root}>\r\n            <Flex mb={\"25px\"}>\r\n              {/* ---------------------------------------- CONGRATS You --------------------------------------------*/}\r\n              {/* <Text {...nameStyles}>Pay in rewards</Text> */}\r\n              <Spacer />\r\n              {/* ----------------------------------------CONNECT WALLET --------------------------------------------*/}\r\n            </Flex>\r\n\r\n            <Flex>\r\n              {/* -----------------------------------LEFT SECTION---------------------------------------------- */}\r\n              <Flex {...leftSection} flexDir={\"column\"} pos=\"relative\">\r\n                {/* ----------------------------------------------------------------LEFT TOP DETAIL ----------------------------------------------------------------*/}\r\n\r\n                {/* ---------------------------------------------------------------- TOP CONTAINER ----------------------------------------------------------------*/}\r\n                <Flex\r\n                  {...root2}\r\n                  flexDir={\"row\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                >\r\n                  <Flex>\r\n                    {/* ---------------------- BRAND LOGO REPRESENT THE AVATAR ----------------------------- */}\r\n                    {swapTokens?.map((e: any) => (\r\n                      <Flex flexDir={\"row\"} key={nanoid()}>\r\n                        <Circle\r\n                          key={nanoid()}\r\n                          as={Image}\r\n                          objectFit={\"cover\"}\r\n                          mr={swapTokens.length > 1 ? \"-15px\" : \"0px\"}\r\n                          {...circleReward}\r\n                          src={e?.rewardImage || Images_Icons.appLogoPlaceholder}\r\n                          fallbackSrc={Images_Icons.appLogoPlaceholder}\r\n                          fallbackStrategy=\"beforeLoadOrError\"\r\n                        />\r\n                        <Stack pl=\"10px\" h=\"40px\">\r\n                          <Text color={\"dark\"}>{e?.brandName}</Text>\r\n                          <Skeleton isLoaded={tokenBalanceLoading}>\r\n                            <Text color={\"#999999\"}>\r\n                              {Number(tokenBalance?.balance).toFixed(2) || 0} {e?.rewardSymbol}\r\n                            </Text>\r\n                          </Skeleton>\r\n                        </Stack>\r\n                      </Flex>\r\n                    ))}\r\n                  </Flex>\r\n\r\n                  {/* ---------------------------- ADD OR REMOVE REWARDS ---------------------- */}\r\n                  <Flex {...searchFlex} as=\"button\" onClick={() => setSearchOpen(true)}>\r\n                    <Text {...headingStyle}>Redeem with another reward</Text>\r\n                    {/* <Text {...headingStyle}>Add/remove rewards</Text> */}\r\n                    <Image objectFit={\"contain\"} src={Images_Icons.arrowLeftIcon} />\r\n                  </Flex>\r\n                </Flex>\r\n\r\n                <Spacer />\r\n\r\n                {/* ----------------------------- CONFIRM TRANSACTIONS BUTTON --------------------------------- */}\r\n\r\n                <Flex {...balanceFlex} flexDir={\"column\"}>\r\n                  <Button\r\n                    {...balanceButton}\r\n                    isLoading={redeemLoading}\r\n                    disabled={Number(tokenBalance?.balance) < Number(neededTokens)}\r\n                    onClick={() => {\r\n                      if (swapTokens[0]?.brandId !== state?.brandId) {\r\n                        // TRY_SWAP_DIFF_PERMIT();\r\n                        SWAP_FUNCTIONALITY();\r\n                        return;\r\n                      } else {\r\n                        // NEW_TRY_SINGLE_PERMIT();\r\n                        if (Number(tokenBalance?.balance) < Number(state?.tokens)) {\r\n                          MeProtocolToast(\r\n                            toast,\r\n                            \"Not enough rewards for swap, please select another reward\",\r\n                            2000,\r\n                            \"top\"\r\n                          );\r\n                          return;\r\n                        }\r\n                        SWAP_FOR_SAME_BRAND();\r\n                      }\r\n                    }}\r\n                  >\r\n                    Confirm transaction\r\n                  </Button>\r\n\r\n                  <Text mt={\"24px\"} {...font1}>\r\n                    Ensure you check the terms and conditions for claiming this offer.\r\n                  </Text>\r\n                </Flex>\r\n\r\n                {/* ----------------------------- THE END OF CONFIRM TRANSACTIONS BUTTON --------------------------------- */}\r\n\r\n                {/* ----------------------------------------------------------------------SEARCH SECTION --------------------------------------------*/}\r\n                {searchOpen && (\r\n                  <Stack {...inputStack} position={\"absolute\"}>\r\n                    <InputGroup _focus={{ boxShadow: \"none\" }} as=\"button\">\r\n                      <InputLeftElement\r\n                        pointerEvents=\"none\"\r\n                        children={<Icon as={FaSearch} color=\"#959595\" />}\r\n                        p={\"1rem\"}\r\n                      />\r\n                      <Input\r\n                        {...font}\r\n                        value={searchValue}\r\n                        onChange={({ target }: any) => {\r\n                          setSearchValue(target.value);\r\n                          SearchFilter(target?.value);\r\n                        }}\r\n                        placeholder=\"Search tokens...\"\r\n                        borderRadius=\"0\"\r\n                        borderWidth=\"0\"\r\n                        // _focus={{ boxShadow: \"none\" }}\r\n                      />\r\n                      <Flex w=\"150px\">\r\n                        <Text {...font}>Import tokens</Text>\r\n                      </Flex>\r\n                    </InputGroup>\r\n                    <Divider borderColor={\"#00000030\"} w={\"100%\"} p={0} />\r\n\r\n                    <>\r\n                      {filteredSearch?.map((e: any, i: number) => (\r\n                        <Box key={nanoid()}>\r\n                          <Flex px={\"3%\"} py={\"1%\"} align={\"center\"}>\r\n                            {/* ---------------------- BRAND LOGO REPRESENT THE AVATAR ----------------------------- */}\r\n                            <Image src={e?.rewardImage} objectFit={\"cover\"} {...imageBrandLogo} />\r\n                            {/* ---------------------- THE BRAND NAME AND TOKEN DETAILS ----------------------- */}\r\n                            <Stack pl={\"2%\"}>\r\n                              <Text fontSize={\"16px\"} fontWeight={\"400\"}>\r\n                                {/* {e.name} */}\r\n                                {e?.brandName}\r\n                              </Text>\r\n                              <Text fontSize={\"14px\"} color=\"#999999\">\r\n                                {/* {e.tokens} {e.symbol} */}\r\n                                {e?.rewardSymbol}\r\n                              </Text>\r\n                            </Stack>\r\n                            <Spacer />\r\n\r\n                            <Flex pl={\"2%\"}>\r\n                              {/* ------------------------- Check Mark Button ------------------- */}\r\n                              <Checkbox\r\n                                spacing={\"0.5rem\"}\r\n                                // defaultChecked\r\n                                colorScheme={\"gray\"}\r\n                                isChecked={i === activeCheckIndex}\r\n                                onChange={({ target }: { target: { checked: boolean } }) => {\r\n                                  setActiveCheckIndex(i);\r\n                                  setTokenChecked(target.checked);\r\n                                  dispatch(clearSwap());\r\n                                  dispatch(\r\n                                    addToSwap({\r\n                                      ...e,\r\n                                      quantity: 1,\r\n                                    })\r\n                                  );\r\n                                }}\r\n                              />\r\n                            </Flex>\r\n                          </Flex>\r\n                          <Divider borderColor={\"#00000030\"} w={\"100%\"} p={0} />\r\n                        </Box>\r\n                      ))}\r\n\r\n                      {/* ----------------------------- DONE BUTTON SECTION --------------------------------- */}\r\n\r\n                      <Flex\r\n                        justify={\"center\"}\r\n                        alignItems={\"center\"}\r\n                        onClick={() => setSearchOpen(false)}\r\n                      >\r\n                        <Box as={\"button\"} {...doneBox} onClick={() => CALC_NEEDED_REWARDS()}>\r\n                          {/* <Box as={\"button\"} {...doneBox} onClick={() => TRY_ETHERS()}> */}\r\n                          Done\r\n                        </Box>\r\n                      </Flex>\r\n                    </>\r\n                  </Stack>\r\n                )}\r\n                {/* ---------------------------------------------------------------------- THE END OF SEARCH SECTION --------------------------------------------*/}\r\n\r\n                <Spacer />\r\n\r\n                <Divider orientation=\"horizontal\" />\r\n\r\n                <Flex flexDir={\"column\"} mt=\"24px\">\r\n                  <Text {...nameStyles}>How it works</Text>\r\n\r\n                  {HOW_IT_WORKS?.map((e: { text: string }, i) => (\r\n                    <Flex mt=\"20px\" key={nanoid()}>\r\n                      <Circle size=\"25px\" {...boxCircleColor}>\r\n                        <Text>{i + 1}</Text>\r\n                      </Circle>\r\n                      <Text {...font1} ml={\"10px\"} textAlign=\"justify\">\r\n                        {e.text}\r\n                      </Text>\r\n                    </Flex>\r\n                  ))}\r\n                </Flex>\r\n\r\n                <Spacer mt=\"20px\" />\r\n\r\n                <Divider orientation=\"horizontal\" />\r\n\r\n                <Flex justify=\"space-between\" mt=\"20px\">\r\n                  <Text fontSize=\"18px\">Or earn with bounties</Text>\r\n                  <Text\r\n                    fontSize=\"16px\"\r\n                    textDecoration=\"underline\"\r\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/bounties`)}\r\n                  >\r\n                    See all bounties\r\n                  </Text>\r\n                </Flex>\r\n                {/* ---------------------------------------- BOUNTIES DETAILS -------------------------------------------- */}\r\n                {BOUNTIES_TEXT_DEMO?.map(\r\n                  (e: { title: string; body: string; titleTiming: string; time: string }) => (\r\n                    <Flex justify=\"space-between\" mt=\"15px\" key={nanoid()}>\r\n                      <Flex>\r\n                        {/* -------------------- BRAND LOGO FOR THE BOUNTIES ----------------- */}\r\n                        <Avatar src=\"\" mr=\"8px\" />\r\n                        <Flex flexDir=\"column\">\r\n                          <Text {...font1}>{e.title}</Text>\r\n                          <Text fontSize=\"18px\">{e.body}</Text>\r\n                        </Flex>\r\n                      </Flex>\r\n\r\n                      <Flex flexDir=\"column\">\r\n                        <Text {...font1}>{e.titleTiming}</Text>\r\n                        <Text fontSize=\"16px\" color=\"#C90303\">\r\n                          {e.time}\r\n                        </Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  )\r\n                )}\r\n              </Flex>\r\n\r\n              <Spacer m={\"1%\"} />\r\n\r\n              {/* -----------------------------------RIGHT SECTION---------------------------------------------- */}\r\n              <Flex {...rightSection} flexDir={\"column\"}>\r\n                <Flex>\r\n                  <Image\r\n                    src={state?.offerImages[0]?.url}\r\n                    {...rightSectionImage}\r\n                    objectFit={\"contain\"}\r\n                    fallbackSrc={Images_Icons.appLogoPlaceholder}\r\n                    fallbackStrategy=\"beforeLoadOrError\"\r\n                  />\r\n\r\n                  <Spacer mr={\"6px\"} />\r\n\r\n                  <Flex flexDir={\"column\"}>\r\n                    <Text fontSize={\"13px\"} fontWeight=\"500\">\r\n                      {state?.name}\r\n                    </Text>\r\n                    <Spacer />\r\n                    <Text fontSize={\"14px\"} color=\"#999999\">\r\n                      {state?.tokens} {state?.reward?.rewardSymbol}\r\n                    </Text>\r\n                    <Text fontSize={\"14px\"} color=\"#999999\">\r\n                      {state?.price} USD\r\n                    </Text>\r\n                    <Text fontSize={\"14px\"} color=\"#999999\">\r\n                      Quantity: {\" 1 \"}\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                {/* ------------------------------ Deal Price ------------------ */}\r\n                <Flex flexDir={\"row\"} {...dealPriceFlex}>\r\n                  <Text {...subHeadStyle}>Deal Price</Text>\r\n                  <Flex>\r\n                    <Box as=\"button\" color=\"black\" px={2} h={6}>\r\n                      {/* ${state?.price?.toFixed(2)} */}\r\n                      {state?.tokens} {state?.reward?.rewardSymbol}\r\n                    </Box>\r\n                  </Flex>\r\n                </Flex>\r\n                {/* -------------------------------- Difference ---------------------------- */}\r\n                <Flex flexDir={\"row\"} {...differenceFlex}>\r\n                  <Text {...subHeadStyle}>Needed reward </Text>\r\n                  <Flex>\r\n                    {/* <Skeleton isLoaded={!neededValueLoading}> */}\r\n                    <Text as=\"button\" px={2} h={6}>\r\n                      {neededTokens} {swapTokens[0]?.rewardSymbol}\r\n                      {/* ${total.toFixed(2)} */}\r\n                      {/* {tokenBalance?.balance || 0} {state?.reward?.rewardSymbol} */}\r\n                    </Text>\r\n                    {/* </Skeleton> */}\r\n                  </Flex>\r\n                </Flex>\r\n\r\n                {/* -------------------------------- Subtotal reward ---------------------------- */}\r\n                <Flex flexDir={\"row\"} {...subtotalFlex}>\r\n                  <Text {...subHeadStyle}>Available rewards</Text>\r\n                  <Flex>\r\n                    <Box as=\"button\" color=\"black\" px={2} h={6}>\r\n                      {/* $0.00 */}\r\n                      {Number(tokenBalance?.balance).toFixed(2) || 0} {swapTokens[0]?.rewardSymbol}\r\n                    </Box>\r\n                  </Flex>\r\n                </Flex>\r\n\r\n                <Spacer />\r\n\r\n                {Number(tokenBalance?.balance) < Number(neededTokens) && (\r\n                  <Flex mt={\"20px\"}>\r\n                    <Text fontSize={\"14px\"} color=\"#C90303\">\r\n                      You do not have enough reward to claim this offer for the selected reward,\r\n                      please select a different reward to complete the reward.\r\n                    </Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {/* ------------------------------------------ PAYMENT DETAILS ------------------------------------- */}\r\n                <Flex flexDir={\"column\"}>\r\n                  <Text {...nameStyles} textAlign={[\"left\"]} mt={\"45px\"}>\r\n                    Payment Details\r\n                  </Text>\r\n\r\n                  {/* ------------------------------ headings ------------------ */}\r\n                  <Flex flexDir={\"row\"} {...headingsFlex}>\r\n                    <Text fontSize={\"14px\"} color=\"#AEAEAE\">\r\n                      Rewards slipt\r\n                    </Text>\r\n                    <Text\r\n                      {...editText}\r\n                      as=\"button\"\r\n                      onClick={() => {\r\n                        setSearchOpen(true);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Text>\r\n                  </Flex>\r\n\r\n                  {/*  ----------------------------- BRAND ONE DETAILS ---------------------------- */}\r\n                  {swapTokens?.map((e: any, i: any) => (\r\n                    <Box key={nanoid()}>\r\n                      <Flex\r\n                        flexDir={\"column\"}\r\n                        padding=\"6px\"\r\n                        bg={i % 2 === 0 ? \"#F2F2F2\" : \"#FFFFFF\"}\r\n                      >\r\n                        <Flex flexDir={\"row\"} justify={\"space-between\"}>\r\n                          <Text {...subHeadStyle}>{e?.brandName}</Text>\r\n                          <Flex>\r\n                            <Box as=\"button\" {...boxPrice}>\r\n                              {state.price} USD\r\n                            </Box>\r\n                          </Flex>\r\n                        </Flex>\r\n\r\n                        <Flex flexDir={\"row\"} justify={\"space-between\"} color=\"#999999\">\r\n                          <Text {...subHeadStyle}>\r\n                            {neededTokens} {swapTokens[0]?.rewardSymbol}\r\n                            {/* {e.tokens} {e.symbol} */}\r\n                          </Text>\r\n                          <Flex>\r\n                            <Box as=\"button\" {...boxPercent}>\r\n                              100 %{/* {e.percentageChange} % */}\r\n                            </Box>\r\n                          </Flex>\r\n                        </Flex>\r\n                      </Flex>\r\n                    </Box>\r\n                  ))}\r\n                </Flex>\r\n              </Flex>\r\n\r\n              {/* ----------------------------------- THE END OF RIGHT SECTION---------------------------------------------- */}\r\n            </Flex>\r\n          </Stack>\r\n          {/* ----------------------------------------SUCCESS MODAL-------------------------------------- */}\r\n          <Suspense fallback={<Spinner size=\"sm\" />}>\r\n            <ModalComponent\r\n              isOpen={syncSuccessIsOpen}\r\n              onClose={syncSuccessOnClose}\r\n              closeOnOverlayClick={true}\r\n            >\r\n              <Stack w=\"100%\">\r\n                <VStack>\r\n                  <Lottie\r\n                    style={{ width: \"150px\", height: \"150px\" }}\r\n                    animationData={checkMark}\r\n                    loop={false}\r\n                    autoplay\r\n                  />\r\n                  <Heading fontSize={\"18px\"} pb=\"10px\">\r\n                    Reward redeemed successfully\r\n                  </Heading>\r\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\r\n                    <MeProtocolButton\r\n                      name=\"Ok\"\r\n                      onClick={async () => {\r\n                        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n                        // GET_ALL_SYNCED_REWARDS();\r\n                        // TRY_ETHERS();\r\n                        await CALC_NEEDED_REWARDS();\r\n                        setTokenBalance(await getTokenBalance(contractAddress));\r\n                        setRerunTokenFetch((prev) => !prev);\r\n                        setRedeemLoading(false);\r\n                        // navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-saved`);\r\n                        navigate(`${GLOBAL_PREFIX}/dashboard_my_deals_details`, {\r\n                          state: { orderId },\r\n                        });\r\n\r\n                        syncSuccessOnClose();\r\n                      }}\r\n                    />\r\n                  </Suspense>\r\n                </VStack>\r\n              </Stack>\r\n            </ModalComponent>\r\n            {/* ================================================PROGRESS======================================================== */}\r\n            <ModalComponent isOpen={progressModalIsOpen} onClose={progressModalOnClose}>\r\n              <Flex w=\"full\" align={\"center\"} justify={\"center\"} mb=\"30px\">\r\n                <Lottie\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  animationData={spinning_loader}\r\n                  loop\r\n                  autoplay\r\n                />\r\n              </Flex>\r\n\r\n              <Box position=\"relative\">\r\n                <Stepper size=\"sm\" index={activeStep} gap=\"0\" colorScheme={\"gray\"}>\r\n                  {steps.map((step, index) => (\r\n                    <Step key={index}>\r\n                      <StepIndicator bg=\"white\">\r\n                        <StepStatus complete={<StepIcon />} />\r\n                      </StepIndicator>\r\n                    </Step>\r\n                  ))}\r\n                </Stepper>\r\n                <Progress\r\n                  value={progressPercent}\r\n                  position=\"absolute\"\r\n                  height=\"3px\"\r\n                  width=\"full\"\r\n                  top=\"10px\"\r\n                  zIndex={-1}\r\n                  colorScheme={\"gray\"}\r\n                  hasStripe\r\n                  transition={\"all .8s linear\"}\r\n                />\r\n                <Flex w=\"full\" align={\"center\"} justify={\"center\"} mt=\"30px\">\r\n                  <Text\r\n                    alignSelf={\"center\"}\r\n                    justifySelf={\"center\"}\r\n                    fontSize={\"18px\"}\r\n                    fontWeight={800}\r\n                  >\r\n                    {activeStepText}\r\n                  </Text>\r\n                </Flex>\r\n              </Box>\r\n            </ModalComponent>\r\n          </Suspense>\r\n        </Container>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RedeemSubsequent;\r\n\r\nexport const useRedeemStyles = () => {\r\n  return {\r\n    root: {\r\n      w: \"100%\",\r\n      // px: \"10%\",\r\n      // px: [5, 5, 10, 20, 40],\r\n      //   h: \"458px\",\r\n      mt: \"70px\",\r\n      mb: \"30px\",\r\n      // pt: \"3%\",\r\n      // overflow: \"hidden\",\r\n      // bg: \"green\",\r\n    },\r\n    root2: {\r\n      bg: \"#F2F2F2\",\r\n      h: \"80px\",\r\n      w: \"100%\",\r\n      borderRadius: \"1000px\",\r\n      p: \"1.5rem\",\r\n      overflow: \"hidden\",\r\n    },\r\n    nameStyles: {\r\n      fontSize: [\"20px\", \"20px\"],\r\n    },\r\n    itemBox: {\r\n      w: \"100%\",\r\n      h: \"3vw\",\r\n      bg: \"white\",\r\n      border: \"1px\",\r\n      justify: \"space-between\",\r\n      align: \"center\",\r\n      px: \"5%\",\r\n    },\r\n    boxCircleColor: {\r\n      bgColor: \"#000000\",\r\n      color: \"white\",\r\n      fontWeight: \"700\",\r\n    },\r\n    smallButton: {\r\n      w: \"95px\",\r\n      h: \"42px\",\r\n      bg: \"#000000\",\r\n      borderRadius: \"100px\",\r\n    },\r\n    font1: {\r\n      fontSize: \"14px\",\r\n      lineHeight: \"22px\",\r\n      color: \"#999999\",\r\n    },\r\n    font2: {\r\n      fontSize: \"18px\",\r\n      lineHeight: \"22px\",\r\n      color: \"#FFFFFF\",\r\n    },\r\n    infoBox: {\r\n      w: \"60%\",\r\n      h: \"10vw\",\r\n      px: \"2%\",\r\n      borderBottom: \"1px\",\r\n      borderBottomColor: \"gray.300\",\r\n    },\r\n    rootBox: {\r\n      w: \"100%\",\r\n      h: \"100%\",\r\n      borderRadius: \"15px\",\r\n      overflow: \"hidden\",\r\n      borderWidth: \"1px\",\r\n      borderColor: \"#00000007\",\r\n    },\r\n    leftSection: {\r\n      // h: \"100%\",\r\n      w: \"75%\",\r\n    },\r\n    rightSection: {\r\n      h: \"100%\",\r\n      w: \"25%\",\r\n      py: \"4px\",\r\n    },\r\n    lowerSec: {\r\n      w: \"100%\",\r\n      align: \"center\",\r\n    },\r\n    headingStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"16px\"],\r\n    },\r\n    headingStyle2: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"18px\"],\r\n      color: \"#999999\",\r\n    },\r\n    subHeadStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"12px\", \"12px\", \"14px\"],\r\n    },\r\n    bodyStyle: {\r\n      fontSize: [\"14px\", \"14px\", \"16px\", \"16px\", \"18px\"],\r\n      color: \"#000000\",\r\n    },\r\n    button: {\r\n      borderWidth: 1,\r\n      borderColor: \"#000000\",\r\n      px: \"2%\",\r\n      py: \"0.5%\",\r\n      borderRadius: \"100px\",\r\n    },\r\n    contain: {\r\n      w: \"100%\",\r\n      h: \"64px\",\r\n      mt: \"297px\",\r\n    },\r\n    head: {\r\n      fontSize: {\r\n        base: \"18px\",\r\n        md: \"20px\",\r\n      },\r\n    },\r\n\r\n    smallerDesc: {\r\n      fontSize: {\r\n        base: \"10px\",\r\n        md: \"16px\",\r\n      },\r\n    },\r\n\r\n    container: {\r\n      w: \"100px\",\r\n      _hover: {\r\n        background: \"black\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n    font: {\r\n      fontSize: [\"14px\"],\r\n      color: \"#959595\",\r\n    },\r\n\r\n    popfont: {\r\n      fontSize: \"12px\",\r\n      lineHeight: \"14px\",\r\n      color: \"#999999\",\r\n    },\r\n    personalCenter: {\r\n      bg: \"dark\",\r\n      px: \"10px\",\r\n      py: \"5px\",\r\n      borderRadius: \"5px\",\r\n      color: \"light\",\r\n    },\r\n    chainModalCenter: {\r\n      px: \"5px\",\r\n      mr: \"5px\",\r\n      borderRadius: \"10px\",\r\n      bg: \"grey\",\r\n      borderWidth: 1,\r\n      py: \"5px\",\r\n      _hover: {\r\n        borderColor: \"#99999980\",\r\n      },\r\n    },\r\n    skelCenter: {\r\n      px: \"10px\",\r\n      borderRadius: \"10px\",\r\n      bg: \"grey\",\r\n      borderWidth: 1,\r\n      py: \"5px\",\r\n      _hover: {\r\n        borderColor: \"#99999980\",\r\n      },\r\n    },\r\n    circleReward: {\r\n      width: \"50px\",\r\n      height: \"50px\",\r\n      bg: \"#00000010\",\r\n    },\r\n    searchFlex: {\r\n      justifyContent: \"center\",\r\n      gap: \"17px\",\r\n      alignItems: \"center\",\r\n    },\r\n    balanceFlex: {\r\n      mt: \"24px\",\r\n      mb: \"40px\",\r\n    },\r\n    balanceButton: {\r\n      bg: \"#000000\",\r\n      w: \"100%\",\r\n      h: \"70px\",\r\n      borderRadius: \"0px\",\r\n      color: \"#FFFFFF\",\r\n      _hover: {\r\n        bg: \"dark\",\r\n      },\r\n    },\r\n    inputStack: {\r\n      w: \"100%\",\r\n      borderWidth: 1,\r\n      borderColor: \"#00000030\",\r\n      zIndex: \"1000\",\r\n      bg: \"light\",\r\n    },\r\n    imageBrandLogo: {\r\n      h: \"50px\",\r\n      borderRadius: \"50px\",\r\n      bg: \"#00000020\",\r\n      w: \"50px\",\r\n    },\r\n    doneBox: {\r\n      bg: \"#000000\",\r\n      w: \"100%\",\r\n      h: \"80px\",\r\n      color: \"#FFFFFF\",\r\n    },\r\n    rightSectionImage: {\r\n      w: \"100px\",\r\n      bg: \"#00000020\",\r\n      h: \"100px\",\r\n    },\r\n    dealPriceFlex: {\r\n      justify: \"space-between\",\r\n      mt: \"20px\",\r\n      bg: \"#F2F2F2\",\r\n      padding: \"6px\",\r\n    },\r\n    differenceFlex: {\r\n      padding: \"6px\",\r\n      bg: \"#FFFFFF\",\r\n      justify: \"space-between\",\r\n    },\r\n    subtotalFlex: {\r\n      justify: \"space-between\",\r\n      bg: \"#F2F2F2\",\r\n      padding: \"6px\",\r\n    },\r\n    headingsFlex: {\r\n      justify: \"space-between\",\r\n      mt: \"30px\",\r\n      py: \"6px\",\r\n    },\r\n    editText: {\r\n      fontSize: \"14px\",\r\n      color: \"#AEAEAE\",\r\n    },\r\n    boxPrice: {\r\n      color: \"#000000\",\r\n      h: 4,\r\n      fontSize: \"14px\",\r\n      px: 2,\r\n    },\r\n    boxPercent: {\r\n      color: \"#999999\",\r\n      h: 4,\r\n      fontSize: \"14px\",\r\n      px: 2,\r\n    },\r\n  };\r\n};\r\n"],"names":["FAQ","id","title","body","HOW_IT_WORKS","text","BOUNTIES_TEXT_DEMO","titleTiming","time","toast","msg","description","duration","pos","status","isClosable","position","RedeemNavBar","lazy","_swapTokens$","_state$tokens","_steps","_state$offerImages$","_state$reward7","_state$reward8","_swapTokens$5","_swapTokens$6","dispatch","useDispatch","_useMeProtocol","useMeProtocol","getExpectedAmountOfTargetedReward","spendRewardsOnAnotherBrandWithVaultPermit","spendRewardsOnIssuingBrandWithVaultPermit","spendingSteps","state","useLocation","useToast","navigate","useNavigate","steps","_useSteps","useSteps","index","count","length","activeStep","setActiveStep","_useState","useState","_useState2","_slicedToArray","searchOpen","setSearchOpen","_useState3","_useState4","setTokenChecked","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","orderId","setOrderId","_useState9","_useState10","activeCheckIndex","setActiveCheckIndex","_useState11","_useState12","tokenBalance","setTokenBalance","_useState13","_useState14","_useState15","_useState16","redeemLoading","setRedeemLoading","_useState17","_useState18","setNeededValueLoading","_useState19","_useState20","neededTokens","setNeededTokens","_useState21","_useState22","neededTokenInBigNumber","setNeededTokensInBigNumber","_useState23","_useState24","rerunTokenFetch","setRerunTokenFetch","_useDisclosure","useDisclosure","syncSuccessIsOpen","isOpen","syncSuccessOnOpen","onOpen","syncSuccessOnClose","onClose","_useDisclosure2","progressModalIsOpen","progressModalOnOpen","progressModalOnClose","_useRedeemStyles","useRedeemStyles","root","root2","nameStyles","boxCircleColor","leftSection","rightSection","font","font1","subHeadStyle","headingStyle","circleReward","searchFlex","balanceFlex","balanceButton","inputStack","imageBrandLogo","doneBox","rightSectionImage","dealPriceFlex","differenceFlex","subtotalFlex","headingsFlex","editText","boxPrice","boxPercent","_useSelector","useSelector","authReducer","token","_useSelector2","tokenSwapReducer","swapTokens","_useSelector3","productReducer","reward_type_product","_useGetWallet","reward_type_loading","useGetWallet","getTokenBalance","tokenBalanceLoading","loading","contractAddress","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","t1","sent","stop","CALC_NEEDED_REWARDS","getTokenBasedRewards","setCostPayerId","brandId","clearSwap","addToSwap","find","item","setFilteredSearch","_toConsumableArray","reverse","setMasterData","_useState25","_useState26","filteredSearch","_useState27","_useState28","masterData","console","log","tokens","toString","_ref2","_callee2","_state$reward","_swapTokens$2","_state$reward2","expectedAmount","_context2","reward","abrupt","amount","inputRewardAddress","outPutRewardAddress","Number","ethers","toFixed","finish","apply","arguments","SWAP_FUNCTIONALITY","_ref3","_callee3","_swapTokens$3","_data$data","_yield$axios$post","data","_state$reward3","_state$reward4","swapRes","_data$data2","_data$data3","_yield$axios$post2","_error$response","_error$response$data","_context3","axios","concat","BASE_URL","offerId","quantity","headers","Authorization","rewardId","spendInfo","rewardAtHand","targettedReward","amountOfRewardAtHand","expectedAmountOfTargetedReward","taskId","ME_API_KEY","CustomErrorToast","response","message","SWAP_FOR_SAME_BRAND","_ref4","_callee4","_data$data4","_yield$axios$post3","_state$reward5","_state$reward6","_data$data5","_data$data6","_yield$axios$post4","_error$response2","_error$response2$data","_context4","reward_address","reward_amount","activeStepText","progressPercent","_jsxs","Box","w","h","children","_jsx","Suspense","fallback","Spinner","size","Flex","flexDir","Container","Stack","_objectSpread","mb","Spacer","justifyContent","alignItems","map","e","Circle","as","Image","objectFit","mr","src","rewardImage","Images_Icons","appLogoPlaceholder","fallbackSrc","fallbackStrategy","nanoid","pl","Text","color","brandName","Skeleton","isLoaded","balance","rewardSymbol","onClick","arrowLeftIcon","Button","isLoading","disabled","_swapTokens$4","MeProtocolToast","mt","InputGroup","_focus","boxShadow","InputLeftElement","pointerEvents","Icon","FaSearch","p","Input","value","onChange","_ref5","target","newData","filter","_item$brand","_item$brand2","itemData","brand","toUpperCase","textData","indexOf","SearchFilter","placeholder","borderRadius","borderWidth","Divider","borderColor","_Fragment","i","px","py","align","fontSize","fontWeight","Checkbox","spacing","colorScheme","isChecked","_ref6","checked","justify","orientation","ml","textAlign","textDecoration","GLOBAL_PREFIX","Avatar","m","offerImages","url","name","price","_swapTokens$7","padding","bg","ModalComponent","closeOnOverlayClick","VStack","Lottie","style","width","height","animationData","checkMark","loop","autoplay","Heading","pb","MeProtocolButton","_callee5","_context5","window","scrollTo","top","behavior","spinning_loader","Stepper","gap","step","Step","StepIndicator","StepStatus","complete","StepIcon","Progress","zIndex","hasStripe","transition","alignSelf","justifySelf","overflow","itemBox","border","bgColor","smallButton","lineHeight","font2","infoBox","borderBottom","borderBottomColor","rootBox","lowerSec","headingStyle2","bodyStyle","button","contain","head","base","md","smallerDesc","container","_hover","background","popfont","personalCenter","chainModalCenter","skelCenter"],"sourceRoot":""}