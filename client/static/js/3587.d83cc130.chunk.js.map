{"version":3,"file":"static/js/3587.d83cc130.chunk.js","mappings":"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","sources":["components/CountrySelector/index.tsx","components/Footer/index.tsx","../node_modules/@chakra-ui/layout/src/link.tsx","../node_modules/@chakra-ui/select/src/select-field.tsx","../node_modules/@chakra-ui/select/src/select.tsx","../node_modules/utilities/object-utils/src/split.ts"],"sourcesContent":["import { FC, memo } from \"react\";\nimport { Flex, Image, Select } from \"@chakra-ui/react\";\nimport { countries } from \"../../constants/countries\";\nimport { nanoid } from \"nanoid\";\nimport { CountrySelectorProps } from \"../../interfaces\";\n\nconst CountrySelector: FC<CountrySelectorProps> = ({\n  value,\n  onChange,\n  isCallingCode,\n  disabled,\n  ...rest\n}) => {\n  const { root } = useStyles();\n\n  const countryData = countries?.map((data) => {\n    return { id: nanoid(), ...data };\n  });\n\n  const flag = countryData.filter(\n    (e) => e.name === value || e.callingCodes[0] === value\n  )?.[0];\n  return (\n    <Flex {...root} {...rest}>\n      <Image\n        data-testid={\"img-1\"}\n        src={flag?.flag}\n        style={{ width: \"28px\", height: \"28px\", borderRadius: \"20px\" }}\n      />\n      <Select\n        onChange={onChange}\n        value={value}\n        variant=\"unstyled\"\n        placeholder=\"Select country...\"\n        pl={\"5px\"}\n        h=\"48px\"\n        alignSelf=\"center\"\n        justifySelf={\"center\"}\n        justifyContent=\"center\"\n        disabled={disabled}\n\n        // marginBottom=\"10px\"\n      >\n        {countryData\n          .sort(function (a: any, b: any) {\n            return b.callingCodes[0] - a.callingCodes[0];\n          })\n          ?.map((e: any) => (\n            <option\n              key={nanoid()}\n              value={isCallingCode ? e.callingCodes[0] : e.name}\n            >\n              {isCallingCode ? \"\" : e.name}\n            </option>\n          ))}\n      </Select>\n    </Flex>\n  );\n};\n\nexport default memo(CountrySelector);\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      h: \"48px\",\n      align: \"center\",\n      justify: \"center\",\n      borderRadius: 58,\n      px: \"10px\",\n      bg: \"grey\",\n      outline: \"none\",\n      boxShadow: \"0px\",\n    },\n  };\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { Image, Flex, Text, Link, Heading, Box } from \"@chakra-ui/react\";\nimport iconsImages from \"../../constants/icons-images\";\nimport CountrySelector from \"../CountrySelector\";\nimport { footerIcons, footerLinks } from \"../../constants/dummyJSON\";\nimport { nanoid } from \"nanoid\";\nimport MeProtocolButton from \"../MeProtocolButton\";\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport Container from \"../Container\";\n\nconst Footer: FC = (): JSX.Element => {\n  // let navigate = useNavigate();\n  const { root, copyrightText, countrySelect, linksStyle } = useStyles();\n  const [country, setCountry] = useState<string>(\"United States of America\");\n\n  useEffect(() => {\n    getGeoInfo();\n  }, []);\n\n  const getGeoInfo = () => {\n    axios\n      .get(\"https://ipapi.co/json/\")\n      .then((response: AxiosResponse) => {\n        let data = response.data;\n        setCountry(data.country_name);\n        // alert(JSON.stringify(data.country_name));\n      })\n      .catch((error: AxiosError) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Flex {...root} flexDir={\"column\"}>\n      <Container>\n        <Flex\n          height={330}\n          // px={{ base: 5, md: 40 }}\n          justifyContent={\"space-between\"}\n        >\n          {/* LEFT COLUMN */}\n          <Flex w={\"25%\"} flexDir={\"column\"}>\n            <Image src={iconsImages.appLogoLight} width={\"50px\"} h={\"50px\"} />\n            {/* @ts-ignore */}\n            <CountrySelector\n              value={country}\n              onChange={({ target }: { target: { value: string } }) => {\n                setCountry(target.value);\n              }}\n              {...countrySelect}\n            />\n\n            <Flex w={\"50%\"} h={\"50px\"} justify={\"space-between\"}>\n              {footerIcons?.map((e) => (\n                <Box key={e.id} as=\"a\" href={e.link} mr={\"5px\"}>\n                  <Image src={e.icon} w={\"30px\"} h={\"30px\"} />\n                </Box>\n              ))}\n            </Flex>\n          </Flex>\n          {/*-------------------------------------------------- MIDDLE COLUMN-------------------------------------------- */}\n          <Flex w={\"55%\"} px={\"2%\"} justify={\"space-between\"}>\n            {/* --------------------------------------------ROW ONE------------------------------------ */}\n            <Flex flexDir={\"column\"}>\n              {footerLinks[0].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n              {footerLinks[1].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n            </Flex>\n\n            {/*------------------------------------- ROW TWO------------------------------------- */}\n            <Flex flexDir={\"column\"}>\n              {footerLinks[2].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n              {footerLinks[3].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n            </Flex>\n            {/*------------------------------------- ROW THREE -------------------------------------*/}\n            <Flex flexDir={\"column\"}>\n              {footerLinks[4].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n              {footerLinks[5].links?.map((e, i) => (\n                <Link\n                  key={nanoid()}\n                  {...linksStyle}\n                  fontSize={\n                    i === 0\n                      ? [\"16px\", \"16px\", \"16px\", \"16px\", \"16px\"]\n                      : [\"14px\", \"14px\", \"14px\", \"14px\", \"16px\"]\n                  }\n                  fontWeight={i === 0 ? 700 : 200}\n                  marginTop={i === 0 ? \"10px\" : \"0px\"}\n                  color={i === 0 ? \"light\" : \"darkGrey\"}\n                >\n                  {e}\n                </Link>\n              ))}\n            </Flex>\n          </Flex>\n\n          {/*-------------------------------------------- RIGHT COLUMN------------------------------------- */}\n          <Flex w={\"20%\"} align={\"flex-end\"} flexDir={\"column\"}>\n            <Heading\n              {...linksStyle}\n              fontSize={[\"14px\", \"16px\", \"16px\", \"16px\", \"16px\"]}\n              color={\"light\"}\n            >\n              Download\n            </Heading>\n            <MeProtocolButton\n              name={\"App Store\"}\n              rest={{\n                w: {\n                  base: \"100%\",\n                  md: \"70%\",\n                },\n                borderColor: \"light\",\n                borderWidth: 1,\n                fontSize: [\"10px\", \"12px\", \"14px\", \"14px\", \"16px\"],\n                mt: \"5px\",\n              }}\n              icon={\n                <Image\n                  src={iconsImages.appleIcon}\n                  h={\"18px\"}\n                  w={\"18px\"}\n                  mr={\"5px\"}\n                />\n              }\n            />\n            <MeProtocolButton\n              name={\"Play Store\"}\n              rest={{\n                w: {\n                  base: \"100%\",\n                  md: \"70%\",\n                },\n                borderColor: \"light\",\n                borderWidth: 1,\n                fontSize: [\"10px\", \"12px\", \"14px\", \"14px\", \"16px\"],\n                mt: \"5px\",\n              }}\n              icon={\n                <Image\n                  src={iconsImages.playstoreIcon}\n                  h={\"18px\"}\n                  w={\"18px\"}\n                  mr={\"5px\"}\n                />\n              }\n            />\n          </Flex>\n        </Flex>\n\n        <Text {...copyrightText}>\n          Copyright 20022 MyAI Inc. Headquarters: Zurich, Switzerland. All\n          rights reserved. MyAI Inc (publ). Sveavägen 46, 111 34 Switzerland.\n          Organization number: 556369172-03971\n        </Text>\n      </Container>\n    </Flex>\n  );\n};\n\nexport default Footer;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      backgroundColor: \"dark\",\n      height: \"450px\",\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n      mt: 10,\n      pt: 10,\n      // px: [5, 5, 10, 20, 40],\n    },\n    copyrightText: {\n      color: \"light\",\n      //   pl: \"5%\",\n      fontSize: [\"14px\", \"16px\", \"16px\", \"14px\", \"16px\"],\n    },\n    countrySelect: {\n      w: {\n        base: \"100%\",\n        md: \"60%\",\n      },\n      bg: \"dark\",\n      color: \"light\",\n      borderColor: \"light\",\n      borderWidth: \"1px\",\n      my: \"30px\",\n    },\n    linksStyle: {\n      color: \"darkGrey\",\n    },\n  };\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface SelectFieldProps\n  extends Omit<HTMLChakraProps<\"select\">, Omitted> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport const SelectField = forwardRef<SelectFieldProps, \"select\">(\n  function SelectField(props, ref) {\n    const { children, placeholder, className, ...rest } = props\n\n    return (\n      <chakra.select\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-select\", className)}\n      >\n        {placeholder && <option value=\"\">{placeholder}</option>}\n        {children}\n      </chakra.select>\n    )\n  },\n)\n\nSelectField.displayName = \"SelectField\"\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { dataAttr } from \"@chakra-ui/shared-utils\"\nimport { split } from \"@chakra-ui/object-utils\"\nimport { cloneElement, isValidElement } from \"react\"\n\nimport { SelectField, SelectFieldProps } from \"./select-field\"\n\ninterface RootProps extends Omit<HTMLChakraProps<\"div\">, \"color\"> {}\n\ninterface SelectOptions extends FormControlOptions {\n  /**\n   * The border color when the select is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the select is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * The placeholder for the select. We render an `<option/>` element that has\n   * empty value.\n   *\n   * ```jsx\n   * <option value=\"\">{placeholder}</option>\n   * ```\n   */\n  placeholder?: string\n  /**\n   * The size (width and height) of the icon\n   */\n  iconSize?: string\n  /**\n   * The color of the icon\n   */\n  iconColor?: string\n}\n\nexport interface SelectProps\n  extends SelectFieldProps,\n    ThemingProps<\"Select\">,\n    SelectOptions {\n  /**\n   * Props to forward to the root `div` element\n   */\n  rootProps?: RootProps\n  /**\n   * The icon element to use in the select\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement<any>\n}\n\n/**\n * React component used to select one item from a list of options.\n *\n * @see Docs https://chakra-ui.com/docs/components/select\n */\nexport const Select = forwardRef<SelectProps, \"select\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Select\", props)\n\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props)\n\n  const [layoutProps, otherProps] = split(rest, layoutPropNames as any[])\n\n  const ownProps = useFormControl(otherProps)\n\n  const rootStyles: SystemStyleObject = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color,\n  }\n\n  const fieldStyles: SystemStyleObject = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...(styles as any).field?.[\"_focus\"],\n    },\n  }\n\n  return (\n    <chakra.div\n      className=\"chakra-select__wrapper\"\n      __css={rootStyles}\n      {...layoutProps}\n      {...rootProps}\n    >\n      <SelectField\n        ref={ref}\n        height={h ?? height}\n        minH={minH ?? minHeight}\n        placeholder={placeholder}\n        {...ownProps}\n        __css={fieldStyles}\n      >\n        {props.children}\n      </SelectField>\n\n      <SelectIcon\n        data-disabled={dataAttr(ownProps.disabled)}\n        {...((iconColor || color) && { color: iconColor || color })}\n        __css={styles.icon}\n        {...(iconSize && { fontSize: iconSize })}\n      >\n        {icon}\n      </SelectIcon>\n    </chakra.div>\n  )\n})\n\nSelect.displayName = \"Select\"\n\nexport const DefaultIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n    />\n  </svg>\n)\n\nconst IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n})\n\ninterface SelectIconProps extends HTMLChakraProps<\"div\"> {}\n\nconst SelectIcon: React.FC<SelectIconProps> = (props) => {\n  const { children = <DefaultIcon />, ...rest } = props\n\n  const clone = cloneElement(children as any, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    // force icon to adhere to `IconWrapper` styles\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\",\n    },\n  })\n\n  return (\n    <IconWrapper {...rest} className=\"chakra-select__icon-wrapper\">\n      {isValidElement(children) ? clone : null}\n    </IconWrapper>\n  )\n}\n\nSelectIcon.displayName = \"SelectIcon\"\n","export function split<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keys: K[],\n) {\n  const picked: Record<string, any> = {}\n  const omitted: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key as T[K])) picked[key] = value\n    else omitted[key] = value\n  }\n\n  return [picked, omitted] as [\n    {\n      [P in K]: T[P]\n    },\n    Omit<T, K>,\n  ]\n}\n"],"names":["CountrySelector","_ref","_countryData$filter","_countryData$sort","value","onChange","isCallingCode","disabled","rest","_objectWithoutProperties","_excluded","root","useStyles","countryData","countries","map","data","_objectSpread","id","nanoid","flag","filter","e","name","callingCodes","_jsxs","Flex","children","_jsx","Image","src","style","width","height","borderRadius","Select","variant","placeholder","pl","h","alignSelf","justifySelf","justifyContent","sort","a","b","memo","w","align","justify","px","bg","outline","boxShadow","_footerLinks$0$links","_footerLinks$1$links","_footerLinks$2$links","_footerLinks$3$links","_footerLinks$4$links","_footerLinks$5$links","_useStyles","copyrightText","countrySelect","linksStyle","_useState","useState","_useState2","_slicedToArray","country","setCountry","useEffect","getGeoInfo","axios","then","response","country_name","catch","error","console","log","flexDir","Container","iconsImages","appLogoLight","target","footerIcons","Box","as","href","link","mr","icon","footerLinks","links","i","Link","fontSize","fontWeight","marginTop","color","Heading","MeProtocolButton","base","md","borderColor","borderWidth","mt","appleIcon","playstoreIcon","Text","backgroundColor","borderTopLeftRadius","borderTopRightRadius","pt","my","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","jsx","chakra","rel","cx","__css","displayName","SelectField","jsxs","select","_a","useMultiStyleConfig","rootProps","minH","minHeight","iconColor","iconSize","_split","object","keys","picked","omitted","_i","_Object$entries","Object","entries","length","_Object$entries$_i","key","includes","split","layoutPropNames","_split2","layoutProps","otherProps","ownProps","useFormControl","rootStyles","position","fieldStyles","paddingEnd","field","_focus","zIndex","div","SelectIcon","dataAttr","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","pointerEvents","top","transform","_props$children","_excluded2","clone","cloneElement","role","focusable","isValidElement"],"sourceRoot":""}