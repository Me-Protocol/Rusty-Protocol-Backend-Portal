{"version":3,"file":"static/js/2476.e7b7b97f.chunk.js","mappings":"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","sources":["components/NewNavBar/index.tsx"],"sourcesContent":["import {\n  Avatar,\n  Center,\n  Divider,\n  Flex,\n  HStack,\n  Icon,\n  Input,\n  InputGroup,\n  Image,\n  InputLeftElement,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Spacer,\n  Text,\n  Heading,\n  Button,\n  PopoverHeader,\n  Circle,\n  Box,\n  Spinner,\n  ScaleFade,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { FC, memo, useCallback, useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { FaChevronRight, FaSearch } from \"react-icons/fa\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthReducerProps, CartReducerProps, UserReducerProps } from \"../../interfaces\";\nimport { RootState } from \"../../redux/store\";\nimport { Dispatch } from \"redux\";\nimport { logOut } from \"../../redux/AuthSlice\";\nimport PopoverComponent from \"../PopoverComponent\";\nimport {\n  useGetCategoriesQuery,\n  useGetTrendingBrandsQuery,\n  useGetAllNotificationsQuery,\n  CategoryType,\n  useGetShopsQuery,\n  useGlobalSearchQuery,\n} from \"../../redux/rtkQuery/api\";\nimport Container from \"../Container\";\nimport Searchbox from \"../Searchbox\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config\";\nimport bellIcon from \"../../assets/icons/notificationIcon.svg\";\nimport cartIcon from \"../../assets/icons/CartIcon.svg\";\nimport debounce from \"lodash.debounce\";\nimport { cancelBounty, clearBounty } from \"../../redux/BountySlice\";\nimport { GLOBAL_PREFIX } from \"../../constants\";\nimport { SearchResponseData } from \"../NewDashboardNavBar/interface\";\n\nconst NavBar: FC<any> = ({ customPadding, ...rest }): JSX.Element => {\n  let navigate = useNavigate();\n  const { isOpen, onToggle } = useDisclosure();\n\n  const dispatch = useDispatch<Dispatch>();\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n  const {\n    user_data,\n    my_rewards,\n    prev_notification_count,\n    current_notification_count,\n    new_notification_count,\n  }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n\n  const { cartItems }: CartReducerProps = useSelector((state: RootState) => state.cartReducer);\n\n  const { data: notificationData }: any = useGetAllNotificationsQuery(\n    { page: 1 },\n    {\n      refetchOnMountOrArgChange: true,\n      skip: !token,\n    }\n  );\n\n  const [searchOpen, setSearchOpen] = useState<boolean>(false);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  // const [searchResultLoading, setSearchResultLoading] = useState<boolean>(false);\n  // const [searchResult, setSearchResult] = useState<Array<any>>([]);\n  const [showNavbar, setShowNavbar] = useState<boolean>(true);\n  const { data, isLoading } = useGetCategoriesQuery(\n    { page: 1, limit: 7, type: CategoryType.PRODUCT },\n    {\n      refetchOnMountOrArgChange: true,\n    }\n  );\n  // const {\n  //   data: syncedRewards,\n  //   error,\n  //   refetch: refetchSyncRewards,\n  // } = useGetAllUserSyncedRewardsQuery(undefined, {\n  //   refetchOnFocus: true,\n  //   skip: !token,\n  // });\n\n  const { data: trendingBrands, isLoading: trendingBrandsLoading } = useGetShopsQuery(\n    { page: 1, limit: 5 },\n    { refetchOnMountOrArgChange: 300 }\n  );\n  // useEffect(() => {\n  //   // console.log(trendingBrands, \"YYUUTT\");\n  //   if (token) {\n  //     // if (token) dispatch(getUserInfo({ token }));\n  //     dispatch(getUserCollection({ token }));\n  //   }\n  // }, [token]);\n  // ------------------------------------GLOBAL SEARCH FN------------------------------------------------------\n  // const debouncedSearch = useCallback(\n  //   debounce((query: string) => {\n  //     setSearchResultLoading(true);\n  //     axios\n  //       .get(`${BASE_URL}/search?q=${query}`)\n  //       .then((res: any) => {\n  //         // console.log(res, \"E WORK\");\n  //         setSearchResult(res?.data?.result);\n  //       })\n  //       .catch((err: any) => {\n  //         console.log(err, \"Err SEARCH\");\n  //       })\n  //       .finally(() => {\n  //         setSearchResultLoading(false);\n  //       });\n  //   }, 500),\n  //   []\n  // );\n  // const DoGlobalSearch = (query: string) => {\n  //   if (searchValue.length <= 1) return;\n  //   if (!query) return setSearchResult([]);\n  //   debouncedSearch(query);\n  // };\n  \n\n  // use rkQuery to search\n  // check the interface.ts file for the response type of search\n  const { data: searchResultResponse, isLoading: searchResultLoading, error: searchError } = useGlobalSearchQuery(\n    { search_value: searchValue, page: 1, limit: 10 },\n    {\n      skip: searchValue.length < 3,\n      refetchOnMountOrArgChange: true,\n    },\n  );\n\n  let searchResult = searchResultResponse as SearchResponseData;\n  // console.log('isLoading', searchResultLoading)\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedLanguage, setSelectedLanguage] = useState(0);\n\n  const {\n    root,\n    container,\n    font,\n    popfont,\n    search,\n    shopperBox,\n    infoBox,\n    shopperBusiness,\n    homeIcon,\n    notification,\n    helpText,\n    iconsLogo,\n    popoverTexts,\n    popoverLightTexts,\n    itemBox,\n    searchRoot,\n    boxCircleColor,\n  } = useNavbarStyles();\n\n  // console.log(trendingBrands, \"trendingBrands\");\n  //------------------ useEffect is active for the cool animation on the navbar --------------------\n  useEffect(() => {\n    let prevScrollPos = window.pageYOffset;\n    const handleScroll = () => {\n      const currentScrollPos = window.pageYOffset;\n      setShowNavbar(prevScrollPos > currentScrollPos || currentScrollPos <= 0);\n      prevScrollPos = currentScrollPos;\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <Flex\n      {...root}\n      pos=\"fixed\"\n      flexDir={\"column\"}\n      top={showNavbar ? 0 : \"-100%\"}\n      left=\"0\"\n      right=\"0\"\n      transition=\"top 0.3s ease-in-out\"\n      zIndex=\"docked\"\n    >\n      {/* ----------------------------------------------------------------TOP SECTION ----------------------------------------------------------------*/}\n\n      <Box w=\"100%\" bg=\"#E3E3E3\">\n        <Container>\n          <Flex\n            bg={\"#E3E3E3\"}\n            h={\"50px\"}\n            // px={customPadding || [5, 5, 10, 20, 40]}\n            align={\"center\"}\n          >\n            <Flex {...shopperBox} flexDir=\"row\">\n              {[\"For Shoppers\", \"For Businesses\"]?.map((e, i: number) => (\n                <Center\n                  key={nanoid()}\n                  as=\"button\"\n                  textTransform=\"uppercase\"\n                  bg={activeIndex === i ? \"dark\" : \"#C3C3C3\"}\n                  color={activeIndex === i ? \"light\" : \"dark\"}\n                  onClick={() => setActiveIndex(i)}\n                  fontSize=\"14px\"\n                  fontWeight=\"400\"\n                  pos={\"relative\"}\n                  right={i === 1 ? \"10px\" : \"0px\"}\n                  // pl={i === 1 ? \"30px\" : \"0px\"}\n                  zIndex={i === 0 ? 100 : 10}\n                  borderLeftRadius={i === 0 ? \"50px\" : \"0px\"}\n                  {...shopperBusiness}\n                >\n                  <Heading fontSize={[\"12px\", \"12px\", \"12px\", \"12px\", \"12px\"]} noOfLines={1}>\n                    {e}\n                  </Heading>\n                </Center>\n              ))}\n            </Flex>\n            <Spacer />\n            {/* ----------------------------------------------------------------IS LOGGED IN STATE--------------------------------------------------------*/}\n            {token ? (\n              <Flex {...infoBox}>\n                <Center {...helpText} textTransform=\"uppercase\">\n                  Help\n                </Center>\n                <Divider\n                  orientation=\"vertical\"\n                  h={\"12px\"}\n                  mx={\"5px\"}\n                  borderWidth=\"2px\"\n                  borderColor=\"black\"\n                />\n                <Popover isLazy placement=\"bottom-end\" trigger={\"hover\"}>\n                  <PopoverTrigger>\n                    <Flex\n                      as=\"button\"\n                      flexDir={\"row\"}\n                      align={\"center\"}\n                      color={\"dark\"}\n                      _hover={{ bg: \"black\", color: \"white\" }}\n                      textTransform=\"uppercase\"\n                      fontWeight=\"700\"\n                      fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}\n                    >\n                      Hi, {user_data?.customer?.name || \"user\"}\n                      <Avatar\n                        ml={\"5px\"}\n                        name={`${user_data?.customer?.name}`}\n                        src={user_data?.customer?.profilePicture}\n                        size={\"sm\"}\n                      />\n                    </Flex>\n                  </PopoverTrigger>\n                  {/* ----------------------------------USER POPOVER CONTENT------------------------------ */}\n                  <PopoverContent\n                    borderRadius=\"0\"\n                    // boxSizing=\"border-box\"\n                    position=\"relative\"\n                    width=\"250px\"\n                    background=\"#FFFFFF\"\n                    border=\"1px\"\n                  >\n                    {/*--------------------------------- NAME SECTION ------------------------------------ */}\n                    <Flex\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      {...itemBox}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/settings`)}\n                    >\n                      <Flex flexDir={\"column\"}>\n                        <Text {...popoverTexts} noOfLines={1}>\n                          {user_data?.customer?.firstName} {user_data?.customer?.lastName}\n                        </Text>\n                        <Text {...popoverLightTexts}>{user_data?.email}</Text>\n                      </Flex>\n                      <Icon as={FaChevronRight} />\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- EDITS SECTION ------------------------------------ */}\n\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My assets</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        {my_rewards?.length || 0}\n                      </Text>\n                    </Flex>\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My Offers</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        0\n                      </Text>\n                    </Flex>\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-saved`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr={\"5%\"}\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>Saved</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        0\n                      </Text>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\n                    <Flex\n                      {...itemBox}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      as=\"a\"\n                      href={\"https://www.supremenewyork.com\"}\n                    >\n                      <Avatar\n                        mr={\"5px\"}\n                        name=\"John Doe\"\n                        src=\"https://pbs.twimg.com/profile_images/846716933894537216/7VCYCh5V_400x400.jpg\"\n                        size={\"sm\"}\n                      />\n                      <Flex flexDir={\"column\"} pl=\"5px\" w=\"75%\">\n                        <Text {...popoverTexts}>Supreme</Text>\n                        <Text\n                          as=\"a\"\n                          href={\"https://www.supremenewyork.com\"}\n                          {...popoverLightTexts}\n                          noOfLines={1}\n                          textDecoration={\"underline\"}\n                          w=\"95%\"\n                        >\n                          https://www.supremenewyork.com\n                        </Text>\n                      </Flex>\n                      <Icon as={FaChevronRight} />\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My assets</Text>\n                      </Flex>\n                    </Flex>\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My Offers</Text>\n                      </Flex>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- INSTALL APP SECTION ------------------------------------ */}\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.mobileapp_icon}\n                        />\n                        <Text {...popoverTexts}>Install mobile app</Text>\n                      </Flex>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- LOGOUT SECTION ------------------------------------ */}\n\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => {\n                        dispatch(logOut());\n                        dispatch(cancelBounty());\n                        dispatch(clearBounty());\n                      }}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.logoutIcon}\n                        />\n                        <Text {...popoverTexts}>Logout</Text>\n                      </Flex>\n                    </Flex>\n                  </PopoverContent>\n                </Popover>\n              </Flex>\n            ) : (\n              <Flex flexDir={\"row\"} w={\"20%\"} justify={\"flex-end\"}>\n                {[\"EN\", \"FR\", \"IT\"]?.map((e, i) => (\n                  <Center\n                    key={nanoid()}\n                    as={Button}\n                    w={\"10%\"}\n                    h={\"90%\"}\n                    color={i === selectedLanguage ? \"black\" : \"white\"}\n                    borderWidth={0.5}\n                    borderRadius={\"100px\"}\n                    px={\"7%\"}\n                    ml={\"3%\"}\n                    _hover={{ bg: i === selectedLanguage ? \"white\" : \"dark\" }}\n                    bg={i === selectedLanguage ? \"white\" : \"black\"}\n                    onClick={() => {\n                      setSelectedLanguage(i);\n                    }}\n                  >\n                    <Heading fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}>{e}</Heading>\n                  </Center>\n                ))}\n              </Flex>\n            )}\n          </Flex>\n        </Container>\n      </Box>\n\n      {/* ----------------------------------------------------------------------LOWER SECTION --------------------------------------------*/}\n      <Box w=\"100%\" bg=\"light\">\n        <Container>\n          <Flex\n            bg={\"light\"}\n            h={\"55px\"}\n            // px={customPadding || [5, 5, 10, 20, 40]}\n            borderBottomWidth={1}\n            w={\"100%\"}\n            display={[\"none\", \"none\", \"flex\", \"flex\", \"flex\"]}\n            {...rest}\n          >\n            <HStack w={\"100%\"}>\n              <Flex\n                {...homeIcon}\n                as=\"button\"\n                onClick={() => {\n                  token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\n                }}\n              >\n                <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n              </Flex>\n              {/* ----------------------------------------SEARCH BAR SECTION --------------------------------------------*/}\n              <Flex\n                {...search}\n                as=\"button\"\n                onClick={() => {\n                  onToggle();\n                }}\n              >\n                <Icon as={FaSearch} color=\"#000000\" />\n                <Text noOfLines={1} {...font} px={\"3%\"} color={\"#000000\"}>\n                  Search offers, brand or style...\n                </Text>\n              </Flex>\n              {/* ----------------------------------------MENU BAR SECTION --------------------------------------------*/}\n              <PopoverComponent label=\"Brands\">\n                {trendingBrands?.data?.brands?.map((e) => (\n                  <PopoverHeader\n                    as=\"button\"\n                    {...font}\n                    key={nanoid()}\n                    onClick={() =>\n                      navigate(`${GLOBAL_PREFIX}/dashboard/shop/${e.name}`, {\n                        state: { ...e },\n                      })\n                    }\n                  >\n                    <Flex>\n                      <Image\n                        src={e?.logo}\n                        w=\"20px\"\n                        h=\"20px\"\n                        mr=\"15px\"\n                        objectFit={\"contain\"}\n                        borderRadius={\"20px\"}\n                      />\n                      <Text textAlign={\"left\"}>{e.name}</Text>\n                    </Flex>\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <PopoverComponent label=\"Categories\">\n                {data?.data?.categories.map((e: { name: string }) => (\n                  <PopoverHeader\n                    {...font}\n                    key={nanoid()}\n                    onClick={() => {\n                      navigate(`${GLOBAL_PREFIX}/dashboard/category/${e.name}`, {\n                        state: { ...e },\n                      });\n                    }}\n                  >\n                    {e.name}\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <PopoverComponent label=\"Special\">\n                {[].map((e: { name: string }) => (\n                  <PopoverHeader\n                    {...font}\n                    key={nanoid()}\n                    onClick={() => {\n                      navigate(`${GLOBAL_PREFIX}/dashboard/category/${e.name}`, {\n                        state: { ...e },\n                      });\n                    }}\n                  >\n                    {e.name}\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <Flex {...container}>\n                <Text {...font} textTransform=\"uppercase\" fontWeight=\"700\" as=\"button\">\n                  Latest\n                </Text>\n              </Flex>\n              <Spacer />\n              {token ? (\n                <>\n                  {/* ++++++++++++++++++ Notification Bell is here +++++++++++++++++++++ */}\n                  <Flex\n                    as=\"button\"\n                    {...iconsLogo}\n                    {...notification}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/notification`)}\n                  >\n                    <Image src={bellIcon} mr=\"1\" w=\"25px\" h=\"25px\" />\n                    {notificationData?.data?.total - prev_notification_count > 0 && (\n                      <Circle\n                        size=\"21px\"\n                        {...boxCircleColor}\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        color=\"light\"\n                        className={\"infinite-bounce\"}\n                      >\n                        <Text fontSize={\"14px\"} fontWeight=\"600\">\n                          {notificationData?.data?.length - prev_notification_count}\n                          {/* {notificationData?.data?.length} */}\n                        </Text>\n                      </Circle>\n                    )}\n                  </Flex>\n\n                  {/* ++++++++++++++++++ The END Notification Bell is here +++++++++++++++++++++ */}\n\n                  {/* --------------------------------- ADD BAG ICON ------------------------------------------- */}\n                  <Flex\n                    as=\"button\"\n                    {...iconsLogo}\n                    {...notification}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/bag`)}\n                  >\n                    <Image src={cartIcon} mr=\"1\" w=\"25px\" h=\"25px\" />\n                    {cartItems?.length > 0 && (\n                      <Circle\n                        size=\"21px\"\n                        {...boxCircleColor}\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        color=\"light\"\n                      >\n                        <Text fontSize={\"14px\"} fontWeight=\"600\">\n                          {cartItems?.length}\n                        </Text>\n                      </Circle>\n                    )}\n                  </Flex>\n                </>\n              ) : (\n                <Flex>\n                  <Center\n                    as={Button}\n                    bg={\"black\"}\n                    color={\"white\"}\n                    px={\"15px\"}\n                    py={\"3px\"}\n                    _hover={{ bg: \"dark\" }}\n                    borderRadius={\"100px\"}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/register`)}\n                  >\n                    <Text>Create an account</Text>\n                  </Center>\n                  <Spacer />\n                  <Center\n                    as={Button}\n                    bg={\"white\"}\n                    color={\"dark\"}\n                    borderWidth={1}\n                    borderColor={\"black\"}\n                    ml={\"15px\"}\n                    py={\"3px\"}\n                    _hover={{ bg: \"white\" }}\n                    borderRadius={\"100px\"}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/login`)}\n                  >\n                    <Text>Login</Text>\n                  </Center>\n                </Flex>\n              )}\n            </HStack>\n          </Flex>\n        </Container>\n      </Box>\n\n      {/* ----------------------------------------------------------------------SEARCH SECTION --------------------------------------------*/}\n      <Box\n        display={!isOpen ? \"none\" : \"block\"}\n        pos={\"absolute\"}\n        w=\"100%\"\n        zIndex={1000}\n        bg=\"white\"\n        minHeight={\"100px\"}\n      >\n        <ScaleFade in={isOpen}>\n          <Box\n            // bg=\"red\"\n            zIndex={1000}\n            boxShadow={\"1px 1px 3px #00000035\"}\n            // alignItems=\"center\"\n            minHeight={\"auto\"}\n          >\n            <Container>\n              <Flex\n                {...searchRoot}\n                // px={customPadding || [5, 5, 10, 20, 40]}\n                pt={5}\n                minHeight={\"auto\"}\n                // minHeight={searchResult.length > 0 ? \"600px\" : \"100px\"}\n                transition={\"min-height 0.5s\"}\n                transition-timing-function=\"ease-in\"\n                _focus={{ boxShadow: \"none\" }}\n                // overflowY={\"scroll\"}\n                // alignItems=\"center\"\n                justifyContent=\"space-between\"\n              >\n                {/* ---------------------------------------------MeProtocol LOGO------------------------------------------ */}\n                <Flex\n                  {...homeIcon}\n                  as=\"button\"\n                  onClick={() => {\n                    token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\n                  }}\n                >\n                  <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n                </Flex>\n                {/* <Spacer /> */}\n\n                {/* ------------------------------------------------------SEARCH BAR------------------------------------------ */}\n                <Flex {...search} w=\"600px\" _focus={{ boxShadow: \"none\" }} flexDir=\"column\">\n                  <InputGroup _focus={{ boxShadow: \"none\" }} as=\"button\">\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={<Icon as={FaSearch} color=\"#999999\" />}\n                    />\n                    <Input\n                      {...font}\n                      value={searchValue}\n                      onChange={({ target }: { target: { value: string } }) => {\n                        setSearchValue(target.value);\n                        // DoGlobalSearch(target.value);\n                        // if (target.value.length < 3) {\n                        //   setSearchResult([]);\n                        // }\n                      }}\n                      placeholder=\"Search offers, brand or style...\"\n                      borderRadius=\"0\"\n                      borderWidth=\"0\"\n                      onKeyDown={(event) => {\n                        if (event.key === \"Enter\") {\n                          event.preventDefault();\n                          onToggle();\n                          navigate(`${GLOBAL_PREFIX}/searchResult`, {\n                            state: searchValue,\n                          });\n                        }\n                      }}\n                    // _focus={{ boxShadow: \"none\" }}\n                    />\n                  </InputGroup>\n                </Flex>\n\n                {/* --------------- EXIST BUTTON ------------------ */}\n                <Center\n                  as=\"button\"\n                  w={\"50px\"}\n                  h={\"50px\"}\n                  onClick={() => {\n                    // setSearchOpen(false);\n                    setSearchValue(\"\");\n                    // setSearchResult([]);\n                    onToggle();\n                  }}\n                >\n                  <Image w={\"40px\"} h={\"40px\"} src={Images_Icons.cancel_icon} />\n                </Center>\n              </Flex>\n              <Flex\n                // bg=\"cyan\"\n                w=\"600px\"\n                pos={\"relative\"}\n                left={[\"300px\", \"300px\", \"300px\", \"300px\", \"340px\"]}\n              >\n                {/* -------------------------------- SEARCH BOX INFORMATION SECTION ----------------------- */}\n                {\n                  searchError && !searchResultLoading ? (\n                    <Text>\n                      Something unexpected happened. Try again later\n                    </Text>\n                  ) : (\n                    <></>\n                  )\n                }\n                {searchResult && searchResult.data.result.length > 0 ? (\n                  <Searchbox\n                    results={searchResult.data.result}\n                    isLoading={searchResultLoading}\n                    searchText={searchValue}\n                    clearClick={() => {\n                      setSearchValue(\"\");\n                      // setSearchResult([]);\n                    }}\n                    navigate={() => {\n                      // onToggle();\n                      // navigate(`${GLOBAL_PREFIX}/searchResult`, {\n                      //   state: searchValue,\n                      // });\n                    }}\n                  />\n                ) : (\n                  <Flex\n                    alignItems=\"center\"\n                  >{searchResultLoading ? <Spinner mt={\"8px\"} mb={\"8px\"} size={\"sm\"} /> : \"\"}</Flex>\n                )}\n              </Flex>\n            </Container>\n          </Box>\n        </ScaleFade>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default memo(NavBar);\n\nexport const useNavbarStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      zIndex: 10,\n    },\n    container: {\n      h: \"36px\",\n      px: \"1%\",\n      align: \"center\",\n      // px: [\"10%\", \"10%\", \"5%\", \"5%\", \"10%\", \"10%\"],\n      // bg: \"red\",\n      // _hover: {\n      //   background: \"black\",\n      //   color: \"white\",\n      // },\n    },\n\n    boxCircleColor: {\n      bgColor: \"#3478F6\",\n    },\n\n    search: {\n      w: \"250px\",\n      h: \"40px\",\n      background: \"light\",\n      borderRadius: \"53px\",\n      border: \"1px solid rgba(0, 0, 0, 0.05)\",\n      justify: \"flex-start\",\n      align: \"center\",\n      pl: \"1%\",\n    },\n\n    font: {\n      fontSize: [\"12px\"],\n      // lineHeight: \"19px\",\n    },\n\n    popfont: {\n      fontSize: \"12px\",\n      lineHeight: \"14px\",\n      color: \"#999999\",\n    },\n    shopperBox: {\n      h: \"95%\",\n      // w: \"24%\",\n      flexDir: \"row\",\n      justify: \"space-between\",\n      align: \"center\",\n    },\n    infoBox: {\n      h: \"95%\",\n      // w: \"45%\",\n      align: \"center\",\n      justify: \"space-between\",\n    },\n    shopperBusiness: {\n      px: \"14px\",\n      h: \"30px\",\n      // w: [\"50%\", \"50%\", \"50%\", \"50%\", \"50%\"],\n      borderRightRadius: \"50px\",\n    },\n    homeIcon: {\n      width: \"44px\",\n      height: \"44px\",\n      justify: \"center\",\n      align: \"center\",\n      mr: \"2%\",\n    },\n    notification: {\n      w: \"70px\",\n      h: \"35px\",\n      background: \"light\",\n      borderRadius: \"53px\",\n      border: \"1px solid rgba(0, 0, 0, 0.05)\",\n    },\n    helpText: {\n      h: \"25px\",\n      w: \"55px\",\n      rounded: \"70px\",\n      // borderWidth: \"0.5px\",\n      bg: \"dark\",\n      color: \"white\",\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\n    },\n    iconsLogo: {\n      // width: \"30px\",\n      // height: \"24px\",\n      justify: \"center\",\n      align: \"center\",\n    },\n    popoverTexts: {\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\n      alignSelf: \"flex-start\",\n    },\n    popoverLightTexts: {\n      fontSize: [\"12px\", \"12px\", \"12px\", \"12px\", \"12px\"],\n      color: \"#999999\",\n      alignSelf: \"flex-start\",\n    },\n    itemBox: {\n      w: \"100%\",\n      h: \"3vw\",\n      bg: \"white\",\n      justify: \"space-between\",\n      align: \"center\",\n      px: \"5%\",\n    },\n    searchRoot: {\n      w: \"100%\",\n      bg: \"light\",\n      // zIndex: 1000,\n      // boxShadow: \"1px 2px 9px #00000035\",\n    },\n  };\n};\n"],"names":["NavBar","_ref","customPadding","_ref2","_user_data$customer","_user_data$customer2","_user_data$customer3","_user_data$customer4","_user_data$customer5","_ref3","_trendingBrands$data","_trendingBrands$data$","_data$data","_notificationData$dat","_notificationData$dat2","rest","_objectWithoutProperties","_excluded","navigate","useNavigate","_useDisclosure","useDisclosure","isOpen","onToggle","dispatch","useDispatch","token","useSelector","state","authReducer","_useSelector2","userReducer","user_data","my_rewards","prev_notification_count","cartItems","current_notification_count","new_notification_count","cartReducer","notificationData","useGetAllNotificationsQuery","page","refetchOnMountOrArgChange","skip","data","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","searchValue","setSearchValue","_useState5","_useState6","showNavbar","setShowNavbar","_useGetCategoriesQuer","useGetCategoriesQuery","limit","type","CategoryType","_useGetShopsQuery","isLoading","useGetShopsQuery","trendingBrands","_useGlobalSearchQuery","useGlobalSearchQuery","search_value","length","searchResultResponse","searchResultLoading","searchError","error","searchResult","_useState7","_useState8","activeIndex","setActiveIndex","_useState9","_useState10","selectedLanguage","setSelectedLanguage","_useNavbarStyles","useNavbarStyles","root","container","font","search","popfont","shopperBox","infoBox","shopperBusiness","homeIcon","notification","helpText","iconsLogo","popoverTexts","popoverLightTexts","itemBox","searchRoot","boxCircleColor","useEffect","prevScrollPos","window","pageYOffset","handleScroll","currentScrollPos","addEventListener","removeEventListener","_jsxs","Flex","_objectSpread","pos","flexDir","top","left","right","transition","zIndex","children","_jsx","Box","w","bg","Container","h","align","map","e","i","Center","as","textTransform","color","onClick","fontSize","fontWeight","borderLeftRadius","Heading","noOfLines","nanoid","Spacer","Divider","orientation","mx","borderWidth","borderColor","Popover","isLazy","placement","trigger","PopoverTrigger","_hover","customer","name","Avatar","ml","concat","src","profilePicture","size","PopoverContent","borderRadius","position","width","background","border","GLOBAL_PREFIX","Text","firstName","lastName","email","Icon","FaChevronRight","Image","alignSelf","mr","Images_Icons","href","pl","textDecoration","logOut","cancelBounty","clearBounty","justify","Button","px","borderBottomWidth","display","HStack","objectFit","FaSearch","PopoverComponent","label","brands","_createElement","PopoverHeader","key","logo","textAlign","categories","_Fragment","bellIcon","total","Circle","justifyContent","alignItems","className","cartIcon","py","minHeight","ScaleFade","in","boxShadow","pt","_focus","InputGroup","InputLeftElement","pointerEvents","Input","value","onChange","_ref4","target","placeholder","onKeyDown","event","preventDefault","result","Searchbox","results","searchText","clearClick","Spinner","mt","mb","memo","bgColor","lineHeight","borderRightRadius","height","rounded"],"sourceRoot":""}