{"version":3,"file":"static/js/3814.6d41e9c4.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/visually-hidden/src/visually-hidden.style.ts","../node_modules/@zag-js/dom-query/src/platform.ts","../node_modules/@zag-js/dom-query/src/index.ts","../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/@chakra-ui/checkbox/src/use-checkbox.ts","../node_modules/utilities/object-utils/src/omit.ts"],"sourcesContent":["/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\nexport const visuallyHiddenStyle: React.CSSProperties = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\",\n}\n","export const isDom = () => typeof document !== \"undefined\"\n\nexport function getPlatform() {\n  const agent = (navigator as any).userAgentData\n  return agent?.platform ?? navigator.platform\n}\n\nconst pt = (v: RegExp) => isDom() && v.test(getPlatform())\nconst ua = (v: RegExp) => isDom() && v.test(navigator.userAgent)\nconst vn = (v: RegExp) => isDom() && v.test(navigator.vendor)\n\nexport const isTouchDevice = () => isDom() && !!navigator.maxTouchPoints\nexport const isMac = () => pt(/^Mac/) && !isTouchDevice()\nexport const isIPhone = () => pt(/^iPhone/)\nexport const isSafari = () => isApple() && vn(/apple/i)\nexport const isFirefox = () => ua(/firefox\\//i)\nexport const isApple = () => pt(/mac|iphone|ipad|ipod/i)\nexport const isIos = () => isApple() && !isMac()\n","export * from \"./attrs\"\nexport * from \"./contains\"\nexport * from \"./create-scope\"\nexport * from \"./env\"\nexport * from \"./get-active-element\"\nexport * from \"./get-by-id\"\nexport * from \"./get-by-text\"\nexport * from \"./get-by-typeahead\"\nexport * from \"./get-computed-style\"\nexport * from \"./get-event-target\"\nexport * from \"./get-scroll-parent\"\nexport * from \"./is-editable-element\"\nexport * from \"./is-html-element\"\nexport * from \"./platform\"\nexport * from \"./query\"\nexport * from \"./raf\"\n\nexport const MAX_Z_INDEX = 2147483647\n","import { isDom } from \"@zag-js/dom-query\"\n\ntype Modality = \"keyboard\" | \"pointer\" | \"virtual\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent | null) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\nlet hasBlurredWindowRecently = false\n\nconst handlers = new Set<Handler>()\n\nfunction trigger(modality: Modality, event: HandlerEvent | null) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(e: KeyboardEvent) {\n  return !(\n    e.metaKey ||\n    (!isMac && e.altKey) ||\n    e.ctrlKey ||\n    e.key === \"Control\" ||\n    e.key === \"Shift\" ||\n    e.key === \"Meta\"\n  )\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    const target = event.composedPath ? event.composedPath()[0] : event.target\n\n    let matches = false\n    try {\n      matches = (target as any).matches(\":focus-visible\")\n    } catch {}\n\n    if (matches) return\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) return true\n  return event.detail === 0 && !(event as PointerEvent).pointerType\n}\n\nfunction onClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true\n    modality = \"virtual\"\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\"\n    trigger(\"virtual\", event)\n  }\n\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = true\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (!isDom() || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n  document.addEventListener(\"click\", onClickEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function trackInteractionModality(fn: (value: Modality | null) => void) {\n  setupGlobalFocusEvents()\n\n  fn(modality)\n  const handler = () => fn(modality)\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function setInteractionModality(value: Modality) {\n  modality = value\n  trigger(value, null)\n}\n\nexport function getInteractionModality() {\n  return modality\n}\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n"],"names":["visuallyHiddenStyle","border","clip","height","width","margin","padding","overflow","whiteSpace","position","isDom","document","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","event","forEach","handler","isMac","window","navigator","test","platform","onKeyboardEvent","e","metaKey","altKey","ctrlKey","key","onPointerEvent","type","target","composedPath","matches","_unused","onClickEvent","mozInputSource","isTrusted","detail","pointerType","onWindowFocus","onWindowBlur","isFocusVisible","setupGlobalFocusEvents","focus","HTMLElement","prototype","_len","arguments","length","args","Array","_key","apply","this","addEventListener","PointerEvent","trackFocusVisible","fn","add","delete","useCheckbox","props","undefined","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isChecked","isFocusable","onChange","isIndeterminate","name","value","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","object","_step","keysToOmit","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","err","f","omit","_objectWithoutProperties","_excluded","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","_useState2","_slicedToArray","setIsFocusVisible","_useState3","_useState4","isFocused","setFocused","_useState5","_useState6","isHovered","setHovered","_useState7","_useState8","isActive","setActive","useEffect","inputRef","useRef","_useState9","_useState10","rootIsLabelElement","setRootIsLabelElement","_useState11","_useState12","checkedState","setCheckedState","isControlled","handleChange","useCallback","preventDefault","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","_a","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","_objectSpread","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getIndicatorProps","getRootProps","mergeRefs","node","tagName","onClick","click","requestAnimationFrame","_a2","preventScroll","getInputProps","required","disabled","readOnly","style","getLabelProps","stopEvent","state","stopPropagation"],"sourceRoot":""}