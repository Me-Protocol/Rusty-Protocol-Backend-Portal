{"version":3,"file":"static/js/5529.32fc352a.chunk.js","mappings":"8lBAgDMA,EAAwB,SAAHC,GAAmBA,EAAbC,cAA2C,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAxBC,GAAIC,EAAAA,EAAAA,GAAAX,EAAAY,GACjDC,GAAWC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MAETC,GAA4BC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,WAAW,IAA/EH,MAEAI,GAAgCH,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMG,WAAW,IAAnFD,UAEAE,GAA+BL,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMG,WAAW,IAAlFC,SAEAC,GAAgCN,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMM,WAAW,IAAnFD,UAERE,GAAoCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,GAAUF,EAAA,GAAEG,GAAaH,EAAA,GAChCI,IAAsCL,EAAAA,EAAAA,UAAiB,IAAGM,IAAAJ,EAAAA,EAAAA,GAAAG,GAAA,GAAnDE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAYpBG,IAAqBC,EAAAA,EAAAA,IACjC,CAAEC,KAAM,EAAGC,MAAO,GAClB,CAAEC,0BAA2B,MAFvBC,MAKRC,EAAAA,EAAAA,YAAU,WAIR,GACC,CAACzB,KAEJyB,EAAAA,EAAAA,YAAU,WACR,GACC,IACH,IAAAC,IAAsChB,EAAAA,EAAAA,UAAiB,GAAEiB,IAAAf,EAAAA,EAAAA,GAAAc,GAAA,GAAlDE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAgDpB,EAAAA,EAAAA,UAAiB,GAAEqB,IAAAnB,EAAAA,EAAAA,GAAAkB,GAAA,GAA5DE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAoCxB,EAAAA,EAAAA,WAAkB,GAAKyB,IAAAvB,EAAAA,EAAAA,GAAAsB,GAAA,GAApDE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,IAEhCV,EAAAA,EAAAA,YAAU,WACR,IAAIa,EAAgBC,OAAOC,YACrBC,EAAe,WACnB,IAAMC,EAAmBH,OAAOC,YAChCH,GAAcC,EAAgBI,GAAoBA,GAAoB,GACtEJ,EAAgBI,CAClB,EAEA,OADAH,OAAOI,iBAAiB,SAAUF,GAC3B,kBAAMF,OAAOK,oBAAoB,SAAUH,EAAc,CAClE,GAAG,IAEH,IAAAI,GAiBIC,IAhBFC,GAAIF,GAAJE,KACAC,GAASH,GAATG,UACAC,GAAIJ,GAAJI,KACAC,GAAML,GAANK,OACAC,GAAYN,GAAZM,aACAC,GAAUP,GAAVO,WACAC,GAAOR,GAAPQ,QACAC,GAAeT,GAAfS,gBACAC,GAAQV,GAARU,SACAC,GAAQX,GAARW,SACAC,GAASZ,GAATY,UACAC,GAAYb,GAAZa,aACAC,GAAiBd,GAAjBc,kBACAC,GAAOf,GAAPe,QACAC,GAAUhB,GAAVgB,WACAC,GAAcjB,GAAdiB,eAGF,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACClB,IAAI,IACRmB,IAAI,QACJC,QAAS,SACTC,IAAKhC,GAAa,EAAI,QACtBiC,KAAK,IACLC,MAAM,IACNC,WAAW,uBACXC,OAAO,SAAQC,SAAA,EAGfC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,EAAE,OAAOC,GAAG,UAASJ,UACxBC,EAAAA,EAAAA,KAACI,EAAAA,QAAS,CAAAL,UACRV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACa,GAAI,UAAWE,EAAG,MAAOC,MAAO,SAASP,SAAA,EAC7CC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKb,IAAU,IAAEe,QAAQ,MAAKM,SACE,QADFxF,EAChC,CAAC,eAAgB,yBAAiB,IAAAA,OAAA,EAAlCA,EAAoCgG,KAAI,SAACC,EAAGC,GAAS,OACpDT,EAAAA,EAAAA,KAACU,EAAAA,GAAMnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAELoB,GAAG,SACHC,cAAc,YACdT,GAAIjD,KAAgBuD,EAAI,OAAS,UACjCI,MAAO3D,KAAgBuD,EAAI,QAAU,OACrCK,QAAS,kBAAM3D,GAAesD,EAAE,EAChCM,SAAS,OACTC,WAAW,MACXxB,IAAK,WACLI,MAAa,IAANa,EAAU,OAAS,MAE1BX,OAAc,IAANW,EAAU,IAAM,GACxBQ,iBAAwB,IAANR,EAAU,OAAS,OACjC7B,IAAe,IAAAmB,UAEnBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAASI,UAAW,EAAEpB,SACvES,OAhBEY,EAAAA,EAAAA,MAkBE,QAGbpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,IAEN/F,GACC+D,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKZ,IAAO,IAAAoB,SAAA,EACfC,EAAAA,EAAAA,KAACU,EAAAA,GAAMnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKT,IAAQ,IAAE8B,cAAc,YAAWb,SAAC,WAGhDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CACNC,YAAY,WACZlB,EAAG,OACHmB,GAAI,MACJC,YAAY,MACZC,YAAY,WAEdrC,EAAAA,EAAAA,MAACsC,EAAAA,EAAO,CAACC,QAAM,EAACC,UAAU,eAAc9B,SAAA,EACtCC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAAA/B,UACbV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHqB,GAAG,SACHlB,QAAS,MACTa,MAAO,SACPO,MAAO,OACPD,cAAc,YACdI,WAAW,MACXD,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQhB,SAAA,CACpD,OACe,OAATrE,QAAS,IAATA,GAAmB,QAAVlB,EAATkB,EAAWqG,gBAAQ,IAAAvH,OAAV,EAATA,EAAqBwH,MAC1BhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLC,GAAI,MACJF,KAAI,GAAAG,OAAc,OAATzG,QAAS,IAATA,GAAmB,QAAVjB,EAATiB,EAAWqG,gBAAQ,IAAAtH,OAAV,EAATA,EAAqBuH,MAC9BI,IAAc,OAAT1G,QAAS,IAATA,GAAmB,QAAVhB,EAATgB,EAAWqG,gBAAQ,IAAArH,OAAV,EAATA,EAAqB2H,eAC1BC,KAAM,aAKZjD,EAAAA,EAAAA,MAACkD,EAAAA,EAAc,CACbC,aAAa,IAEbC,SAAS,WACTC,MAAM,OACNC,WAAW,UACXC,OAAO,MAAK7C,SAAA,EAGZV,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHoB,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,YACVjB,IAAO,IACX4B,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,aAAY,EAAC/C,SAAA,EAErDV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAS,SAASM,SAAA,EACtBV,EAAAA,EAAAA,MAAC0D,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAA,CACV,OAATrE,QAAS,IAATA,GAAmB,QAAVf,EAATe,EAAWqG,gBAAQ,IAAApH,OAAV,EAATA,EAAqBqI,UAAU,IAAW,OAATtH,QAAS,IAATA,GAAmB,QAAVd,EAATc,EAAWqG,gBAAQ,IAAAnH,OAAV,EAATA,EAAqBqI,cAEzDjD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKN,IAAiB,IAAAc,SAAY,OAATrE,QAAS,IAATA,OAAS,EAATA,EAAWwH,aAE3ClD,EAAAA,EAAAA,KAACmD,EAAAA,EAAI,CAACxC,GAAIyC,EAAAA,WAEZpD,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACpB,EAAG,UAGZb,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,kCAAiC,EAAC/C,SAAA,EAE1EV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,aAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,mBAE1BC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAEsE,UAAU,iBAIpCjE,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,qBAAoB,EAAC/C,SAAA,EAE7DV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,aAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,mBAE1BC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAEsE,UAAU,SAAQvD,UAC5B,OAAXtD,SAAW,IAAXA,IAAiB,QAAN5B,EAAX4B,GAAaK,YAAI,IAAAjC,OAAN,EAAXA,EAAmB4I,OAAOC,SAAU,UAGzCrE,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,8BAA6B,EAAC/C,SAAA,EAEtEV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAI,KACJnB,IAAKoB,EAAAA,EAAAA,aAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,eAE1BC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAEsE,UAAU,SAAQvD,UAC/B,OAARnE,QAAQ,IAARA,OAAQ,EAARA,EAAU8H,SAAU,UAGzB1D,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACpB,EAAG,UAEZb,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACX2D,OAAQ,CAAE1C,GAAI,WACdQ,GAAG,IACHgD,KAAM,iCAAiC5D,SAAA,EAEvCC,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLsB,GAAI,MACJvB,KAAK,WACLI,IAAI,+EACJE,KAAM,QAERjD,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAS,SAAUmE,GAAG,MAAM1D,EAAE,MAAKH,SAAA,EACvCC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,cACxBC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHoB,GAAG,IACHgD,KAAM,kCACF1E,IAAiB,IACrBkC,UAAW,EACX0C,eAAgB,YAChB3D,EAAE,MAAKH,SACR,wCAIHC,EAAAA,EAAAA,KAACmD,EAAAA,EAAI,CAACxC,GAAIyC,EAAAA,WAEZpD,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACpB,EAAG,UAEZF,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,kCAAiC,EAAC/C,UAE1EV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,aAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,sBAG5BC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,qBAAoB,EAAC/C,UAE7DV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,aAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,sBAG5BC,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACpB,EAAG,UAEZF,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKL,IAAO,IAAEmB,EAAG,MAAOM,GAAI,SAAUkC,OAAQ,CAAE1C,GAAI,WAAYJ,UACnEV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,kBAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,+BAG5BC,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACpB,EAAG,UAGZF,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCL,IAAO,IACXmB,EAAG,MACHM,GAAI,SACJkC,OAAQ,CAAE1C,GAAI,WACdW,QAAS,WACP1F,GAAS0I,EAAAA,EAAAA,OACT1I,GAAS2I,EAAAA,EAAAA,OACT3I,GAAS4I,EAAAA,EAAAA,MACX,EAAEjE,UAEFV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACY,EAAE,OAAMH,SAAA,EACZC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJnD,EAAG,MACHG,EAAG,MACHiD,UAAW,SACXC,GAAG,KACHnB,IAAKoB,EAAAA,EAAAA,cAEPxD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,IAAY,IAAAe,SAAE,6BAOlCC,EAAAA,EAAAA,KAACV,EAAAA,EAAI,CAACG,QAAS,MAAOS,EAAG,MAAO+D,QAAS,WAAWlE,SAC/B,QAD+BjF,EACjD,CAAC,KAAM,KAAM,aAAK,IAAAA,OAAA,EAAlBA,EAAoByF,KAAI,SAACC,EAAGC,GAAC,OAC5BT,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAELC,GAAIuD,EAAAA,EACJhE,EAAG,MACHG,EAAG,MACHQ,MAAOJ,IAAMnD,GAAmB,QAAU,QAC1CmE,YAAa,GACbe,aAAc,QACd2B,GAAI,KACJjC,GAAI,KACJW,OAAQ,CAAE1C,GAAIM,IAAMnD,GAAmB,QAAU,QACjD6C,GAAIM,IAAMnD,GAAmB,QAAU,QACvCwD,QAAS,WACPvD,GAAoBkD,EACtB,EAAEV,UAEFC,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQhB,SAAES,MAfzDY,EAAAA,EAAAA,MAgBE,cASrBpB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,EAAE,OAAOC,GAAG,QAAOJ,UACtBC,EAAAA,EAAAA,KAACI,EAAAA,QAAS,CAAAL,UACRC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHY,GAAI,QACJE,EAAG,OACHH,EAAG,OACHkE,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SACtCrJ,GAAI,IAAAgF,UAERV,EAAAA,EAAAA,MAACgF,EAAAA,EAAM,CAACnE,EAAG,OAAOH,SAAA,EAChBC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCV,IAAQ,IACZ8B,GAAG,SACHG,QAAS,WACC5F,EAAS,GAADiH,OAAIW,EAAAA,GAApBxH,EAAiC,aAAyC,KAC5E,EAAEyE,UAEFC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACjB,IAAKoB,EAAAA,EAAAA,QAAsBnD,EAAE,aAGtCL,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCjB,IAAS,IACbqC,GAAI,SACJG,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,cAAa,EAAC/C,UAEtDC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKhB,IAAI,IAAEqC,cAAc,YAAYI,WAAW,MAAKjB,SAAC,cAI7DC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCjB,IAAS,IACbqC,GAAI,SACJG,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,uBAAsB,EAAC/C,UAE/DC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAIxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKhB,IAAI,IAAEqC,cAAc,YAAYI,WAAW,MAAKjB,SAAC,iBAoC7DC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,IAEN/F,GACC+D,EAAAA,EAAAA,MAAAiF,EAAAA,SAAA,CAAAvE,SAAA,EAGEC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAChC,SAAS,OAAMhB,SAAC,SAEtBV,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHoB,GAAG,UACC5B,IACAN,IAAY,IAChBqC,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,QAAO,EAAC/C,SAAA,EAEhDC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACjB,IAAKmC,EAAAA,EAAUhB,GAAG,SACf,OAAT1H,QAAS,IAATA,OAAS,EAATA,EAAW6H,QAAS,IACnB1D,EAAAA,EAAAA,KAACwE,EAAAA,IAAMjF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACL+C,KAAK,QACDlD,IAAc,IAClBqF,eAAe,SACfC,WAAW,SACX7D,MAAM,QAAOd,SAEH,OAATlE,QAAS,IAATA,OAAS,EAATA,EAAW6H,kBAMpBrE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAS,SAAA,EACHC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,GAAIuD,EAAAA,EACJ/D,GAAI,QACJU,MAAO,QACPsD,GAAI,OACJQ,GAAI,MACJ9B,OAAQ,CAAE1C,GAAI,QACdqC,aAAc,QACd1B,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,aAAY,EAAC/C,UAErDC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAAhD,SAAC,yBAERC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KACPrB,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,GAAIuD,EAAAA,EACJ/D,GAAI,QACJU,MAAO,OACPY,YAAa,EACbC,YAAa,QACbQ,GAAI,OACJyC,GAAI,MACJ9B,OAAQ,CAAE1C,GAAI,SACdqC,aAAc,QACd1B,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,UAAS,EAAC/C,UAElDC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAAhD,SAAC,yBAUnB5D,KACCkD,EAAAA,EAAAA,MAACC,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCJ,IAAU,IAEdyF,GAAI,EACJpF,IAAK,WACLa,EAAG9D,GAAc,QAAU,QAC3BsI,OAAQ,CAAEC,UAAW,QAAS/E,SAAA,EAG9BC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCV,IAAQ,IACZ8B,GAAG,SACHG,QAAS,WACC5F,EAAS,GAADiH,OAAIW,EAAAA,GAApBxH,EAAiC,aAAyC,KAC5E,EAAEyE,UAEFC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACjB,IAAKoB,EAAAA,EAAAA,QAAsBuB,UAAW,cAE/C/E,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KAGPrB,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKf,IAAM,IAAEqG,OAAQ,CAAEC,UAAW,QAAS/E,UAC9CV,EAAAA,EAAAA,MAAC2F,EAAAA,EAAU,CAACH,OAAQ,CAAEC,UAAW,QAAUnE,GAAG,SAAQZ,SAAA,EACpDC,EAAAA,EAAAA,KAACiF,EAAAA,EAAgB,CACfC,cAAc,OACdnF,UAAUC,EAAAA,EAAAA,KAACmD,EAAAA,EAAI,CAACxC,GAAIwE,EAAAA,IAAUtE,MAAM,eAEtCb,EAAAA,EAAAA,KAACoF,EAAAA,GAAK7F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAhB,IAAI,IACR8G,MAAO9I,GACP+I,SAAU,SAAAC,GAAgD,IAA7CC,EAAMD,EAANC,OACXhJ,GAAegJ,EAAOH,MACxB,EACAI,YAAY,mCACZjD,aAAa,IACbf,YAAY,cAKlBzB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KAGPrB,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,GAAG,SAAST,EAAG,MAAOG,EAAG,MAAOS,QAAS,kBAAM1E,IAAc,EAAM,EAAC2D,UAC1EC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACnD,EAAG,MAAOG,EAAG,MAAO+B,IAAKoB,EAAAA,EAAAA,uBAM5C,EAEA,GAAekC,EAAAA,EAAAA,MAAKtL,GAEPgE,EAAkB,WAC7B,MAAO,CACLC,KAAM,CACJ6B,EAAG,OACHJ,OAAQ,IAEVxB,UAAW,CACT+B,EAAG,OACH8D,GAAI,KACJ7D,MAAO,UAGT9B,OAAQ,CACN0B,EAAG,MACHG,EAAG,OACHsC,WAAY,UACZH,aAAc,OACdyB,QAAS,aACT3D,MAAO,SACPsD,GAAI,MAENnF,aAAc,CACZyB,EAAG,OACHG,EAAG,OACHsC,WAAY,QACZH,aAAc,OACdI,OAAQ,iCAEVrE,KAAM,CACJwC,SAAU,CAAC,SAIb4E,QAAS,CACP5E,SAAU,OACV6E,WAAY,OACZ/E,MAAO,WAETnC,WAAY,CACV2B,EAAG,MAEHZ,QAAS,MACTwE,QAAS,gBACT3D,MAAO,UAET3B,QAAS,CACP0B,EAAG,MAEHC,MAAO,SACP2D,QAAS,iBAEXrF,gBAAiB,CACfuF,GAAI,OACJ9D,EAAG,OAEHwF,kBAAmB,QAErBhH,SAAU,CACR6D,MAAO,OACPoD,OAAQ,OACR7B,QAAS,SACT3D,MAAO,SACPiD,GAAI,MAENzE,SAAU,CACRuB,EAAG,OACHH,EAAG,OACH6F,QAAS,OAET5F,GAAI,OACJU,MAAO,QACPE,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE7ChC,UAAW,CAGTkF,QAAS,SACT3D,MAAO,UAETlB,eAAgB,CACd4G,QAAS,WAEXhH,aAAc,CACZ+B,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CuC,UAAW,cAEbrE,kBAAmB,CACjB8B,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CF,MAAO,UACPyC,UAAW,cAEbpE,QAAS,CACPgB,EAAG,OACHG,EAAG,MACHF,GAAI,QACJ8D,QAAS,gBACT3D,MAAO,SACP6D,GAAI,MAENhF,WAAY,CACVe,EAAG,OACHC,GAAI,QACJL,OAAQ,IACRgF,UAAW,yBAGjB,E,8yVCrrBMmB,EAAQ,CACZH,OAAQ,KAwIV,EArIsB,WAAO,IAADI,EAAAC,EACtBjL,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACX+K,GAAQC,EAAAA,EAAAA,KAEdC,EAA4CC,IAApClI,EAAIiI,EAAJjI,KAAMmI,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAEnB5K,GAAmBN,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMM,WAAW,IAAtED,UAOR,OALAkB,EAAAA,EAAAA,YAAU,WAER,GACC,CAAClB,KAGFwD,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAS,SAASM,SAAA,EAEtBC,EAAAA,EAAAA,KAAC5F,EAAY,CACXsM,kBAAmB,MACnB5G,QAAS,OAKD,OAATjE,QAAS,IAATA,OAAS,EAATA,EAAW6H,QAAS,GACnB1D,EAAAA,EAAAA,KAACI,EAAAA,QAAS,CAAAL,UACRC,EAAAA,EAAAA,KAAC2G,EAAAA,GAAKpH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKlB,GAAI,IAAA0B,UACbV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAS,SAAA,EAEHC,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKiH,GAAW,IAAE/G,QAAS,SAASM,UACvCC,EAAAA,EAAAA,KAACV,EAAAA,EAAI,CAACG,QAAQ,SAAQM,UACpBC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJjB,KAAiB,QAAZ8D,EAAArK,EAAU,UAAE,IAAAqK,OAAA,EAAZA,EAAcU,YAAY,GAAGC,OAAmB,QAAhBV,EAAItK,EAAU,UAAE,IAAAsK,OAAA,EAAZA,EAAcW,QACvD/B,UAAU,UACV7E,EAAG,OACHG,EAAG,OACHF,GAAG,oBAKTH,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAAC0F,EAAG,QAEX/G,EAAAA,EAAAA,KAACV,EAAAA,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKkH,GAAY,IAAEhH,QAAQ,SAAQM,SAC5B,OAATlE,QAAS,IAATA,OAAS,EAATA,EAAW0E,KAAI,SAACC,GAAM,IAAAwG,EAAA,OACrB3H,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAQ,SAAQM,SAAA,EACpBV,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAS,MAAOgF,eAAgB,gBAAgB1E,SAAA,EACpDC,EAAAA,EAAAA,KAACV,EAAAA,EAAI,CAAAS,UACHC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJjB,IAAM,OAAD5B,QAAC,IAADA,OAAC,EAADA,EAAGoG,YAAY,GAAGC,IACvB3G,EAAG,QACHG,EAAG,QACH0E,UAAU,UACV5E,GAAI,iBAIRd,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAS,SAAUa,MAAM,aAAasD,GAAG,MAAK7D,SAAA,EAClDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACH,SAAU,OAAQkG,GAAI,OAAOlH,SAClC,OAADS,QAAC,IAADA,OAAC,EAADA,EAAGwB,QAENhC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KACPrB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAChC,SAAU,OAAQF,MAAM,UAASd,SAAC,WAGxCV,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAChC,SAAU,OAAQF,MAAM,UAASd,SAAA,CAAC,SAC/B,UAETV,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAChC,SAAU,OAAQF,MAAM,UAASd,SAAA,CAAC,aAC1B,OAADS,QAAC,IAADA,OAAC,EAADA,EAAG0G,gBAGlBlH,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KAEPhC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAQ,SAASa,MAAO,WAAWP,SAAA,EACvCV,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAChC,SAAU,OAAQkG,GAAI,MAAMlH,SAAA,CAC9B,OAADS,QAAC,IAADA,OAAC,EAADA,EAAG2G,OAAO,IAAG,OAAD3G,QAAC,IAADA,GAAS,QAARwG,EAADxG,EAAG4G,cAAM,IAAAJ,OAAR,EAADA,EAAWK,iBAE1BhI,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAChC,SAAU,OAAQuG,UAAW,CAAC,SAAUzG,MAAM,UAAUoG,GAAI,OAAOlH,SAAA,CACrE,OAADS,QAAC,IAADA,OAAC,EAADA,EAAG+G,cAAc,WAGpBvH,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CACHhC,SAAU,OACVuG,UAAW,CAAC,SACZzG,MAAM,UACNF,GAAI,SACJG,QAAS,WACP1F,GAASoM,EAAAA,EAAAA,IAAgB,OAADhH,QAAC,IAADA,OAAC,EAADA,EAAGiH,MAC3BC,EAAAA,EAAAA,GAAgBtB,EAAO,oBAAqB,IAC9C,EAAErG,SACH,kBAOLC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,GAAG,SACHiC,OAAQ,oBACRvC,EAAE,OACFQ,MAAM,QACN8G,GAAI,OACJV,GAAI,OACJpE,OAAQ,CACNF,WAAY,UACZ9B,MAAO,WAETC,QAAS,kBAAM5F,EAAS,GAADiH,OAAIW,EAAAA,GAAa,WAAW,CAAEtH,OAAK+D,EAAAA,EAAAA,GAAA,GAAOiB,IAAM,EAACT,SACzE,cAIDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACC,YAAY,aAAa0F,GAAI,YArEZ7F,EAAAA,EAAAA,MAsErB,gBAOjB/B,EAAAA,EAAAA,MAACsH,EAAAA,GAAKpH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKlB,GAAI,IAAEiC,MAAM,SAAQP,SAAA,EAC7BC,EAAAA,EAAAA,KAAC4H,IAAM,CAACC,cAAeC,EAAoB7B,MAAOA,KAClDjG,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAC6B,GAAG,KAAK7D,SAAS,OAAOC,WAAW,MAAKjB,SAAC,6CAOzD,EAIawG,EAAkB,WAC7B,MAAO,CACLlI,KAAM,CACJ6B,EAAG,OAIHyH,GAAI,QAEJI,SAAU,UAEZC,WAAY,CACVjH,SAAU,CAAC,OAAQ,SAErB7B,QAAS,CACPgB,EAAG,OACHG,EAAG,MACHF,GAAI,QACJyC,OAAQ,MACRqB,QAAS,gBACT3D,MAAO,SACP6D,GAAI,MAEN/E,eAAgB,CACd4G,QAAS,WAEXrH,QAAS,CACPuB,EAAG,MACHG,EAAG,OACH8D,GAAI,KACJ8D,aAAc,MACdC,kBAAmB,YAErBC,QAAS,CACPjI,EAAG,OACHG,EAAG,OACHmC,aAAc,OACduF,SAAU,SACVtG,YAAa,MACbC,YAAa,aAEf8E,YAAa,CACXnG,EAAG,OACHH,EAAG,OAELuG,aAAc,CAEZvG,EAAG,MACHyE,GAAI,MAENyD,SAAU,CACRlI,EAAG,OACHI,MAAO,UAET+H,aAAc,CACZtH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE7CuH,cAAe,CACbvH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CF,MAAO,WAET0H,aAAc,CACZxH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE7CyH,UAAW,CACTzH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CF,MAAO,WAET4H,OAAQ,CACNhH,YAAa,EACbC,YAAa,UACbyC,GAAI,KACJQ,GAAI,OACJnC,aAAc,SAEhBkG,QAAS,CACPxI,EAAG,OACHG,EAAG,OACHsH,GAAI,SAENgB,KAAM,CACJ5H,SAAU,CACR6H,KAAM,OACNC,GAAI,SAIRC,YAAa,CACX/H,SAAU,CACR6H,KAAM,OACNC,GAAI,SAIRvK,UAAW,CACT4B,EAAG,QACH2C,OAAQ,CACNF,WAAY,QACZ9B,MAAO,UAIXrC,OAAQ,CACN0B,EAAG,QACHG,EAAG,OACHsC,WAAY,UACZH,aAAc,QAGhBjE,KAAM,CACJwC,SAAU,OACV6E,WAAY,OACZ/C,OAAQ,CACNhC,MAAO,YAIX8E,QAAS,CACP5E,SAAU,OACV6E,WAAY,OACZ/E,MAAO,WAETkI,UAAW,CACT7I,EAAG,MACHG,EAAG,QACHmC,aAAc,MACdf,YAAa,MACbC,YAAa,YACbqG,SAAU,SACVd,GAAI,OAEN+B,gBAAiB,CACfxG,aAAc,IACdE,MAAO,OACPC,WAAY,UACZC,OAAQ,OAEVqG,cAAe,CACblI,SAAU,QAGhB,C","sources":["components/AddbagNavbar/index.tsx","pages/Addbag/Addbag.tsx"],"sourcesContent":["import {\r\n  Avatar,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Input,\r\n  InputGroup,\r\n  Image,\r\n  InputLeftElement,\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n  Spacer,\r\n  Text,\r\n  Heading,\r\n  Button,\r\n  PopoverHeader,\r\n  Box,\r\n  Circle,\r\n} from \"@chakra-ui/react\";\r\nimport { FC, memo, useEffect, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { FaChevronRight, FaSearch } from \"react-icons/fa\";\r\nimport Images_Icons from \"../../constants/icons-images\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthReducerProps, CartReducerProps, UserReducerProps } from \"../../interfaces\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { logOut } from \"../../redux/AuthSlice\";\r\nimport PopoverComponent from \"../PopoverComponent\";\r\nimport {\r\n  useGetAllUserSyncedRewardsQuery,\r\n  useGetCategoriesQuery,\r\n  useGetOffersBasedOnMyPointsQuery,\r\n} from \"../../redux/rtkQuery/api\";\r\nimport cartIcon from \"../../assets/icons/CartIcon.svg\";\r\nimport Container from \"../Container\";\r\nimport { cancelBounty, clearBounty } from \"../../redux/BountySlice\";\r\nimport { GLOBAL_PREFIX } from \"../../constants\";\r\n\r\ninterface AddBagNavbarProps {\r\n  customPadding?: string | number;\r\n  rest?: any;\r\n}\r\n\r\nconst AddBagNavbar: FC<any> = ({ customPadding, ...rest }): JSX.Element => {\r\n  let navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\r\n\r\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const { my_deals }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const { cartItems }: CartReducerProps = useSelector((state: RootState) => state.cartReducer);\r\n\r\n  const [searchOpen, setSearchOpen] = useState<boolean>(false);\r\n  const [searchValue, setSearchValue] = useState<string>(\"\");\r\n  // const { data, isError, isFetching, isLoading, isSuccess } =\r\n  //   useGetCategoriesQuery();\r\n  // const {\r\n  //   data: syncedRewards,\r\n  //   error,\r\n  //   refetch: refetchSyncRewards,\r\n  // } = useGetAllUserSyncedRewardsQuery(undefined, {\r\n  //   refetchOnFocus: true,\r\n  //   skip: !token,\r\n  // });\r\n\r\n  const { data: myOfferData }: any = useGetOffersBasedOnMyPointsQuery(\r\n    { page: 1, limit: 7 },\r\n    { refetchOnMountOrArgChange: 300 }\r\n  );\r\n\r\n  useEffect(() => {\r\n    // if (token) {\r\n    //   if (token) dispatch(getUserInfo({ token }));\r\n    //   dispatch(getUserCollection({ token }));\r\n    // }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    // console.log(data.data, \"kdkdkdj\");\r\n  }, []);\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n  const [selectedLanguage, setSelectedLanguage] = useState<number>(0);\r\n  const [showNavbar, setShowNavbar] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    let prevScrollPos = window.pageYOffset;\r\n    const handleScroll = () => {\r\n      const currentScrollPos = window.pageYOffset;\r\n      setShowNavbar(prevScrollPos > currentScrollPos || currentScrollPos <= 0);\r\n      prevScrollPos = currentScrollPos;\r\n    };\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const {\r\n    root,\r\n    container,\r\n    font,\r\n    search,\r\n    notification,\r\n    shopperBox,\r\n    infoBox,\r\n    shopperBusiness,\r\n    homeIcon,\r\n    helpText,\r\n    iconsLogo,\r\n    popoverTexts,\r\n    popoverLightTexts,\r\n    itemBox,\r\n    searchRoot,\r\n    boxCircleColor,\r\n  } = useNavbarStyles();\r\n\r\n  return (\r\n    <Flex\r\n      {...root}\r\n      pos=\"fixed\"\r\n      flexDir={\"column\"}\r\n      top={showNavbar ? 0 : \"-100%\"}\r\n      left=\"0\"\r\n      right=\"0\"\r\n      transition=\"top 0.3s ease-in-out\"\r\n      zIndex=\"docked\"\r\n    >\r\n      {/* ----------------------------------------------------------------TOP SECTION ----------------------------------------------------------------*/}\r\n      <Box w=\"100%\" bg=\"#E3E3E3\">\r\n        <Container>\r\n          <Flex bg={\"#E3E3E3\"} h={\"3vw\"} align={\"center\"}>\r\n            <Flex {...shopperBox} flexDir=\"row\">\r\n              {[\"For Shoppers\", \"For Businesses\"]?.map((e, i: number) => (\r\n                <Center\r\n                  key={nanoid()}\r\n                  as=\"button\"\r\n                  textTransform=\"uppercase\"\r\n                  bg={activeIndex === i ? \"dark\" : \"#C3C3C3\"}\r\n                  color={activeIndex === i ? \"light\" : \"dark\"}\r\n                  onClick={() => setActiveIndex(i)}\r\n                  fontSize=\"14px\"\r\n                  fontWeight=\"400\"\r\n                  pos={\"relative\"}\r\n                  right={i === 1 ? \"10px\" : \"0px\"}\r\n                  // pl={i === 1 ? \"30px\" : \"0px\"}\r\n                  zIndex={i === 0 ? 100 : 10}\r\n                  borderLeftRadius={i === 0 ? \"50px\" : \"0px\"}\r\n                  {...shopperBusiness}\r\n                >\r\n                  <Heading fontSize={[\"12px\", \"12px\", \"12px\", \"12px\", \"12px\"]} noOfLines={1}>\r\n                    {e}\r\n                  </Heading>\r\n                </Center>\r\n              ))}\r\n            </Flex>\r\n            <Spacer />\r\n            {/* ----------------------------------------------------------------IS LOGGED IN STATE--------------------------------------------------------*/}\r\n            {token ? (\r\n              <Flex {...infoBox}>\r\n                <Center {...helpText} textTransform=\"uppercase\">\r\n                  Help\r\n                </Center>\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  h={\"12px\"}\r\n                  mx={\"5px\"}\r\n                  borderWidth=\"2px\"\r\n                  borderColor=\"black\"\r\n                />\r\n                <Popover isLazy placement=\"bottom-start\">\r\n                  <PopoverTrigger>\r\n                    <Flex\r\n                      as=\"button\"\r\n                      flexDir={\"row\"}\r\n                      align={\"center\"}\r\n                      color={\"dark\"}\r\n                      textTransform=\"uppercase\"\r\n                      fontWeight=\"700\"\r\n                      fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}\r\n                    >\r\n                      Hi, {user_data?.customer?.name}\r\n                      <Avatar\r\n                        ml={\"5px\"}\r\n                        name={`${user_data?.customer?.name}`}\r\n                        src={user_data?.customer?.profilePicture}\r\n                        size={\"sm\"}\r\n                      />\r\n                    </Flex>\r\n                  </PopoverTrigger>\r\n                  {/* ----------------------------------USER POPOVER CONTENT------------------------------ */}\r\n                  <PopoverContent\r\n                    borderRadius=\"0\"\r\n                    // boxSizing=\"border-box\"\r\n                    position=\"relative\"\r\n                    width=\"15vw\"\r\n                    background=\"#FFFFFF\"\r\n                    border=\"1px\"\r\n                  >\r\n                    {/*--------------------------------- NAME SECTION ------------------------------------ */}\r\n                    <Flex\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      {...itemBox}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/settings`)}\r\n                    >\r\n                      <Flex flexDir={\"column\"}>\r\n                        <Text {...popoverTexts}>\r\n                          {user_data?.customer?.firstName} {user_data?.customer?.lastName}\r\n                        </Text>\r\n                        <Text {...popoverLightTexts}>{user_data?.email}</Text>\r\n                      </Flex>\r\n                      <Icon as={FaChevronRight} />\r\n                    </Flex>\r\n                    <Divider w={\"100%\"} />\r\n                    {/*--------------------------------- EDITS SECTION ------------------------------------ */}\r\n\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.edit_Icon}\r\n                        />\r\n                        <Text {...popoverTexts}>My assets</Text>\r\n                      </Flex>\r\n                      <Text {...popoverTexts} alignSelf=\"center\">\r\n                        {/* {syncedRewards?.userPoints?.length || 0} */}\r\n                      </Text>\r\n                    </Flex>\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/offers`)}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.edit_Icon}\r\n                        />\r\n                        <Text {...popoverTexts}>My Offers</Text>\r\n                      </Flex>\r\n                      <Text {...popoverTexts} alignSelf=\"center\">\r\n                        {myOfferData?.data?.offers.length || 0}\r\n                      </Text>\r\n                    </Flex>\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-saved`)}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr={\"5%\"}\r\n                          src={Images_Icons.edit_Icon}\r\n                        />\r\n                        <Text {...popoverTexts}>Saved</Text>\r\n                      </Flex>\r\n                      <Text {...popoverTexts} alignSelf=\"center\">\r\n                        {my_deals?.length || 0}\r\n                      </Text>\r\n                    </Flex>\r\n                    <Divider w={\"100%\"} />\r\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\r\n                    <Flex\r\n                      {...itemBox}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      as=\"a\"\r\n                      href={\"https://www.supremenewyork.com\"}\r\n                    >\r\n                      <Avatar\r\n                        mr={\"5px\"}\r\n                        name=\"John Doe\"\r\n                        src=\"https://pbs.twimg.com/profile_images/846716933894537216/7VCYCh5V_400x400.jpg\"\r\n                        size={\"sm\"}\r\n                      />\r\n                      <Flex flexDir={\"column\"} pl=\"5px\" w=\"75%\">\r\n                        <Text {...popoverTexts}>Supreme</Text>\r\n                        <Text\r\n                          as=\"a\"\r\n                          href={\"https://www.supremenewyork.com\"}\r\n                          {...popoverLightTexts}\r\n                          noOfLines={1}\r\n                          textDecoration={\"underline\"}\r\n                          w=\"95%\"\r\n                        >\r\n                          https://www.supremenewyork.com\r\n                        </Text>\r\n                      </Flex>\r\n                      <Icon as={FaChevronRight} />\r\n                    </Flex>\r\n                    <Divider w={\"100%\"} />\r\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.edit_Icon}\r\n                        />\r\n                        <Text {...popoverTexts}>My assets</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/offers`)}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.edit_Icon}\r\n                        />\r\n                        <Text {...popoverTexts}>My Offers</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                    <Divider w={\"100%\"} />\r\n                    {/*--------------------------------- INSTALL APP SECTION ------------------------------------ */}\r\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.mobileapp_icon}\r\n                        />\r\n                        <Text {...popoverTexts}>Install mobile app</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                    <Divider w={\"100%\"} />\r\n                    {/*--------------------------------- LOGOUT SECTION ------------------------------------ */}\r\n\r\n                    <Flex\r\n                      {...itemBox}\r\n                      h={\"3vw\"}\r\n                      as={\"button\"}\r\n                      _hover={{ bg: \"#F6F6F6\" }}\r\n                      onClick={() => {\r\n                        dispatch(logOut());\r\n                        dispatch(cancelBounty());\r\n                        dispatch(clearBounty());\r\n                      }}\r\n                    >\r\n                      <Flex w=\"100%\">\r\n                        <Image\r\n                          w={\"1vw\"}\r\n                          h={\"1vw\"}\r\n                          alignSelf={\"center\"}\r\n                          mr=\"5%\"\r\n                          src={Images_Icons.logoutIcon}\r\n                        />\r\n                        <Text {...popoverTexts}>Logout</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </PopoverContent>\r\n                </Popover>\r\n              </Flex>\r\n            ) : (\r\n              <Flex flexDir={\"row\"} w={\"20%\"} justify={\"flex-end\"}>\r\n                {[\"EN\", \"FR\", \"IT\"]?.map((e, i) => (\r\n                  <Center\r\n                    key={nanoid()}\r\n                    as={Button}\r\n                    w={\"10%\"}\r\n                    h={\"90%\"}\r\n                    color={i === selectedLanguage ? \"black\" : \"white\"}\r\n                    borderWidth={0.5}\r\n                    borderRadius={\"100px\"}\r\n                    px={\"7%\"}\r\n                    ml={\"3%\"}\r\n                    _hover={{ bg: i === selectedLanguage ? \"white\" : \"dark\" }}\r\n                    bg={i === selectedLanguage ? \"white\" : \"black\"}\r\n                    onClick={() => {\r\n                      setSelectedLanguage(i);\r\n                    }}\r\n                  >\r\n                    <Heading fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}>{e}</Heading>\r\n                  </Center>\r\n                ))}\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* ----------------------------------------------------------------------LOWER SECTION --------------------------------------------*/}\r\n      <Box w=\"100%\" bg=\"light\">\r\n        <Container>\r\n          <Flex\r\n            bg={\"light\"}\r\n            h={\"55px\"}\r\n            w={\"100%\"}\r\n            display={[\"none\", \"none\", \"flex\", \"flex\", \"flex\"]}\r\n            {...rest}\r\n          >\r\n            <HStack w={\"100%\"}>\r\n              <Flex\r\n                {...homeIcon}\r\n                as=\"button\"\r\n                onClick={() => {\r\n                  token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\r\n                }}\r\n              >\r\n                <Image src={Images_Icons.appLogo} h=\"45px\" />\r\n              </Flex>\r\n              {/* ----------------------------------------MENU BAR SECTION --------------------------------------------*/}\r\n              <Flex\r\n                {...container}\r\n                as={\"button\"}\r\n                onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard`)}\r\n              >\r\n                <Text {...font} textTransform=\"uppercase\" fontWeight=\"700\">\r\n                  Home\r\n                </Text>\r\n              </Flex>\r\n              <Flex\r\n                {...container}\r\n                as={\"button\"}\r\n                onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/category`)}\r\n              >\r\n                <Text {...font} textTransform=\"uppercase\" fontWeight=\"700\">\r\n                  Explore\r\n                </Text>\r\n              </Flex>\r\n              {/* {syncedRewards?.userPoints?.length > 0 && (\r\n                <PopoverComponent label=\"My Assets\">\r\n                  {syncedRewards?.userPoints?.slice(0, 7)?.map(\r\n                    (\r\n                      e: {\r\n                        rewardName: string;\r\n                        reward: { rewardImage: string; rewardName: string };\r\n                      },\r\n                      i: number\r\n                    ) => (\r\n                      <PopoverHeader\r\n                        as=\"button\"\r\n                        {...font}\r\n                        key={nanoid()}\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `${GLOBAL_PREFIX}/dashboard/dashboard-my-assets/${e?.rewardName}`,\r\n                            {\r\n                              state: { ...e },\r\n                            }\r\n                          )\r\n                        }\r\n                      >\r\n                        <Flex>\r\n                          <Avatar size=\"xs\" src={e?.reward?.rewardImage} mr=\"5px\" />\r\n                          <Text textAlign={\"left\"}>{e?.reward?.rewardName}</Text>\r\n                        </Flex>\r\n                      </PopoverHeader>\r\n                    )\r\n                  )}\r\n                </PopoverComponent>\r\n              )} */}\r\n              <Spacer />\r\n              {/* ----------------------------------------BELL AND CART ICON --------------------------------------------*/}\r\n              {token ? (\r\n                <>\r\n                  {/* --------------------------------- ADD BAG ICON ------------------------------------------- */}\r\n\r\n                  <Text fontSize=\"16px\">Bag</Text>\r\n                  {/* -------------------------------- FAVORITES TAG -------------------------- */}\r\n                  <Flex\r\n                    as=\"button\"\r\n                    {...iconsLogo}\r\n                    {...notification}\r\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/bag`)}\r\n                  >\r\n                    <Image src={cartIcon} mr=\"1.5\" />\r\n                    {cartItems?.length > 0 && (\r\n                      <Circle\r\n                        size=\"25px\"\r\n                        {...boxCircleColor}\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        color=\"light\"\r\n                      >\r\n                        {cartItems?.length}\r\n                      </Circle>\r\n                    )}\r\n                  </Flex>\r\n                </>\r\n              ) : (\r\n                <Flex>\r\n                  <Center\r\n                    as={Button}\r\n                    bg={\"black\"}\r\n                    color={\"white\"}\r\n                    px={\"15px\"}\r\n                    py={\"3px\"}\r\n                    _hover={{ bg: \"dark\" }}\r\n                    borderRadius={\"100px\"}\r\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/register`)}\r\n                  >\r\n                    <Text>Create an account</Text>\r\n                  </Center>\r\n                  <Spacer />\r\n                  <Center\r\n                    as={Button}\r\n                    bg={\"white\"}\r\n                    color={\"dark\"}\r\n                    borderWidth={1}\r\n                    borderColor={\"black\"}\r\n                    ml={\"15px\"}\r\n                    py={\"3px\"}\r\n                    _hover={{ bg: \"white\" }}\r\n                    borderRadius={\"100px\"}\r\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/login`)}\r\n                  >\r\n                    <Text>Login</Text>\r\n                  </Center>\r\n                </Flex>\r\n              )}\r\n            </HStack>\r\n          </Flex>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* ----------------------------------------------------------------------SEARCH SECTION --------------------------------------------*/}\r\n      {searchOpen && (\r\n        <Flex\r\n          {...searchRoot}\r\n          // px={customPadding || [5, 5, 10, 20, 40]}\r\n          pt={5}\r\n          pos={\"absolute\"}\r\n          h={searchValue ? \"500px\" : \"100px\"}\r\n          _focus={{ boxShadow: \"none\" }}\r\n        >\r\n          {/* ---------------ICON------------------ */}\r\n          <Flex\r\n            {...homeIcon}\r\n            as=\"button\"\r\n            onClick={() => {\r\n              token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\r\n            }}\r\n          >\r\n            <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\r\n          </Flex>\r\n          <Spacer />\r\n\r\n          {/* ---------------SEARCH BAR------------------ */}\r\n          <Flex {...search} _focus={{ boxShadow: \"none\" }}>\r\n            <InputGroup _focus={{ boxShadow: \"none\" }} as=\"button\">\r\n              <InputLeftElement\r\n                pointerEvents=\"none\"\r\n                children={<Icon as={FaSearch} color=\"#999999\" />}\r\n              />\r\n              <Input\r\n                {...font}\r\n                value={searchValue}\r\n                onChange={({ target }: { target: { value: string } }) => {\r\n                  setSearchValue(target.value);\r\n                }}\r\n                placeholder=\"Search offers, brand or style...\"\r\n                borderRadius=\"0\"\r\n                borderWidth=\"0\"\r\n                // _focus={{ boxShadow: \"none\" }}\r\n              />\r\n            </InputGroup>\r\n          </Flex>\r\n          <Spacer />\r\n\r\n          {/* ---------------SEARCH BAR------------------ */}\r\n          <Center as=\"button\" w={\"3vw\"} h={\"3vw\"} onClick={() => setSearchOpen(false)}>\r\n            <Image w={\"2vw\"} h={\"2vw\"} src={Images_Icons.cancel_icon} />\r\n          </Center>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default memo(AddBagNavbar);\r\n\r\nexport const useNavbarStyles = () => {\r\n  return {\r\n    root: {\r\n      w: \"100%\",\r\n      zIndex: 10,\r\n    },\r\n    container: {\r\n      h: \"36px\",\r\n      px: \"1%\",\r\n      align: \"center\",\r\n    },\r\n\r\n    search: {\r\n      w: \"25%\",\r\n      h: \"40px\",\r\n      background: \"#F6F6F6\",\r\n      borderRadius: \"53px\",\r\n      justify: \"flex-start\",\r\n      align: \"center\",\r\n      pl: \"1%\",\r\n    },\r\n    notification: {\r\n      w: \"70px\",\r\n      h: \"40px\",\r\n      background: \"light\",\r\n      borderRadius: \"53px\",\r\n      border: \"1px solid rgba(0, 0, 0, 0.05)\",\r\n    },\r\n    font: {\r\n      fontSize: [\"12px\"],\r\n      // lineHeight: \"19px\",\r\n    },\r\n\r\n    popfont: {\r\n      fontSize: \"12px\",\r\n      lineHeight: \"14px\",\r\n      color: \"#999999\",\r\n    },\r\n    shopperBox: {\r\n      h: \"95%\",\r\n      // w: \"24%\",\r\n      flexDir: \"row\",\r\n      justify: \"space-between\",\r\n      align: \"center\",\r\n    },\r\n    infoBox: {\r\n      h: \"95%\",\r\n      // w: \"45%\",\r\n      align: \"center\",\r\n      justify: \"space-between\",\r\n    },\r\n    shopperBusiness: {\r\n      px: \"14px\",\r\n      h: \"30px\",\r\n      // w: [\"50%\", \"50%\", \"50%\", \"50%\", \"50%\"],\r\n      borderRightRadius: \"50px\",\r\n    },\r\n    homeIcon: {\r\n      width: \"60px\",\r\n      height: \"60px\",\r\n      justify: \"center\",\r\n      align: \"center\",\r\n      mr: \"1%\",\r\n    },\r\n    helpText: {\r\n      h: \"25px\",\r\n      w: \"55px\",\r\n      rounded: \"70px\",\r\n      // borderWidth: \"0.5px\",\r\n      bg: \"dark\",\r\n      color: \"white\",\r\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\r\n    },\r\n    iconsLogo: {\r\n      // width: \"30px\",\r\n      // height: \"30px\",\r\n      justify: \"center\",\r\n      align: \"center\",\r\n    },\r\n    boxCircleColor: {\r\n      bgColor: \"#3478F6\",\r\n    },\r\n    popoverTexts: {\r\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\r\n      alignSelf: \"flex-start\",\r\n    },\r\n    popoverLightTexts: {\r\n      fontSize: [\"12px\", \"12px\", \"12px\", \"12px\", \"12px\"],\r\n      color: \"#999999\",\r\n      alignSelf: \"flex-start\",\r\n    },\r\n    itemBox: {\r\n      w: \"100%\",\r\n      h: \"3vw\",\r\n      bg: \"white\",\r\n      justify: \"space-between\",\r\n      align: \"center\",\r\n      px: \"5%\",\r\n    },\r\n    searchRoot: {\r\n      w: \"100%\",\r\n      bg: \"light\",\r\n      zIndex: 1000,\r\n      boxShadow: \"1px 2px 9px #00000035\",\r\n    },\r\n  };\r\n};\r\n","// @flow\r\nimport {\r\n  Flex,\r\n  Text,\r\n  Spacer,\r\n  Image,\r\n  Stack,\r\n  Center,\r\n  Divider,\r\n  Heading,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { lazy, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { calculateTotal, removeFromCart } from \"../../redux/CartSlice\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { Dispatch } from \"redux\";\r\nimport MeProtocolToast from \"../../hooks/MeProtocolToast\";\r\nimport AddBagNavbar from \"../../components/AddbagNavbar\";\r\nimport Container from \"../../components/Container\";\r\nimport Lottie from \"lottie-react\";\r\nimport emptyCartAnimation from \"../../assets/json/108106-empty-cart.json\";\r\nimport { GLOBAL_PREFIX } from \"../../constants\";\r\n\r\nconst style = {\r\n  height: 300,\r\n};\r\n\r\nexport const Addbag = () => {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch<Dispatch>();\r\n  const toast = useToast();\r\n\r\n  const { root, leftSection, rightSection } = useAddbagStyles();\r\n\r\n  const { cartItems }: any = useSelector((state: RootState) => state.cartReducer);\r\n\r\n  useEffect(() => {\r\n    // console.log(cartItems, \"OOPPPP\");\r\n    // dispatch(calculateTotal());\r\n  }, [cartItems]);\r\n\r\n  return (\r\n    <Flex flexDir={\"column\"}>\r\n      {/* ----------------------------------------------------------------------NAV BAR------------------------------------------------------------ */}\r\n      <AddBagNavbar\r\n        borderBottomWidth={\"1px\"}\r\n        zIndex={-1000}\r\n        // customPadding={\"5%\"}\r\n      />\r\n      {/* ----------------------------------------------------------------------TOP CARDS------------------------------------------------------------ */}\r\n\r\n      {cartItems?.length > 0 ? (\r\n        <Container>\r\n          <Stack {...root}>\r\n            <Flex>\r\n              {/* -----------------------------------LEFT SECTION [IMAGE SECTION]---------------------------------------------- */}\r\n              <Flex {...leftSection} flexDir={\"column\"}>\r\n                <Flex flexDir=\"column\">\r\n                  <Image\r\n                    src={cartItems[0]?.offerImages[0].url || cartItems[1]?.images}\r\n                    objectFit=\"contain\"\r\n                    w={\"100%\"}\r\n                    h={\"100%\"}\r\n                    bg=\"#00000020\"\r\n                  />\r\n                </Flex>\r\n              </Flex>\r\n\r\n              <Spacer m={\"1%\"} />\r\n              {/* -----------------------------------RIGHT SECTION---------------------------------------------- */}\r\n              <Flex {...rightSection} flexDir=\"column\">\r\n                {cartItems?.map((e: any) => (\r\n                  <Flex flexDir=\"column\" key={nanoid()}>\r\n                    <Flex flexDir={\"row\"} justifyContent={\"space-between\"}>\r\n                      <Flex>\r\n                        <Image\r\n                          src={e?.offerImages[0].url}\r\n                          w={\"100px\"}\r\n                          h={\"100px\"}\r\n                          objectFit=\"contain\"\r\n                          bg={\"#00000020\"}\r\n                        />\r\n                      </Flex>\r\n\r\n                      <Flex flexDir={\"column\"} align=\"flex-start\" pl=\"5px\">\r\n                        <Heading fontSize={\"13px\"} mb={\"10px\"}>\r\n                          {e?.name}\r\n                        </Heading>\r\n                        <Spacer />\r\n                        <Text fontSize={\"14px\"} color=\"#999999\">\r\n                          Black\r\n                        </Text>\r\n                        <Text fontSize={\"14px\"} color=\"#999999\">\r\n                          Size: {\" S \"}\r\n                        </Text>\r\n                        <Text fontSize={\"14px\"} color=\"#999999\">\r\n                          Quantity: {e?.quantity}\r\n                        </Text>\r\n                      </Flex>\r\n                      <Spacer />\r\n\r\n                      <Flex flexDir=\"column\" align={\"flex-end\"}>\r\n                        <Text fontSize={\"13px\"} mb={\"6px\"}>\r\n                          {e?.tokens} {e?.reward?.rewardSymbol}\r\n                        </Text>\r\n                        <Text fontSize={\"14px\"} textAlign={[\"right\"]} color=\"#999999\" mb={\"30px\"}>\r\n                          {e?.originalPrice} USD\r\n                        </Text>\r\n                        {/* ------------------------------- REMOVE IS HERE ----------------------------------- */}\r\n                        <Text\r\n                          fontSize={\"14px\"}\r\n                          textAlign={[\"right\"]}\r\n                          color=\"#C90303\"\r\n                          as={\"button\"}\r\n                          onClick={() => {\r\n                            dispatch(removeFromCart(e?.id));\r\n                            MeProtocolToast(toast, \"Removed from cart\", 2000);\r\n                          }}\r\n                        >\r\n                          Remove\r\n                        </Text>\r\n                      </Flex>\r\n                    </Flex>\r\n\r\n                    {/* ------------------------------------ CHECK OUT BUTTON --------------------------------- */}\r\n                    <Center\r\n                      as=\"button\"\r\n                      border={\"1px solid #000000\"}\r\n                      h=\"50px\"\r\n                      color=\"black\"\r\n                      mt={\"12px\"}\r\n                      mb={\"40px\"}\r\n                      _hover={{\r\n                        background: \"#000000\",\r\n                        color: \"#FFFFFF\",\r\n                      }}\r\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/redeem`, { state: { ...e } })}\r\n                    >\r\n                      Checkout\r\n                    </Center>\r\n\r\n                    <Divider orientation=\"horizontal\" mb={\"30px\"} />\r\n                  </Flex>\r\n                ))}\r\n              </Flex>\r\n            </Flex>\r\n          </Stack>\r\n        </Container>\r\n      ) : (\r\n        <Stack {...root} align=\"center\">\r\n          <Lottie animationData={emptyCartAnimation} style={style} />\r\n          <Text pt=\"3%\" fontSize=\"18px\" fontWeight=\"600\">\r\n            You currently have no item in cart\r\n          </Text>\r\n        </Stack>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Addbag;\r\n\r\nexport const useAddbagStyles = () => {\r\n  return {\r\n    root: {\r\n      w: \"100%\",\r\n      // px: \"10%\",\r\n      //   px: [5, 5, 10, 20, 40],\r\n      //   h: \"100vh\",\r\n      mt: \"108px\",\r\n      //   pt: \"3%\",\r\n      overflow: \"hidden\",\r\n    },\r\n    nameStyles: {\r\n      fontSize: [\"20px\", \"20px\"],\r\n    },\r\n    itemBox: {\r\n      w: \"100%\",\r\n      h: \"3vw\",\r\n      bg: \"white\",\r\n      border: \"1px\",\r\n      justify: \"space-between\",\r\n      align: \"center\",\r\n      px: \"5%\",\r\n    },\r\n    boxCircleColor: {\r\n      bgColor: \"#3478F6\",\r\n    },\r\n    infoBox: {\r\n      w: \"60%\",\r\n      h: \"10vw\",\r\n      px: \"2%\",\r\n      borderBottom: \"1px\",\r\n      borderBottomColor: \"gray.300\",\r\n    },\r\n    rootBox: {\r\n      w: \"100%\",\r\n      h: \"100%\",\r\n      borderRadius: \"15px\",\r\n      overflow: \"hidden\",\r\n      borderWidth: \"1px\",\r\n      borderColor: \"#00000007\",\r\n    },\r\n    leftSection: {\r\n      h: \"100%\",\r\n      w: \"55%\",\r\n    },\r\n    rightSection: {\r\n      //   h: \"100%\",\r\n      w: \"45%\",\r\n      py: \"3%\",\r\n    },\r\n    lowerSec: {\r\n      w: \"100%\",\r\n      align: \"center\",\r\n    },\r\n    headingStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"18px\"],\r\n    },\r\n    headingStyle2: {\r\n      fontSize: [\"14px\", \"12px\", \"14px\", \"16px\", \"18px\"],\r\n      color: \"#999999\",\r\n    },\r\n    subHeadStyle: {\r\n      fontSize: [\"14px\", \"12px\", \"12px\", \"12px\", \"14px\"],\r\n    },\r\n    bodyStyle: {\r\n      fontSize: [\"14px\", \"14px\", \"16px\", \"16px\", \"18px\"],\r\n      color: \"#000000\",\r\n    },\r\n    button: {\r\n      borderWidth: 1,\r\n      borderColor: \"#000000\",\r\n      px: \"2%\",\r\n      py: \"0.5%\",\r\n      borderRadius: \"100px\",\r\n    },\r\n    contain: {\r\n      w: \"100%\",\r\n      h: \"64px\",\r\n      mt: \"297px\",\r\n    },\r\n    head: {\r\n      fontSize: {\r\n        base: \"18px\",\r\n        md: \"20px\",\r\n      },\r\n    },\r\n\r\n    smallerDesc: {\r\n      fontSize: {\r\n        base: \"10px\",\r\n        md: \"16px\",\r\n      },\r\n    },\r\n\r\n    container: {\r\n      w: \"100px\",\r\n      _hover: {\r\n        background: \"black\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n\r\n    search: {\r\n      w: \"240px\",\r\n      h: \"40px\",\r\n      background: \"#F6F6F6\",\r\n      borderRadius: \"53px\",\r\n    },\r\n\r\n    font: {\r\n      fontSize: \"16px\",\r\n      lineHeight: \"19px\",\r\n      _hover: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n\r\n    popfont: {\r\n      fontSize: \"12px\",\r\n      lineHeight: \"14px\",\r\n      color: \"#999999\",\r\n    },\r\n    singleCol: {\r\n      w: \"44%\",\r\n      h: \"150px\",\r\n      borderRadius: \"3px\",\r\n      borderWidth: \"1px\",\r\n      borderColor: \"#9999992B\",\r\n      overflow: \"hidden\",\r\n      mb: \"2vw\",\r\n    },\r\n    popContentStyle: {\r\n      borderRadius: \"0\",\r\n      width: \"100%\",\r\n      background: \"#FFFFFF\",\r\n      border: \"0px\",\r\n    },\r\n    colOptionText: {\r\n      fontSize: \"12px\",\r\n    },\r\n  };\r\n};\r\n"],"names":["AddBagNavbar","_ref","customPadding","_ref2","_user_data$customer","_user_data$customer2","_user_data$customer3","_user_data$customer4","_user_data$customer5","_myOfferData$data","_ref3","rest","_objectWithoutProperties","_excluded","navigate","useNavigate","dispatch","useDispatch","token","useSelector","state","authReducer","user_data","userReducer","my_deals","cartItems","cartReducer","_useState","useState","_useState2","_slicedToArray","searchOpen","setSearchOpen","_useState3","_useState4","searchValue","setSearchValue","myOfferData","useGetOffersBasedOnMyPointsQuery","page","limit","refetchOnMountOrArgChange","data","useEffect","_useState5","_useState6","activeIndex","setActiveIndex","_useState7","_useState8","selectedLanguage","setSelectedLanguage","_useState9","_useState10","showNavbar","setShowNavbar","prevScrollPos","window","pageYOffset","handleScroll","currentScrollPos","addEventListener","removeEventListener","_useNavbarStyles","useNavbarStyles","root","container","font","search","notification","shopperBox","infoBox","shopperBusiness","homeIcon","helpText","iconsLogo","popoverTexts","popoverLightTexts","itemBox","searchRoot","boxCircleColor","_jsxs","Flex","_objectSpread","pos","flexDir","top","left","right","transition","zIndex","children","_jsx","Box","w","bg","Container","h","align","map","e","i","Center","as","textTransform","color","onClick","fontSize","fontWeight","borderLeftRadius","Heading","noOfLines","nanoid","Spacer","Divider","orientation","mx","borderWidth","borderColor","Popover","isLazy","placement","PopoverTrigger","customer","name","Avatar","ml","concat","src","profilePicture","size","PopoverContent","borderRadius","position","width","background","border","_hover","GLOBAL_PREFIX","Text","firstName","lastName","email","Icon","FaChevronRight","Image","alignSelf","mr","Images_Icons","offers","length","href","pl","textDecoration","logOut","cancelBounty","clearBounty","justify","Button","px","display","HStack","_Fragment","cartIcon","Circle","justifyContent","alignItems","py","pt","_focus","boxShadow","objectFit","InputGroup","InputLeftElement","pointerEvents","FaSearch","Input","value","onChange","_ref4","target","placeholder","memo","popfont","lineHeight","borderRightRadius","height","rounded","bgColor","style","_cartItems$","_cartItems$2","toast","useToast","_useAddbagStyles","useAddbagStyles","leftSection","rightSection","borderBottomWidth","Stack","offerImages","url","images","m","_e$reward","mb","quantity","tokens","reward","rewardSymbol","textAlign","originalPrice","removeFromCart","id","MeProtocolToast","mt","Lottie","animationData","emptyCartAnimation","overflow","nameStyles","borderBottom","borderBottomColor","rootBox","lowerSec","headingStyle","headingStyle2","subHeadStyle","bodyStyle","button","contain","head","base","md","smallerDesc","singleCol","popContentStyle","colOptionText"],"sourceRoot":""}