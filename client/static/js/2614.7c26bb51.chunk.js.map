{"version":3,"file":"static/js/2614.7c26bb51.chunk.js","mappings":"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","sources":["components/LoadingOverlay/index.tsx","pages/DashboardModule/DashboardSaved/DashboardSaved.tsx"],"sourcesContent":["import { Flex, Image, keyframes, Text } from \"@chakra-ui/react\";\nimport { memo } from \"react\";\nimport Images_Icons from \"../../constants/icons-images\";\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst LoadingOverlay = ({ ...rest }: any): JSX.Element => {\n  return (\n    <Flex\n      pos=\"absolute\"\n      bg=\"white\"\n      h=\"100vh\"\n      w=\"100vw\"\n      align={\"center\"}\n      justify=\"center\"\n      flexDirection={\"column\"}\n      alignSelf=\"center\"\n    >\n      <Flex\n        w=\"15vw\"\n        h={\"15vw\"}\n        borderRadius=\"10vw\"\n        align={\"center\"}\n        justify=\"center\"\n        borderWidth={1}\n        borderColor=\"dark\"\n        animation={`${pulse} 2s infinite`}\n      >\n        <Image\n          src={Images_Icons.appLogo}\n          objectFit={\"cover\"}\n          w=\"10vw\"\n          h={\"10vw\"}\n        />\n      </Flex>\n      <Text fontSize={\"3vh\"} mt=\"3vh\">\n        Loading...\n      </Text>\n    </Flex>\n  );\n};\n\nexport default memo(LoadingOverlay);\n","import {\n  Avatar,\n  Button,\n  Flex,\n  HStack,\n  Icon,\n  Text,\n  Tab,\n  TabList,\n  Tabs,\n  Spacer,\n  Image,\n  Stack,\n  Center,\n  Modal,\n  ModalContent,\n  ModalOverlay,\n  useDisclosure,\n  Input,\n  TabPanel,\n  TabPanels,\n  Box,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Spinner,\n  VStack,\n  Skeleton,\n} from \"@chakra-ui/react\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport { AiOutlineEllipsis } from \"react-icons/ai\";\nimport { nanoid } from \"nanoid\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useRef, useState, lazy, Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthReducerProps, UserReducerProps } from \"../../../interfaces\";\nimport { RootState } from \"../../../redux/store\";\nimport {\n  useCreateCollectionMutation,\n  useDeleteCollectionMutation,\n} from \"../../../redux/rtkQuery/api\";\nimport {\n  getBrandsUserFollowing,\n  getUserCollection,\n  getUserDeals,\n  getUserInfo,\n} from \"../../../redux/UserSlice\";\nimport { Dispatch } from \"redux\";\nimport Images_Icons from \"../../../constants/icons-images\";\nimport Container from \"../../../components/Container\";\nimport Lottie from \"lottie-react\";\nimport empty from \"../../../assets/json/empty.json\";\nimport LoadingOverlay from \"../../../components/LoadingOverlay\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\nimport { GET_COLLECTIONS } from \"../../../redux/CollectionSlice\";\nimport { GET_ORDER } from \"../../../redux/OrderSlice\";\n\n// const DashboardNavBar = lazy(\n//   () => import(\"../../../components/DashboardNavBar\")\n// );\n\nconst NewDashboardNavBar = lazy(() => import(\"../../../components/NewDashboardNavBar\"));\n\nconst MyDeals = lazy(() => import(\"../../../components/MyDeals\"));\n\nconst MyBrands = lazy(() => import(\"../../../components/Mybrands\"));\n\nconst DashboardSaved = (): JSX.Element => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch<Dispatch>();\n  const popRef = useRef<any>();\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n  const { order_data, getOrder_loading } = useSelector((state: RootState) => state.orderReducer);\n  const { user_collection, my_deals, my_deals_loading, my_followed_brands }: UserReducerProps =\n    useSelector((state: RootState) => state.userReducer);\n  const { collection_data, collection_loading } = useSelector(\n    (state: RootState) => state.collectionReducer\n  );\n\n  useEffect(() => {\n    if (token) {\n      dispatch(GET_COLLECTIONS({ token }));\n    }\n  }, [token]);\n  // console.log(collection_data, \"this is payload\");\n\n  useEffect(() => {\n    if (token) {\n      dispatch(GET_ORDER({ token }));\n      // dispatch(getBrandsUserFollowing({ token }));\n    }\n\n    // console.log(my_followed_brands);\n  }, []);\n\n  // console.log(order_data, \"jjjsj\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    root,\n    infoBox,\n    font1,\n    font2,\n    editProfileText,\n    contain,\n    smallerDesc,\n    singleCol,\n    popContentStyle,\n    colOptionText,\n    cancelButton,\n    nextButton,\n    newCollectionInput,\n    editProfileButton,\n    iconCenter,\n    editIconStack,\n    imageDisplay,\n    fontUnderline,\n    nameStack,\n  } = useStyles();\n  const [createCollection] = useCreateCollectionMutation();\n  const [deleteCollection] = useDeleteCollectionMutation();\n\n  const [createCollectionLoading, setCreateCollectionLoading] = useState<boolean>(false);\n  const [createCollectionError, setCreateCollectionError] = useState<string>(\"\");\n  const [collectionName, setCollectionName] = useState<string>(\"\");\n  const [loadingAction, setLoadingAction] = useState<boolean>(false);\n  const [dealsFetching, setDealsFetching] = useState<boolean>(false);\n  const [myDeals, setMyDeals] = useState<Array<any>>([]);\n  const [activeId, setActiveId] = useState<any>(null);\n  const [monthName, setMonthName] = useState<string>(\"\");\n\n  useEffect(() => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const today = new Date();\n    const currentMonthName = monthNames[today.getMonth()];\n    setMonthName(currentMonthName);\n  }, []);\n\n  const tabs = [\n    { id: \"1\", name: \"My deals\" },\n    { id: \"2\", name: \"My saved\" },\n    { id: \"3\", name: \"My brands\" },\n  ];\n\n  // -----------------------------------------ADD COLLECTION FN------------------------------------------\n  async function AddCollection(): Promise<void> {\n    if (!collectionName) return;\n    setCreateCollectionLoading(true);\n    await createCollection({ name: collectionName })\n      .then(({ data }: any) => {\n        // console.log(data, \"lllllll\");\n        if (data.status === 200) {\n          dispatch(getUserCollection({ token }));\n          onClose();\n        }\n      })\n      .catch((e: any | unknown) => {\n        setCreateCollectionError(e);\n      })\n      .finally(() => {\n        setCreateCollectionLoading(false);\n        setCollectionName(\"\");\n      });\n  }\n\n  async function DeleteCollection(id: string): Promise<void> {\n    setLoadingAction(true);\n    setActiveId(id);\n    await deleteCollection(id)\n      .then(({ data }: any) => {\n        // console.log(data, \"lllllll\");\n        if (data.status === 200) {\n          dispatch(getUserCollection({ token }));\n          onClose();\n        }\n      })\n      .catch((e: any | unknown) => {\n        setCreateCollectionError(e);\n      })\n      .finally(() => {\n        setLoadingAction(false);\n        setActiveId(null);\n      });\n  }\n\n  function MySaved() {\n    return (\n      <>\n        {/* -------------------------------------------------------COLLECTIONS SECTION----------------------------------------------- */}\n        <Flex\n          // bg={\"green\"}\n          w={\"100%\"}\n          justify={\"space-between\"}\n          flexDir={\"row\"}\n          flexWrap=\"wrap\"\n        >\n          {/* <Flex {...singleCol} onClick={AddCollection}>\n              <Flex h=\"100%\" w=\"40%\" flexDir={\"row\"} flexWrap={\"wrap\"}>\n                {products4.slice(0, 4)?.map((e) => (\n                  <Image\n                    key={nanoid()}\n                    h=\"50%\"\n                    w={\"50%\"}\n                    bg={\"blue\"}\n                    src={e.images}\n                  />\n                ))}\n              </Flex>\n              <Stack justify={\"center\"} ml=\"5%\" w={\"60%\"}>\n                <Text fontSize={\"18px\"}>All saved items</Text>\n                <Text color={\"#999999\"}>20 items</Text>\n              </Stack>\n            </Flex> */}\n\n          {collection_data?.collections?.map(\n            // ({ id, name, likes }: { id: number; name: string; likes: any }, i: number) => (\n            (e, i: number) => (\n              <Flex\n                key={nanoid()}\n                {...singleCol}\n                // onClick={() => navigate(`${name}`, { state: { id } })}\n              >\n                <Flex {...imageDisplay} flexDir={\"row\"} wrap={\"wrap\"}>\n                  {e?.likes.map(({ offer }: { offer: any }) => (\n                    <Image\n                      key={nanoid()}\n                      h=\"50%\"\n                      w={\"50%\"}\n                      src={offer?.images[0]}\n                      fallbackSrc={Images_Icons.appLogoPlaceholder}\n                    />\n                  ))}\n                </Flex>\n                <Stack justify={\"center\"} {...nameStack}>\n                  <Text noOfLines={1} fontSize={\"18px\"}>\n                    {e?.name}\n                  </Text>\n                  <Text color={\"#999999\"}>\n                    {e.likes?.length} {e.likes?.length > 0 ? \"items\" : \"item\"}\n                  </Text>\n                </Stack>\n                <Flex w=\"10%\" h=\"15%\" alignSelf={\"center\"}>\n                  <Popover isLazy placement=\"bottom\" initialFocusRef={popRef}>\n                    {({ isOpen, onClose }) => (\n                      <>\n                        <PopoverTrigger>\n                          <Box as=\"button\">\n                            {loadingAction && e.id.toString() === activeId ? (\n                              <Spinner size={\"sm\"} />\n                            ) : (\n                              <Icon w={\"100%\"} h={\"100%\"} as={AiOutlineEllipsis} />\n                            )}\n                          </Box>\n                        </PopoverTrigger>\n                        {/* <Box as=\"button\" textAlign={\"left\"}>\n                          <PopoverContent ref={popRef} onClick={onClose} {...popContentStyle}>\n                            <Stack {...editIconStack}>\n                              {[\"Edit collection\", \"Delete\"]?.map((e: any, i: number) => (\n                                <Flex\n                                  as={\"button\"}\n                                  flexDir={\"row\"}\n                                  align=\"center\"\n                                  key={nanoid()}\n                                  onClick={() => {\n                                    i === 0\n                                      ? navigate(`${name}`, { state: { id } })\n                                      : DeleteCollection(id.toString());\n                                  }}\n                                >\n                                  <Image w={\"8%\"} h={\"8%\"} src={Images_Icons.edit_Icon} mr=\"5%\" />\n                                  <Text {...colOptionText}>{e}</Text>\n                                </Flex>\n                              ))}\n                            </Stack>\n                          </PopoverContent>\n                        </Box> */}\n                      </>\n                    )}\n                  </Popover>\n                </Flex>\n              </Flex>\n            )\n          )}\n\n          {/* )} */}\n          {/* -------------------------------------------------------ADD COLLECTIONS SECTION----------------------------------------------- */}\n          <Flex {...singleCol} onClick={onOpen}>\n            <Center {...iconCenter} flexDir={\"row\"} flexWrap={\"wrap\"}>\n              <Icon w={\"3vw\"} h={\"3vw\"} as={IoIosAdd} />\n            </Center>\n            <HStack ml={\"5%\"}>\n              <Text>New collection</Text>\n            </HStack>\n          </Flex>\n        </Flex>\n      </>\n    );\n  }\n\n  // console.log(user_data);\n\n  return (\n    <Box w=\"100%\" h=\"100vh\" flexDir={\"column\"}>\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        {/* <DashboardNavBar /> */}\n        <NewDashboardNavBar />\n      </Suspense>\n      <Flex flexDir={\"column\"}>\n        <Container>\n          <Stack {...root}>\n            {/* -------------------------------------------------------TOP SECTION----------------------------------------------- */}\n            <HStack {...infoBox} bg=\"#F2F2F2\">\n              <Avatar\n                size=\"xl\"\n                mr=\"2%\"\n                name={`${user_data?.customer?.name}`}\n                src={user_data?.customer?.profilePicture}\n              />\n              <Stack>\n                <Text {...font1} textTransform={\"uppercase\"}>\n                  {user_data?.customer?.name}\n                </Text>\n                <Text {...font2}>\n                  Member since {monthName} {new Date().getUTCFullYear()}\n                </Text>\n              </Stack>\n              <Spacer />\n              <Button\n                variant=\"outline\"\n                {...editProfileButton}\n                onClick={() => navigate(`${GLOBAL_PREFIX}/settings`)}\n              >\n                <Text {...editProfileText}>Edit Profile</Text>\n              </Button>\n            </HStack>\n\n            {/* -------------------------------------------------------TABS SECTION----------------------------------------------- */}\n            {/* <HStack {...contain}> */}\n            <Tabs isLazy>\n              <Flex flexDir={\"row\"} w={\"100%\"}>\n                <TabList>\n                  {tabs?.map((e) => (\n                    <Tab\n                      key={nanoid()}\n                      {...smallerDesc}\n                      _selected={{ color: \"black\", borderColor: \"black\" }}\n                      // w={\"80%\"}\n                      color=\"#999999\"\n                    >\n                      <Text fontWeight=\"700\">{e.name}</Text>\n                    </Tab>\n                  ))}\n                </TabList>\n                <Spacer />\n                <HStack onClick={onOpen} cursor=\"pointer\">\n                  <Text fontWeight=\"600\">New collection</Text>\n                  <Icon w={\"30px\"} h={\"30px\"} as={IoIosAdd} />\n                </HStack>\n              </Flex>\n\n              <TabPanels>\n                <TabPanel px={0}>\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    {order_data?.orders?.length > 0 ? (\n                      <>\n                        {order_data?.orders?.map((e) => (\n                          <Skeleton isLoaded={!getOrder_loading} mb={\"2px\"} key={nanoid()}>\n                            <MyDeals\n                              name={e.offer.name}\n                              price={Number(e.offer?.originalPrice)}\n                              token={`${e?.offer?.tokens} ${e?.offer?.reward?.rewardSymbol}`}\n                              quantity={e?.quantity}\n                              date={e.offer.updatedAt}\n                              expired={false}\n                              image={e?.offer?.offerImages[0]?.url}\n                              rest={{ ...e }}\n                            />\n                          </Skeleton>\n                        ))}\n                      </>\n                    ) : (\n                      <VStack>\n                        <Flex w=\"500px\" h=\"500px\">\n                          <Lottie animationData={empty} loop autoplay width={50} height={70} />\n                        </Flex>\n\n                        <Text>\n                          You currently have no deals,{\" \"}\n                          <Text\n                            as=\"button\"\n                            onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/category`)}\n                            {...fontUnderline}\n                          >\n                            Explore your favorite deals to purchase\n                          </Text>\n                        </Text>\n                      </VStack>\n                    )}\n                  </Suspense>\n                </TabPanel>\n                <TabPanel px={0}>{MySaved()}</TabPanel>\n                <TabPanel px={0}>\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    {my_followed_brands?.length > 0 ? (\n                      <>\n                        {my_followed_brands?.map((e: any) => (\n                          <Skeleton isLoaded={!my_deals_loading} mb={\"2px\"}>\n                            <MyBrands key={nanoid()} item={{ ...e }} />\n                          </Skeleton>\n                        ))}\n                      </>\n                    ) : (\n                      <VStack>\n                        <Flex w=\"400px\" h=\"400px\">\n                          <Lottie animationData={empty} loop autoplay width={50} height={70} />\n                        </Flex>\n\n                        <Text>\n                          You currently have followed brands,{\" \"}\n                          <Text\n                            as=\"button\"\n                            onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/shop`)}\n                          >\n                            Explore your favorite brands\n                          </Text>\n                        </Text>\n                      </VStack>\n                    )}\n                  </Suspense>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n            {/* </HStack> */}\n          </Stack>\n        </Container>\n      </Flex>\n      {/* ----------------------------------------ADD COLLECTION MODAL-------------------------------------- */}\n      <Modal\n        isCentered\n        blockScrollOnMount={true}\n        scrollBehavior={\"inside\"}\n        isOpen={isOpen}\n        size={\"xl\"}\n        onClose={onClose}\n        motionPreset=\"slideInBottom\"\n        closeOnOverlayClick={false}\n      >\n        <ModalOverlay />\n        <ModalContent w={{ base: \"90vw\", md: \"30vw\" }} h={\"15vw\"} borderRadius={0} p={\"1%\"}>\n          <Text>Create new collection</Text>\n          <Input\n            variant=\"outline\"\n            {...newCollectionInput}\n            placeholder=\"Collection name\"\n            value={collectionName}\n            onChange={({ target }: { target: { value: string } }) => {\n              setCollectionName(target.value);\n            }}\n          />\n          <Button\n            isLoading={createCollectionLoading}\n            // as={Button}\n            {...nextButton}\n            onClick={AddCollection}\n            disabled={!collectionName}\n          >\n            <Text>Next</Text>\n          </Button>\n          <Center {...cancelButton} onClick={onClose} as=\"button\">\n            <Text>Cancel</Text>\n          </Center>\n        </ModalContent>\n      </Modal>\n      {loadingAction && <LoadingOverlay />}\n    </Box>\n  );\n};\n\nexport default DashboardSaved;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      // px: \"10%\",\n      // px: [5, 5, 10, 20, 40],\n      //   h: \"458px\",\n      mt: \"108px\",\n      pt: \"3%\",\n      overflow: \"hidden\",\n      // bg: \"green\",\n    },\n    infoBox: {\n      w: \"100%\",\n      h: \"150px\",\n      px: \"2%\",\n      borderRadius: \"16px\",\n    },\n    root2: {\n      w: \"1440px\",\n      h: \"248px\",\n      mt: \"1px\",\n    },\n    font1: {\n      fontSize: \"24px\",\n      color: \"#000000\",\n    },\n\n    font2: {\n      fontSize: \"16px\",\n      color: \"#999999\",\n    },\n\n    editProfileText: {\n      fontSize: \"14px\",\n    },\n\n    button: {\n      w: \"150px\",\n      h: \"47px\",\n      borderRadius: \"0px\",\n      background: \"#000000\",\n      fontSize: \"18px\",\n      lineHeight: \"22px\",\n      color: \"#FFFFFF\",\n    },\n\n    contain: {\n      w: \"100%\",\n      h: \"64px\",\n      mt: \"297px\",\n    },\n\n    head: {\n      fontSize: {\n        base: \"18px\",\n        md: \"20px\",\n      },\n    },\n\n    smallerDesc: {\n      fontSize: {\n        base: \"10px\",\n        md: \"16px\",\n      },\n    },\n\n    container: {\n      w: \"100px\",\n      // h: \"36px\",\n      _hover: {\n        background: \"black\",\n        color: \"white\",\n      },\n    },\n\n    search: {\n      w: \"240px\",\n      h: \"40px\",\n      background: \"#F6F6F6\",\n      borderRadius: \"53px\",\n    },\n\n    font: {\n      fontSize: \"16px\",\n      lineHeight: \"19px\",\n      _hover: {\n        color: \"#FFFFFF\",\n      },\n    },\n\n    popfont: {\n      fontSize: \"12px\",\n      lineHeight: \"14px\",\n      color: \"#999999\",\n    },\n    singleCol: {\n      // bg: \"cyan\",\n      w: \"44%\",\n      h: \"200px\",\n      borderRadius: \"16px\",\n      borderWidth: \"1px\",\n      borderColor: \"#9999992B\",\n      overflow: \"hidden\",\n      mb: \"2vw\",\n    },\n    popContentStyle: {\n      borderRadius: \"0\",\n      width: \"100%\",\n      background: \"#FFFFFF\",\n      border: \"0px\",\n    },\n    colOptionText: {\n      fontSize: \"12px\",\n    },\n    cancelButton: {\n      bg: \"light\",\n      color: \"dark\",\n      h: \"40px\",\n      borderWidth: 1,\n      mt: \"6px\",\n    },\n    nextButton: {\n      mt: \"20px\",\n      color: \"white\",\n      h: \"40px\",\n      borderRadius: 0,\n      _hover: {\n        bg: \"dark\",\n      },\n      bg: \"dark\",\n    },\n    editProfileButton: {\n      borderRadius: \"30px\",\n      alignSelf: \"flex-start\",\n      top: \"20%\",\n      borderColor: \"dark\",\n    },\n    newCollectionInput: {\n      mt: \"10px\",\n      h: \"40px\",\n      borderRadius: 0,\n      _placeholder: {\n        color: \"#cfcfcf\",\n      },\n    },\n    iconCenter: {\n      bg: \"#f2f2f2\",\n      w: \"40%\",\n      // flexDir:\"row\",\n      // flexWrap:\"wrap\",\n      cursor: \"pointer\",\n      h: \"100%\",\n    },\n    editIconStack: {\n      bg: \"light\",\n      py: \"5%\",\n      pr: \"20%\",\n      w: \"15vw\",\n      borderRadius: \"4px\",\n      boxShadow: \"1px 2px 9px #00000035\",\n      pl: \"5%\",\n    },\n    imageDisplay: {\n      h: \"100%\",\n      // flexDir:\"row\",\n      // flexWrap:\"wrap\",\n      bg: \"grey\",\n      cursor: \"pointer\",\n      w: \"40%\",\n    },\n    fontUnderline: {\n      decoration: \"underline\",\n    },\n    nameStack: {\n      ml: \"5%\",\n      w: \"60%\",\n    },\n  };\n};\n"],"names":["pulse","keyframes","_templateObject","_taggedTemplateLiteral","LoadingOverlay","_ref","Object","assign","_objectDestructuringEmpty","_jsxs","Flex","pos","bg","h","w","align","justify","flexDirection","alignSelf","children","_jsx","borderRadius","borderWidth","borderColor","animation","concat","Image","src","Images_Icons","objectFit","Text","fontSize","mt","memo","NewDashboardNavBar","lazy","MyDeals","MyBrands","_user_data$customer","_user_data$customer2","_user_data$customer3","_order_data$orders","_order_data$orders2","navigate","useNavigate","dispatch","useDispatch","popRef","useRef","token","useSelector","state","authReducer","user_data","userReducer","_useSelector3","orderReducer","order_data","getOrder_loading","_useSelector4","my_deals_loading","user_collection","my_deals","my_followed_brands","_useSelector5","collectionReducer","collection_data","collection_loading","useEffect","GET_COLLECTIONS","GET_ORDER","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_useStyles","useStyles","root","infoBox","font1","font2","editProfileText","smallerDesc","contain","singleCol","cancelButton","popContentStyle","colOptionText","nextButton","newCollectionInput","editProfileButton","iconCenter","imageDisplay","editIconStack","fontUnderline","nameStack","_useCreateCollectionM","useCreateCollectionMutation","createCollection","_slicedToArray","_useDeleteCollectionM","useDeleteCollectionMutation","_useState","useState","_useState2","createCollectionLoading","setCreateCollectionLoading","_useState3","_useState4","setCreateCollectionError","_useState5","_useState6","collectionName","setCollectionName","_useState7","_useState8","loadingAction","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","activeId","_useState15","_useState16","monthName","setMonthName","currentMonthName","Date","getMonth","tabs","id","name","_AddCollection","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","then","_ref4","data","status","getUserCollection","catch","e","finally","stop","apply","arguments","Box","flexDir","Suspense","fallback","Spinner","size","Container","Stack","_objectSpread","HStack","Avatar","mr","customer","profilePicture","textTransform","getUTCFullYear","Spacer","Button","variant","onClick","GLOBAL_PREFIX","Tabs","isLazy","TabList","map","Tab","_selected","color","fontWeight","nanoid","cursor","Icon","as","IoIosAdd","TabPanels","TabPanel","px","orders","length","_Fragment","_e$offer","_e$offer2","_e$offer3","_e$offer3$reward","_e$offer4","_e$offer4$offerImages","Skeleton","isLoaded","mb","offer","price","Number","originalPrice","tokens","reward","rewardSymbol","quantity","date","updatedAt","expired","image","offerImages","url","rest","VStack","Lottie","animationData","empty","loop","autoplay","width","height","_collection_data$coll","flexWrap","collections","i","_e$likes","_e$likes2","likes","images","fallbackSrc","noOfLines","Popover","placement","initialFocusRef","_ref2","PopoverTrigger","toString","AiOutlineEllipsis","Center","ml","MySaved","item","Modal","isCentered","blockScrollOnMount","scrollBehavior","motionPreset","closeOnOverlayClick","ModalOverlay","ModalContent","base","md","p","Input","placeholder","value","onChange","_ref3","target","isLoading","disabled","pt","overflow","root2","button","background","lineHeight","head","container","_hover","search","font","popfont","border","top","_placeholder","py","pr","boxShadow","pl","decoration"],"sourceRoot":""}