{"version":3,"file":"static/js/1339.e6d83277.chunk.js","mappings":"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","sources":["components/DashboardProductItem/index.tsx","components/SkeletonLoader/index.tsx","pages/DashboardModule/DashboardSavedFilters/DashboardSavedFilters.tsx"],"sourcesContent":["import { Box, Flex, HStack, Image, Skeleton, Text } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { DashboardProductItemProps } from \"../../interfaces\";\nimport { NewSvg, TrendingSvg } from \"../../assets/iconsSvg/iconsSvg\";\n\n// import { Cloudinary } from \"@cloudinary/url-gen\";\n// import { backgroundRemoval } from \"@cloudinary/url-gen/actions/effect\";\n\nconst DashboardProductItem: FC<DashboardProductItemProps> = ({\n  productTitle,\n  productSubtitle,\n  points,\n  price,\n  isLoaded,\n  trending,\n  isNew,\n  bgImage,\n  onClick,\n  i,\n  rest,\n}) => {\n  const { root } = useStyles();\n\n  // const cld = new Cloudinary({\n  //   cloud: { cloudName: \"digital-specie\" },\n  // });\n  // const myImage = cld.image(\"sample\").effect(backgroundRemoval());\n\n  // return <Flex {...root} flexDir={\"column\"} onClick={onClick}></Flex>;\n\n  // console.log(isNew);\n\n  return (\n    <Flex {...root} flexDir={\"column\"} pos=\"relative\">\n      <Box w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]} px=\"0px\">\n        <Skeleton borderRadius={{ base: \"8px\", md: \"10px\" }} isLoaded={isLoaded}>\n          <Flex\n            w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n            h={[\"350px\", \"270px\", \"350px\", \"320px\", \"360px\"]}\n            px=\"0px\"\n            borderRadius={{ base: \"8px\", md: \"10px\" }}\n            flexDir={\"column\"}\n            // bg={\"grey\"}\n            bg={\"#F2F2F2\"}\n            // overflow=\"hidden\"\n            className=\"card-hover\"\n            as=\"button\"\n            onClick={onClick}\n            role=\"group\"\n            // bg=\"white\"\n            borderColor={\"#00000012\"}\n            borderWidth=\"1px\"\n            // pos={\"relative\"}\n          >\n            {/* OVERLAY */}\n            <Box\n              pos={\"absolute\"}\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              h={[\"350px\", \"270px\", \"350px\", \"320px\", \"360px\"]}\n              bg={\"#0000000E\"}\n              // bg={\"#F6F6F6\"}\n              zIndex={100}\n            />\n            <Box\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              // h={[\"160px\", \"190px\", \"260px\", \"230px\", \"260px\"]}\n              overflow=\"hidden\"\n            >\n              <Image\n                src={bgImage[0]?.url}\n                w=\"100%\"\n                h={[\"160px\", \"190px\", \"260px\", \"230px\", \"270px\"]}\n                // h=\"100%\"\n                // borderRadius={{ base: \"8px\", md: \"16px\" }}\n                borderBottomEndRadius={{ base: \"8px\", md: \"10px\" }}\n                borderBottomStartRadius={{ base: \"8px\", md: \"10px\" }}\n                objectFit=\"cover\"\n                // className=\"img-card\"\n                fallbackSrc={Images_Icons.appLogoPlaceholder}\n                fallbackStrategy=\"beforeLoadOrError\"\n                mixBlendMode=\"multiply\"\n                _groupHover={{\n                  transform: \"scale(1.2)\",\n                  transition: \"all .2s linear\",\n                }}\n              />\n            </Box>\n\n            <HStack w=\"70%\" alignSelf={\"center\"} mt=\"5px\">\n              <Image\n                src={rest?.brand?.logo}\n                w=\"20px\"\n                h=\"20px\"\n                borderRadius=\"20px\"\n                objectFit={\"contain\"}\n                bg=\"grey\"\n              />\n              <Text noOfLines={1} textTransform={\"uppercase\"}>\n                {productTitle}\n              </Text>\n            </HStack>\n            <Text noOfLines={1} w=\"70%\" alignSelf={\"center\"} opacity={0.6}>\n              {productSubtitle}\n            </Text>\n\n            <Flex\n              pos={\"absolute\"}\n              top={\"-14.5px\"}\n              right={[\n                \"-1.5px\",\n                \"-1.5px\",\n                i === 2 ? \"0px\" : i === 5 ? \"0px\" : i === 8 ? \"0px\" : i === 11 ? \"0px\" : \"-18.5px\",\n                i === 3 ? \"0px\" : i === 7 ? \"0px\" : i === 11 ? \"0px\" : i === 15 ? \"0px\" : \"-15.5px\",\n                i === 3 ? \"0px\" : i === 7 ? \"0px\" : i === 11 ? \"0px\" : i === 15 ? \"0px\" : \"-10.5px\",\n              ]}\n            >\n              {isNew ? <NewSvg /> : null}\n              {/* {!trending ? <TrendingSvg /> : isNew ? <NewSvg /> : null} */}\n            </Flex>\n            <Box\n              bg=\"dark\"\n              pos={\"absolute\"}\n              bottom=\"0\"\n              w={[\"280px\", \"200px\", \"280px\", \"235px\", \"280px\"]}\n              h=\"30px\"\n              borderBottomRadius={\"10px\"}\n              color=\"white\"\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n            >\n              <Text pt=\"2px\" fontFamily=\"Dot Matrix\" fontSize=\"20px\" textTransform=\"uppercase\">\n                {points} {rest?.brand?.brandName} PT\n              </Text>\n            </Box>\n          </Flex>\n        </Skeleton>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default DashboardProductItem;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      align: \"center\",\n      my: \"5%\",\n      borderRadius: \"16px\",\n      px: 0,\n    },\n  };\n};\n","import {\n  Flex,\n  Skeleton,\n  HStack,\n  Heading,\n  Box,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst SkeletonLoader: FC = (): JSX.Element => {\n  const { root } = useStyles();\n  return (\n    <SimpleGrid\n      columns={[2, 2, 3, 4, 4]}\n      w={\"100%\"}\n      spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n      spacingY={\"5px\"}\n    >\n      {[1, 2, 3, 4]?.map(() => (\n        <Flex {...root} flexDir={\"column\"} key={nanoid()}>\n          <Box w={\"280px\"}>\n            <Skeleton\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              isLoaded={false}\n            >\n              <Flex\n                w={\"280px\"}\n                h={\"280px\"}\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                flexDir={\"column\"}\n                bg={\"#99999951\"}\n                overflow=\"hidden\"\n                className=\"card-hover\"\n                as=\"button\"\n              >\n                {/* OVERLAY */}\n                <Box\n                  pos={\"absolute\"}\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  w={\"280px\"}\n                  h={\"280px\"}\n                  bg={\"#99999951\"}\n                />\n              </Flex>\n            </Skeleton>\n            <Flex flexDir={\"column\"} mt={\"2%\"}>\n              <Flex w={\"280px\"} justify={\"space-between\"} align={\"center\"}>\n                <Skeleton\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  isLoaded={false}\n                >\n                  <Text\n                    fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}\n                    noOfLines={1}\n                  >\n                    productTitle\n                  </Text>\n                </Skeleton>\n              </Flex>\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <Text\n                  fontSize={[\"8px\", \"8px\", \"12px\", \"14px\", \"14px\"]}\n                  opacity={0.7}\n                  noOfLines={1}\n                >\n                  points\n                </Text>\n              </Skeleton>\n\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <HStack>\n                  <Heading fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    points\n                  </Heading>\n                  <Text fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    price\n                  </Text>\n                </HStack>\n              </Skeleton>\n            </Flex>\n          </Box>\n        </Flex>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default SkeletonLoader;\n\nconst useStyles = () => {\n  return {\n    root: {\n      //   w: \"90vw\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      borderRadius: \"16px\",\n    },\n  };\n};\n","import { Flex, HStack, Icon, SimpleGrid, Stack, Text } from \"@chakra-ui/react\";\nimport { FiChevronLeft } from \"react-icons/fi\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport DashboardProductItem from \"../../../components/DashboardProductItem\";\n// import { products4 } from \"../../../constants/dummyJSON\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AuthReducerProps } from \"../../../interfaces\";\nimport { RootState } from \"../../../redux/store\";\nimport { useGetLikedOffersQuery } from \"../../../redux/rtkQuery/api\";\n// import { OffersService } from \"../../../services/openapi\";\nimport SkeletonLoader from \"../../../components/SkeletonLoader\";\nimport NewDashboardNavBar from \"../../../components/NewDashboardNavBar\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\n\nconst DashboardSavedFilters = (): JSX.Element => {\n  let navigate = useNavigate();\n  const { root } = useStyles();\n\n  const { id } = useParams();\n  const { state }: { state: any } = useLocation();\n\n  const { token }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n\n  const { data, isLoading }: any = useGetLikedOffersQuery(state.id, {\n    refetchOnMountOrArgChange: true,\n  });\n  useEffect(() => {\n    // console.log(data?.data[0], \"pppppppp\");\n  }, []);\n\n  return (\n    <Flex flexDir={\"column\"}>\n      <NewDashboardNavBar />\n      <Stack {...root}>\n        <HStack onClick={() => navigate(-1)} cursor=\"pointer\">\n          <Icon as={FiChevronLeft} w={\"2vw\"} h={\"2vw\"} />\n          <Text>Saved</Text>\n        </HStack>\n        <Text pt={\"2vw\"}>{id?.replaceAll(\"-\", \" \")}</Text>\n\n        {isLoading ? (\n          <SkeletonLoader />\n        ) : (\n          <SimpleGrid columns={[2, 2, 3, 4, 4]} spacingX={\"5%\"} w={\"80vw\"}>\n            {data?.data?.map(({ offer }: { offer: any }, i: number) => (\n              <DashboardProductItem\n                key={nanoid()}\n                isLoaded={!isLoading}\n                // trending\n                // isNew\n                productTitle={offer.name}\n                points={\"48,98 NIK tok\"}\n                productSubtitle={offer.description}\n                price={offer.price}\n                bgImage={offer.images}\n                rest={{ ...offer }}\n                i={i}\n                onClick={() => {\n                  navigate(`${GLOBAL_PREFIX}/productDetails/${offer.id}`, {\n                    state: { ...offer },\n                  });\n                }}\n              />\n            ))}\n          </SimpleGrid>\n        )}\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default DashboardSavedFilters;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      px: [5, 5, 10, 20, 40],\n      mt: \"108px\",\n      pt: \"3%\",\n      overflow: \"hidden\",\n    },\n  };\n};\n"],"names":["_ref","_bgImage$","_rest$brand","_rest$brand2","productTitle","productSubtitle","points","isLoaded","price","isNew","trending","bgImage","onClick","i","rest","root","useStyles","_jsx","Flex","_objectSpread","flexDir","pos","children","Box","w","px","Skeleton","borderRadius","base","md","_jsxs","h","bg","className","as","role","borderColor","borderWidth","zIndex","overflow","Image","src","url","borderBottomEndRadius","borderBottomStartRadius","objectFit","fallbackSrc","Images_Icons","appLogoPlaceholder","fallbackStrategy","mixBlendMode","_groupHover","transform","transition","HStack","alignSelf","mt","brand","logo","Text","noOfLines","textTransform","opacity","top","right","NewSvg","bottom","borderBottomRadius","color","alignItems","justifyContent","pt","fontFamily","fontSize","brandName","align","my","SimpleGrid","columns","spacingX","spacingY","map","_createElement","key","nanoid","justify","Heading","pb","_data$data","navigate","useNavigate","id","useParams","state","useLocation","_useSelector","useSelector","authReducer","_useGetLikedOffersQue","token","useGetLikedOffersQuery","refetchOnMountOrArgChange","data","isLoading","useEffect","NewDashboardNavBar","Stack","cursor","Icon","FiChevronLeft","replaceAll","SkeletonLoader","offer","DashboardProductItem","name","description","images","concat","GLOBAL_PREFIX"],"sourceRoot":""}