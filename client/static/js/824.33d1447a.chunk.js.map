{"version":3,"file":"static/js/824.33d1447a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/avatar/src/avatar-group.tsx","../node_modules/utilities/object-utils/src/compact.ts","components/MiniNavBar/index.tsx","pages/OrderSummary/OrderSummary.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { baseStyle } from \"./avatar\"\nimport { cloneElement } from \"react\"\n\ninterface AvatarGroupOptions {\n  /**\n   * The children of the avatar group.\n   *\n   * Ideally should be `Avatar` and `MoreIndicator` components\n   */\n  children: React.ReactNode\n  /**\n   * The space between the avatars in the group.\n   * @default \"-0.75rem\"\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number\n}\n\nexport interface AvatarGroupProps\n  extends AvatarGroupOptions,\n    Omit<HTMLChakraProps<\"div\">, \"children\">,\n    ThemingProps<\"Avatar\"> {}\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nexport const AvatarGroup = forwardRef<AvatarGroupProps, \"div\">(\n  function AvatarGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Avatar\", props)\n\n    const {\n      children,\n      borderColor,\n      max,\n      spacing = \"-0.75rem\",\n      borderRadius = \"full\",\n      ...rest\n    } = omitThemingProps(props)\n\n    const validChildren = getValidChildren(children)\n\n    /**\n     * get the avatars within the max\n     */\n    const childrenWithinMax =\n      max != null ? validChildren.slice(0, max) : validChildren\n\n    /**\n     * get the remaining avatar count\n     */\n    const excess = max != null ? validChildren.length - max : 0\n\n    /**\n     * Reversing the children is a great way to avoid using zIndex\n     * to overlap the avatars\n     */\n    const reversedChildren = childrenWithinMax.reverse()\n\n    const clones = reversedChildren.map((child, index) => {\n      const isFirstAvatar = index === 0\n\n      const childProps = {\n        marginEnd: isFirstAvatar ? 0 : spacing,\n        size: props.size,\n        borderColor: child.props.borderColor ?? borderColor,\n        showBorder: true,\n      }\n\n      return cloneElement(child, compact(childProps))\n    })\n\n    const groupStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"row-reverse\",\n      ...styles.group,\n    }\n\n    const excessStyles: SystemStyleObject = {\n      borderRadius,\n      marginStart: spacing,\n      ...baseStyle,\n      ...styles.excessLabel,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        role=\"group\"\n        __css={groupStyles}\n        {...rest}\n        className={cx(\"chakra-avatar__group\", props.className)}\n      >\n        {excess > 0 && (\n          <chakra.span className=\"chakra-avatar__excess\" __css={excessStyles}>\n            {`+${excess}`}\n          </chakra.span>\n        )}\n        {clones}\n      </chakra.div>\n    )\n  },\n)\n\nAvatarGroup.displayName = \"AvatarGroup\"\n","export function compact<T extends Record<any, any>>(object: T) {\n  const clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n","import { Flex, Image, Spacer } from \"@chakra-ui/react\";\nimport React, { lazy, FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GLOBAL_PREFIX } from \"../../constants\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { useNavbarStyles } from \"../NavBar\";\n\nconst MiniNavBar: FC<any> = ({ customPadding, ...rest }): JSX.Element => {\n  let navigate = useNavigate();\n  const { homeIcon } = useNavbarStyles();\n  return (\n    <Flex w={\"100%\"} px={customPadding || \"5%\"}>\n      <Flex {...homeIcon} onClick={() => navigate(`${GLOBAL_PREFIX}/`)}>\n        <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n      </Flex>\n      <Spacer />\n      <Flex></Flex>\n    </Flex>\n  );\n};\n\nexport default MiniNavBar;\n","import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Center,\n  Circle,\n  Divider,\n  Flex,\n  HStack,\n  Image,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\n// import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport MeProtocolButton from \"../../components/MeProtocolButton\";\nimport MiniNavBar from \"../../components/MiniNavBar\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { AuthReducerProps } from \"../../interfaces\";\nimport { RootState } from \"../../redux/store\";\n\nconst OrderSummary = (): JSX.Element => {\n  const {\n    root,\n    button,\n    leftFrame,\n    rightFrame,\n    inner,\n    fontHeader,\n    fontBody,\n    headText,\n    greyTexts,\n    button2,\n    font,\n  } = useStyles();\n\n  // let navigate = useNavigate();\n\n  const { token }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n  // useEffect(() => {\n  //   if (!token) {\n  //     navigate(`${GLOBAL_PREFIX}/`);\n  //   }\n  // });\n  return (\n    <Flex flexDir={\"column\"}>\n      <MiniNavBar />\n      <Stack {...root}>\n        <Flex flexDir={\"row\"}>\n          {/* ----------------------------------------------------------LEFT SECTION--------- ------ ------ ----- ------ ------ ------ ------ */}\n          <Stack {...leftFrame} {...fontHeader}>\n            <Stack {...inner}>\n              <Box>\n                <Text {...headText}>Pay in token rewards</Text>\n              </Box>\n              <HStack h=\"80px\" bg=\"#F2F2F2\" borderRadius=\"100px\" px={\"20px\"}>\n                <AvatarGroup size=\"md\">\n                  {[1, 2, 3, 4, 5, 6, 7, 8]?.map((e, i) => (\n                    <Avatar name=\"A A\" src=\"https://bit.ly/ryan-florence\" />\n                  ))}\n                </AvatarGroup>\n                <Spacer />\n                <Box fontSize=\"16px\" lineHeight=\"24px\">\n                  <Text>Add/remove rewards</Text>\n                </Box>\n              </HStack>\n\n              <Box>\n                <Center as=\"button\" {...button2} bg=\"#F6C657\" color=\"#000000\">\n                  <Spacer />\n                  <Text {...font}>\n                    <Image src={Images_Icons.paypalLogo} />\n                  </Text>\n                  <Text>Pay with PayPal</Text>\n                  <Spacer />\n                  <Text {...font} padding=\"15\">\n                    <Image src={Images_Icons.checkIcon} />\n                  </Text>\n                </Center>\n                <Center as=\"button\" {...button2} bg=\"#000000\" color=\"#FFFFFF\">\n                  <Text {...font}>\n                    <Image src={Images_Icons.applePayLogo} />\n                  </Text>\n                  <Text>Pay with Apple Pay</Text>\n                </Center>\n                <Center as=\"button\" {...button2} bg=\"#F2F2F2\" color=\"#999999\">\n                  <HStack padding={\"10\"}>\n                    <Text>1234 1234 1234 1234 1234</Text>\n                    <Spacer />\n                    <Text>MM / YY</Text>\n                    <Spacer />\n                    <Text>CVC</Text>\n                    <Spacer />\n                    <Text {...font}>\n                      <Image src={Images_Icons.visaLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.mastercardLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.americanExpressLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.unionPayLogo} />\n                    </Text>\n                  </HStack>\n                </Center>\n              </Box>\n\n              <Box>\n                <MeProtocolButton\n                  name={\"Confirm transaction\"}\n                  rest={{ ...button }}\n                />\n              </Box>\n              <Box {...fontBody}>\n                <Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n                  dignissim magna in nisi auctor, id aliquam ligula semper.\n                  Mauris congue finibus tellus, sed eleifend elit cursus eu\n                </Text>\n              </Box>\n            </Stack>\n\n            <Stack>\n              <Divider orientation=\"horizontal\" w=\"100%\" mt={\"40px\"} />\n              <Text {...headText} pt={\"20px\"}>\n                How it works\n              </Text>\n\n              {[1, 2, 3, 4]?.map((e, i) => (\n                <Flex key={nanoid()} flexDir=\"row\">\n                  <Circle size=\"25px\" bg=\"black\" color=\"white\">\n                    <Text>{i + 1}</Text>\n                  </Circle>\n                  <Text {...greyTexts} pl=\"20px\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Morbi dignissim magna in nisi auctor, id aliquam ligula\n                    semper. Mauris congue finibus tellus, sed eleifend elit\n                    cursus eu\n                  </Text>\n                </Flex>\n              ))}\n            </Stack>\n          </Stack>\n\n          <Spacer />\n\n          {/* ----------------------------------------------------------RIGHT SECTION--------- ------ ------ ----- ------ ------ ------ ------ */}\n          <Stack {...rightFrame}>\n            <Text {...headText}>Order summary</Text>\n            <HStack>\n              <Image\n                boxSize=\"100px\"\n                objectFit=\"cover\"\n                src=\"https://bit.ly/dan-abramov\"\n                bg={\"#999999\"}\n              />\n              <Box>\n                <Text>DV + Suicoke Interlocking Sandals</Text>\n                <Box {...greyTexts}>\n                  <Text>Black</Text>\n                  <Text>Size: S</Text>\n                  <Text>Quantity: 1</Text>\n                </Box>\n              </Box>\n            </HStack>\n\n            <HStack bg={\"#F2F2F2\"} h=\"45px\">\n              <Text>Deal price </Text>\n              <Spacer />\n              <Text>$229.00</Text>\n            </HStack>\n            <HStack h=\"45px\">\n              <Text>Subtotal rewards</Text>\n              <Spacer />\n              <Text>-$229.00</Text>\n            </HStack>\n            {/* ----------------------------------------------------------PAYMENT  DETAILS--------- ------ ------ ----- ------ ------ ------ ------ */}\n            <Text fontSize={\"24px\"} py={\"40px\"}>\n              Payment details\n            </Text>\n            <HStack {...greyTexts}>\n              <Text>Reward split</Text>\n              <Spacer />\n              <Text onClick={() => alert(\"edit\")}>Edit</Text>\n            </HStack>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9]?.map((e, i) => (\n              <Flex\n                bg={i % 2 === 0 ? \"#F2F2F2\" : \"white\"}\n                w=\"100%\"\n                h=\"55px\"\n                flexDir={\"column\"}\n                justify=\"center\"\n              >\n                <HStack>\n                  <Text>Nike ACG</Text>\n                  <Spacer />\n                  <Text>$85.07</Text>\n                </HStack>\n                <HStack {...greyTexts}>\n                  <Text>4353 NKE</Text>\n                  <Spacer />\n                  <Text>24%</Text>\n                </HStack>\n              </Flex>\n            ))}\n          </Stack>\n        </Flex>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default OrderSummary;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      px: \"10%\",\n      mt: \"50px\",\n      pt: \"3%\",\n    },\n    button: {\n      w: \"100%\",\n      h: \"80px\",\n      borderRadius: \"0px\",\n      background: \"#000000\",\n      my: \"20px\",\n    },\n\n    leftFrame: {\n      w: \"60%\",\n    },\n    rightFrame: {\n      w: \"35%\",\n    },\n\n    inner: {\n      flexGrow: \"0\",\n      flex: \"none\",\n    },\n\n    fontHeader: {\n      fontSize: \"18px\",\n      lineHeight: \"30px\",\n      color: \"#000000\",\n    },\n\n    fontBody: {\n      fontSize: \"14px\",\n      lineHeight: \"21px\",\n      color: \"#999999\",\n    },\n    headText: {\n      fontSize: \"20px\",\n      mb: \"25px\",\n    },\n    greyTexts: {\n      color: \"#AEAEAE\",\n      fontSize: \"14px\",\n    },\n    button2: {\n      w: \"100%\",\n      h: \"62px\",\n      borderRadius: \"0px\",\n      background: \"#000000\",\n      my: \"20px\",\n    },\n    font: {\n      fontSize: \"24px\",\n      lineHeight: \"24px\",\n      padding: \"10px\",\n    },\n  };\n};\n"],"names":["AvatarGroup","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","borderColor","max","_omitThemingProps$spa","spacing","_omitThemingProps$bor","borderRadius","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","childrenWithinMax","slice","excess","length","clones","reverse","map","child","index","_a","childProps","marginEnd","size","showBorder","cloneElement","object","clone","Object","assign","key","compact","groupStyles","_objectSpread","display","alignItems","justifyContent","flexDirection","group","excessStyles","marginStart","baseStyle","excessLabel","jsxs","chakra","div","role","__css","className","cx","jsx","span","concat","displayName","_ref","customPadding","navigate","useNavigate","homeIcon","useNavbarStyles","_jsxs","Flex","w","px","_jsx","onClick","GLOBAL_PREFIX","Image","src","Images_Icons","appLogo","objectFit","Spacer","_ref2","_ref3","_useStyles","useStyles","root","button","leftFrame","rightFrame","inner","fontHeader","fontBody","headText","greyTexts","button2","font","useSelector","state","authReducer","token","flexDir","MiniNavBar","Stack","Box","Text","HStack","h","bg","e","i","Avatar","name","fontSize","lineHeight","Center","as","color","paypalLogo","padding","checkIcon","applePayLogo","visaLogo","mastercardLogo","americanExpressLogo","unionPayLogo","MeProtocolButton","Divider","orientation","mt","pt","Circle","pl","nanoid","boxSize","py","alert","justify","background","my","flexGrow","flex","mb"],"sourceRoot":""}