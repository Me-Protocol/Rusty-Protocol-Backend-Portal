{"version":3,"file":"static/js/367.f6919331.chunk.js","mappings":"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","sources":["components/LoadingOverlay/index.tsx","redux/CategorySlice/index.ts","pages/DashboardModule/DashboardShop/DashboardShop.tsx"],"sourcesContent":["import { Flex, Image, keyframes, Text } from \"@chakra-ui/react\";\nimport { memo } from \"react\";\nimport Images_Icons from \"../../constants/icons-images\";\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst LoadingOverlay = ({ ...rest }: any): JSX.Element => {\n  return (\n    <Flex\n      pos=\"absolute\"\n      bg=\"white\"\n      h=\"100vh\"\n      w=\"100vw\"\n      align={\"center\"}\n      justify=\"center\"\n      flexDirection={\"column\"}\n      alignSelf=\"center\"\n    >\n      <Flex\n        w=\"15vw\"\n        h={\"15vw\"}\n        borderRadius=\"10vw\"\n        align={\"center\"}\n        justify=\"center\"\n        borderWidth={1}\n        borderColor=\"dark\"\n        animation={`${pulse} 2s infinite`}\n      >\n        <Image\n          src={Images_Icons.appLogo}\n          objectFit={\"cover\"}\n          w=\"10vw\"\n          h={\"10vw\"}\n        />\n      </Flex>\n      <Text fontSize={\"3vh\"} mt=\"3vh\">\n        Loading...\n      </Text>\n    </Flex>\n  );\n};\n\nexport default memo(LoadingOverlay);\n","// import { CategoryType } from \"@/lib/globalTypes\";\nimport { BASE_URL } from \"../../config/\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\nexport enum CategoryType {\n    BRAND = \"brand\",\n    PRODUCT = \"product\",\n    SUB_CATEGORY = \"sub-category\",\n  }\n  \nexport interface PostCategoryProps {\n  name: string;\n  description: string;\n  image: string;\n  banner: string;\n  type: CategoryType;\n  parentId: string;\n}\n\nexport interface GetCategoryProps {\n  token: string;\n  page?: number;\n  limit?: number;\n  type: CategoryType;\n}\n\nexport interface CategoryDataProps {\n  nextPage: number | null;\n  previousPage: number | null;\n  total: number;\n  categories: {\n    banner: string;\n    createdAt: Date;\n    description: string;\n    id: string;\n    image: string;\n    name: string;\n    parentId: string | null;\n    slug: string;\n    type: CategoryType;\n    updatedAt: Date;\n  }[];\n}\n\nexport interface InitialCategoryProps {\n  category_data: CategoryDataProps;\n  sub_category_data: CategoryDataProps;\n  category_loading: boolean;\n  category_error_msg: unknown;\n}\n\nconst initialState = {\n  category_data: {},\n  sub_category_data: {},\n  category_loading: false,\n  category_error_msg: null,\n} as InitialCategoryProps;\n\nexport const CREATE_CATEGORY = createAsyncThunk(\n  \"api/post-category\",\n  async ({ token, request_body }: { token: string; request_body: PostCategoryProps }) => {\n    try {\n      const { data } = await axios.post(\n        `${BASE_URL}/category`,\n        {\n          ...request_body,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      return data?.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const GET_SUB_CATEGORY = createAsyncThunk(\n  \"api/get-sub-category\",\n  async ({ token, page = 1, limit = 10 }: Omit<GetCategoryProps, \"type\">) => {\n    try {\n      const { data } = await axios.get(\n        `${BASE_URL}/category?page=${page}&limit=${limit}&type=sub-category`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      return data?.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const GET_CATEGORY = createAsyncThunk(\n  \"api/get-category\",\n  async ({ token, page = 1, limit = 10, type }: GetCategoryProps) => {\n    try {\n      const { data } = await axios.get(\n        `${BASE_URL}/category?page=${page}&limit=${limit}&type=${type}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      return data?.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const PUT_CATEGORY = createAsyncThunk(\n  \"api/put-category\",\n  async ({ token, categoryId }: { token: string; categoryId: string }) => {\n    try {\n      const { data } = await axios.put(`${BASE_URL}/category/${categoryId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return data?.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const CategorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {\n    categoryQuery: (state) => {},\n  },\n  extraReducers: (builder) => {\n    // ================================POST CATEGORY CASE================================\n    builder.addCase(CREATE_CATEGORY.pending, (state) => {\n      state.category_loading = true;\n    });\n    builder.addCase(CREATE_CATEGORY.fulfilled, (state) => {\n      state.category_loading = false;\n    });\n    builder.addCase(CREATE_CATEGORY.rejected, (state) => {\n      state.category_loading = false;\n    });\n    // ================================GET CATEGORY CASE================================\n    builder.addCase(GET_CATEGORY.pending, (state) => {\n      state.category_loading = true;\n    });\n    builder.addCase(GET_CATEGORY.fulfilled, (state, { payload }) => {\n      state.category_loading = false;\n      state.category_data = payload;\n    });\n    builder.addCase(GET_CATEGORY.rejected, (state) => {\n      state.category_loading = false;\n    });\n    // ================================GET SUB_CATEGORY CASE================================\n    builder.addCase(GET_SUB_CATEGORY.pending, (state) => {\n      state.category_loading = true;\n    });\n    builder.addCase(GET_SUB_CATEGORY.fulfilled, (state, { payload }) => {\n      state.category_loading = false;\n      state.sub_category_data = payload;\n    });\n    builder.addCase(GET_SUB_CATEGORY.rejected, (state) => {\n      state.category_loading = false;\n    });\n    // ================================PUT CATEGORY CASE================================\n    builder.addCase(PUT_CATEGORY.pending, (state) => {\n      state.category_loading = true;\n    });\n    builder.addCase(PUT_CATEGORY.fulfilled, (state, { payload }) => {\n      state.category_loading = false;\n    });\n    builder.addCase(PUT_CATEGORY.rejected, (state) => {\n      state.category_loading = false;\n    });\n  },\n});\n\nexport const { categoryQuery } = CategorySlice.actions;\nexport default CategorySlice.reducer;\n","import { lazy, Suspense, useEffect } from \"react\";\nimport { Flex, Skeleton, Spinner, Stack } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DashEarnIcon, DashIcon3, DashShopIcon } from \"../../../assets/iconsSvg/iconsSvg\";\nimport Images_Icons from \"../../../constants/icons-images\";\nimport { useDashboardStyles } from \"../Dashboard/styles\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthReducerProps } from \"../../../interfaces\";\nimport { RootState } from \"../../../redux/store\";\nimport {\n  useGetBrandCategoryQuery,\n  useGetCategoriesQuery,\n  useGetShopsQuery,\n} from \"../../../redux/rtkQuery/api\";\nimport Container from \"../../../components/Container\";\nimport LoadingOverlay from \"../../../components/LoadingOverlay\";\nimport { getUserInfo } from \"../../../redux/UserSlice\";\nimport { Dispatch } from \"redux\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\nimport { CategoryType } from \"../../../redux/CategorySlice\";\n\n// const DashboardNavBar = lazy(\n//   () => import(\"../../../components/DashboardNavBar\")\n// );\n\nconst NewDashboardNavBar = lazy(() => import(\"../../../components/NewDashboardNavBar\"));\n\nconst Breadcrumbs = lazy(() => import(\"../../../components/Breadcrumbs\"));\nconst Footer = lazy(() => import(\"../../../components/Footer\"));\nconst ShopsSliderCarousel = lazy(() => import(\"../../../components/ShopsSliderCarousel\"));\nconst DashboardTopCard = lazy(() => import(\"../../../components/DashboardTopCard\"));\nconst DashboardNewTopCard = lazy(() => import(\"../../../components/DashboardNewTopCard\"));\n\nconst DashboardShop = (): JSX.Element => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch<Dispatch>();\n\n  const { root } = useDashboardStyles();\n  const {\n    data: categoriesData,\n    error,\n    isLoading: categoriesLoading,\n  } = useGetCategoriesQuery(\n    { page: 1, limit: 10, type: CategoryType.PRODUCT },\n    {\n      refetchOnMountOrArgChange: 300,\n    }\n  );\n\n  const { data: brandsData, isLoading: trendingShopsLoading } = useGetShopsQuery(\n    { page: 1, limit: 8 },\n    { refetchOnMountOrArgChange: true }\n  );\n\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n\n  return (\n    <Flex flexDir={\"column\"}>\n      {/* ----------------------------------------------------------------------NAV BAR------------------------------------------------------------ */}\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        {/* <DashboardNavBar borderBottomRightRadius={\"0px\"} /> */}\n        <NewDashboardNavBar />\n      </Suspense>\n\n      {/* ----------------------------------------------------------------------TOP CARD------------------------------------------------------------ */}\n      <Container>\n        <Stack {...root}>\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            <Breadcrumbs\n              breadcrumbs={[\n                { name: \"Home\", link: `${GLOBAL_PREFIX}/dashboard` },\n                {\n                  name: \"Shops\",\n                  link: `${GLOBAL_PREFIX}/dashboard/shop`,\n                  isCurrentPage: true,\n                },\n              ]}\n            />\n            {/* <DashboardTopCard\n              title={`Discover worlds. Explore brand’s shops.`}\n              desc={\"Designer. Preloved. Vintage. Streetwear. Sneakers.\"}\n              buttonLabel={\"Browse by category\"}\n              icon={<DashIcon3 color={\"#FFFFFF\"} w={\"300px\"} h={\"300px\"} />}\n              design={Images_Icons.dashboardCardDesign3}\n              onClick={() => {\n                navigate(`${GLOBAL_PREFIX}/dashboard/category`);\n              }}\n            /> */}\n\n            <DashboardNewTopCard\n              title={`Discover worlds.`}\n              desc={\"Explore brand’s shops.\"}\n              buttonLabel={\"\"}\n              icon={<DashShopIcon color={\"#FFFFFF\"} w={\"330px\"} h={\"300px\"} />}\n              design={\"\"}\n              // design={Images_Icons.dashboardCardDesign2}\n              onClick={() => {\n                navigate(`${GLOBAL_PREFIX}/dashboard/shop`);\n\n                // navigate(\n                //   `/dashboard/category/${\n                //     data?.data?.[Math.floor(Math.random() * 7)].name\n                //   }`,\n                //   { state: data?.data?.[Math.floor(Math.random() * 7)] }\n                // );\n              }}\n            />\n          </Suspense>\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            {/* ---------------------------------------------------------------------------------------------------------------------------------- */}\n            {categoriesData?.data?.categories?.map((e, i) => (\n              <Skeleton key={nanoid()} borderRadius=\"10px\" isLoaded={!categoriesLoading}>\n                <ShopsSliderCarousel shopArray={i} forStore />\n              </Skeleton>\n            ))}\n          </Suspense>\n        </Stack>\n      </Container>\n\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        <Footer />\n      </Suspense>\n      {categoriesLoading && <LoadingOverlay />}\n    </Flex>\n  );\n};\n\nexport default DashboardShop;\n"],"names":["pulse","keyframes","_templateObject","_taggedTemplateLiteral","LoadingOverlay","_ref","Object","assign","_objectDestructuringEmpty","_jsxs","Flex","pos","bg","h","w","align","justify","flexDirection","alignSelf","children","_jsx","borderRadius","borderWidth","borderColor","animation","concat","Image","src","Images_Icons","appLogo","objectFit","Text","fontSize","mt","memo","CategoryType","CREATE_CATEGORY","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","request_body","_yield$axios$post","data","wrap","_context","prev","next","axios","BASE_URL","_objectSpread","headers","Authorization","sent","abrupt","t0","stop","_x","apply","arguments","GET_SUB_CATEGORY","_ref4","_callee2","_ref3","_ref3$page","page","_ref3$limit","limit","_yield$axios$get","_context2","_x2","GET_CATEGORY","_ref6","_callee3","_ref5","_ref5$page","_ref5$limit","type","_yield$axios$get2","_context3","_x3","PUT_CATEGORY","_ref8","_callee4","_ref7","categoryId","_yield$axios$put","_context4","_x4","CategorySlice","createSlice","name","initialState","category_data","sub_category_data","category_loading","category_error_msg","reducers","categoryQuery","state","extraReducers","builder","addCase","pending","fulfilled","rejected","_ref9","payload","_ref10","_ref11","actions","NewDashboardNavBar","lazy","Breadcrumbs","Footer","ShopsSliderCarousel","DashboardNewTopCard","_categoriesData$data","_categoriesData$data$","navigate","useNavigate","root","useDispatch","useDashboardStyles","_useGetCategoriesQuer","useGetCategoriesQuery","PRODUCT","refetchOnMountOrArgChange","categoriesData","categoriesLoading","error","isLoading","_useGetShopsQuery","useGetShopsQuery","useSelector","authReducer","flexDir","Suspense","fallback","Spinner","size","Container","Stack","breadcrumbs","link","GLOBAL_PREFIX","isCurrentPage","title","desc","buttonLabel","icon","DashShopIcon","color","design","onClick","categories","map","e","i","Skeleton","isLoaded","shopArray","forStore","nanoid"],"sourceRoot":""}