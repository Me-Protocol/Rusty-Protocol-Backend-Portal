{"version":3,"file":"static/js/9566.7fc5b815.chunk.js","mappings":"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","sources":["components/BrandsSliderCarousel/index.tsx"],"sourcesContent":["import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Icon,\n  Image,\n  Text,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\nimport { FC, memo, useRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport iconsImages from \"../../constants/icons-images\";\nimport { ImCircleLeft, ImCircleRight } from \"react-icons/im\";\nimport MeProtocolButton from \"../MeProtocolButton\";\nimport { BrandSvg } from \"../../assets/svg/svg\";\nimport { nanoid } from \"nanoid\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { BrandDataProps, OfferDataProps } from \"../../interfaces/responseTypes\";\n\ninterface SliderCarouselProps {\n  carouselTitle?: string;\n  carouselImage?: string;\n  showIcon?: boolean;\n  items?: BrandDataProps[];\n  seeMoreClick?: (event: Event) => void;\n}\n\nconst BrandsSliderCarousel: FC<SliderCarouselProps> = ({\n  carouselTitle,\n  // carouselImage,\n  seeMoreClick,\n  showIcon,\n  items,\n}) => {\n  const sliderRef = useRef<any>(null);\n  const [activeArrow, setActiveArrow] = useState<number | any>(0);\n\n  // const slidesToShow = useBreakpointValue(\n  //   {\n  //     base: 2.6,\n  //     sm: 3.1,\n  //     md: 3.5,\n  //     lg: 3.5,\n  //     xl: 3,\n  //   },\n  //   { fallback: \"md\" }\n  // );\n\n  const settings = {\n    // focusOnSelect: true,\n    dots: false,\n    infinite: true,\n    speed: 500,\n    // slidesToShow,\n    slidesToScroll: 1,\n    variableWidth: true,\n  };\n  const { root, desc, seeMoreButton, nameStyles } = useStyles();\n\n  function ArrowLeft() {\n    sliderRef?.current?.slickPrev();\n  }\n\n  function ArrowRight() {\n    sliderRef?.current?.slickNext();\n  }\n\n  // console.log(items, \"oopops\");\n\n  return (\n    <Flex {...root} flexDir={\"column\"}>\n      <Flex w={\"100%\"} pt={\"2vh\"} justify={\"space-between\"}>\n        <Flex\n          flexDir={\"row\"}\n          align=\"center\"\n          // w={[\"25%\", \"16%\", \"15%\", \"15%\", \"30%\", \"30%\"]}\n          w={\"60%\"}\n        >\n          {showIcon && (\n            <Image\n              src={iconsImages.appLogo}\n              w={{ base: \"40px\", md: \"50px\" }}\n              h={{ base: \"40px\", md: \"50px\" }}\n              mr={\"1%\"}\n            />\n          )}\n          <Heading {...desc}>{carouselTitle}</Heading>\n        </Flex>\n\n        <Flex display={{ base: \"none\", md: \"flex\" }} justify={\"space-between\"} w={\"4vw\"}>\n          {[\n            { id: \"1\", icon: ImCircleLeft, fn: ArrowLeft },\n            { id: \"2\", icon: ImCircleRight, fn: ArrowRight },\n          ]?.map((e, i) => (\n            <Box onClick={e.fn} key={nanoid()}>\n              <Icon\n                onClick={() => setActiveArrow(i)}\n                as={e.icon}\n                w={\"25px\"}\n                h={\"25px\"}\n                color={\"rgba(153,153,153,0.66)\"}\n                _hover={{ color: \"black\" }}\n              />\n            </Box>\n          ))}\n        </Flex>\n      </Flex>\n      <Box w={\"100%\"}>\n        {/* pl={\"5%\"}> */}\n        <Slider ref={sliderRef} {...settings}>\n          {items?.map((e, i: number) => (\n            <Box key={nanoid()} mr={5} role={\"group\"}>\n              {i === 0 ? (\n                <BrandSvg\n                  img={\n                    e?.banners\n                      ? e?.banners[0]\n                      : \"https://img.freepik.com/free-vector/stylish-glowing-digital-red-lines-banner_1017-23964.jpg\"\n                  }\n                />\n              ) : (\n                <Box>\n                  {/* OVERLAY*/}\n                  <Box\n                    pos={\"absolute\"}\n                    borderRadius={{ base: \"8px\", md: \"16px\" }}\n                    w={[\"120px\", \"200px\", \"240px\", \"270px\", \"320px\"]}\n                    h={[\"100px\", \"180px\", \"180px\", \"200px\", \"220px\"]}\n                    bg={\"#0000000E\"}\n                  />\n                  {/* <Image\n                    w={[\"120px\", \"200px\", \"240px\", \"270px\", \"320px\"]}\n                    h={[\"100px\", \"180px\", \"180px\", \"200px\", \"220px\"]}\n                    bg={\"grey\"}\n                    // _hover={{ backgroundColor: \"red\" }}\n                    borderRadius={{ base: \"16px\", md: \"24px\" }}\n                    objectFit={\"cover\"}\n                    src={e.cover_images}\n                  /> */}\n\n                  <Center\n                    w={[\"120px\", \"200px\", \"240px\", \"270px\", \"320px\"]}\n                    h={[\"100px\", \"180px\", \"180px\", \"200px\", \"220px\"]}\n                    borderRadius={{ base: \"10px\", md: \"16px\" }}\n                    // pos=\"absolute\"\n                    background={`url(${\n                      e?.banners\n                        ? e?.banners[0]\n                        : \"https://img.freepik.com/free-vector/stylish-glowing-digital-red-lines-banner_1017-23964.jpg\"\n                    }) center/cover no-repeat`}\n                    as=\"button\"\n                    overflow={\"hidden\"}\n                    backgroundColor=\"grey\"\n                  >\n                    {e?.logo_white && (\n                      <Image\n                        w={\"130px\"}\n                        h={\"130px\"}\n                        position=\"relative\"\n                        borderRadius={\"5px\"}\n                        src={e?.logo_white}\n                        objectFit={\"contain\"}\n                        fallbackSrc={Images_Icons.appLogoPlaceholder}\n                        fallbackStrategy={\"onError\"}\n                        _groupHover={{\n                          transform: \"scale(1.2)\",\n                          transition: \"all .2s linear\",\n                        }}\n                      />\n                    )}\n                  </Center>\n                </Box>\n              )}\n            </Box>\n          ))}\n        </Slider>\n        {/* <MeProtocolButton\n          name={\"See all brands\"}\n          rest={seeMoreButton}\n          onClick={seeMoreClick}\n        /> */}\n        <Center\n          bg=\"dark\"\n          color=\"white\"\n          px=\"15px\"\n          py=\"5px\"\n          as=\"button\"\n          mt=\"10px\"\n          {...nameStyles}\n          //@ts-ignore\n          onClick={seeMoreClick}\n        >\n          SEE ALL BRANDS\n        </Center>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default memo(BrandsSliderCarousel);\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"90vw\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      overflow: \"hidden\",\n    },\n    desc: {\n      pb: \"10px\",\n      fontSize: [\"14px\", \"14px\", \"16px\", \"16px\", \"20px\"],\n      w: {\n        base: \"100%\",\n        md: \"80%\",\n      },\n    },\n    nameStyles: {\n      fontSize: [\"16px\", \"16px\"],\n    },\n    seeMoreButton: {\n      w: [\"25%\", \"16%\", \"15%\", \"15%\", \"10%\", \"10%\"],\n      h: [\"15px\", \"15px\", \"8%\", \"8%\", \"10%\", \"45px\"],\n      color: \"dark\",\n      borderWidth: 1,\n      backgroundColor: \"light\",\n      mt: \"2%\",\n      fontSize: [\"8px\", \"10px\", \"10px\", \"12px\", \"14px\", \"15px\"],\n      lineHeight: \"50px\",\n    },\n  };\n};\n"],"names":["BrandsSliderCarousel","_ref","_ref2","carouselTitle","seeMoreClick","showIcon","items","sliderRef","useRef","_useState","useState","_useState2","_slicedToArray","setActiveArrow","_useStyles","useStyles","root","desc","nameStyles","seeMoreButton","_jsxs","Flex","_objectSpread","flexDir","children","w","pt","justify","align","_jsx","Image","src","iconsImages","appLogo","base","md","h","mr","Heading","display","id","icon","ImCircleLeft","fn","_sliderRef$current","current","slickPrev","ImCircleRight","_sliderRef$current2","slickNext","map","e","i","Box","onClick","Icon","as","color","_hover","nanoid","Slider","ref","dots","infinite","speed","slidesToScroll","variableWidth","role","BrandSvg","img","banners","pos","borderRadius","bg","Center","background","concat","overflow","backgroundColor","logo_white","position","objectFit","fallbackSrc","Images_Icons","appLogoPlaceholder","fallbackStrategy","_groupHover","transform","transition","px","py","mt","memo","pb","fontSize","borderWidth","lineHeight"],"sourceRoot":""}