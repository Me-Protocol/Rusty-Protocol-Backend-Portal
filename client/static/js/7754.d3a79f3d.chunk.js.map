{"version":3,"file":"static/js/7754.d3a79f3d.chunk.js","mappings":"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","sources":["components/TrendingSliderCarousel/index.tsx"],"sourcesContent":["import { Box, Center, Flex, Heading, HStack, Icon, Image, Skeleton, Text } from \"@chakra-ui/react\";\nimport { FC, useRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport iconsImages from \"../../constants/icons-images\";\nimport { ImCircleLeft, ImCircleRight } from \"react-icons/im\";\nimport MeProtocolButton from \"../MeProtocolButton\";\nimport { nanoid } from \"nanoid\";\nimport { useNavigate } from \"react-router-dom\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport Container from \"../Container\";\nimport { ExternalLink } from \"../../utils/Links\";\nimport { TrendingSvg, NewSvg } from \"../../assets/iconsSvg/iconsSvg\";\nimport { GLOBAL_PREFIX } from \"../../constants\";\n\ninterface SliderCarouselProps {\n  carouselTitle: string;\n  showIcon?: boolean;\n  items?: any;\n  seeMoreClick?: (event: Event) => void;\n  onClick?: (event: Event) => void;\n}\n\nconst TrendingSliderCarousel: FC<SliderCarouselProps> = ({\n  carouselTitle,\n  seeMoreClick,\n  onClick,\n  showIcon,\n  items,\n}) => {\n  const sliderRef = useRef<any>(null);\n  // const [activeArrow, setActiveArrow] = useState<any>(0);\n  const [isDragging, setDragging] = useState(false);\n\n  // const slidesToShow = useBreakpointValue(\n  //   {\n  //     base: 2,\n  //     sm: 3,\n  //     md: 3,\n  //     lg: 3,\n  //     xl: 3,\n  //   },\n  //   { fallback: \"md\" }\n  // );\n\n  // console.log(items, \"N HN\");\n  let navigate = useNavigate();\n\n  const settings = {\n    // focusOnSelect: true,\n    dots: false,\n    infinite: true,\n    speed: 500,\n    // slidesToShow,\n    // slidesToScroll: 1,\n    variableWidth: true,\n    arrows: false,\n  };\n  const { root, desc, seeMoreButton } = useStyles();\n\n  function ArrowLeft() {\n    sliderRef?.current?.slickPrev();\n  }\n\n  function ArrowRight() {\n    sliderRef?.current?.slickNext();\n  }\n\n  function handleClick(e: any) {\n    if (isDragging === true) {\n      return;\n    }\n    // navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`, {\n    //   state: { ...e },\n    // });\n    navigate(`${GLOBAL_PREFIX}/productDetails/${e.offerCode}`);\n  }\n\n  return (\n    <Container>\n      <Flex {...root} flexDir={\"column\"}>\n        <Flex w={\"100%\"} pt={\"50px\"} justify={\"space-between\"} alignSelf={\"center\"}>\n          <Flex\n            flexDir={\"row\"}\n            align=\"center\"\n            // w={[\"25%\", \"16%\", \"15%\", \"15%\", \"30%\", \"30%\"]}\n            w={\"65%\"}\n          >\n            {showIcon && (\n              <Image\n                src={iconsImages.appLogo}\n                w={{ base: \"40px\", md: \"50px\" }}\n                h={{ base: \"40px\", md: \"50px\" }}\n                mr={\"1%\"}\n              />\n            )}\n            <Heading {...desc}>{carouselTitle}</Heading>\n          </Flex>\n\n          <Flex display={{ base: \"none\", md: \"flex\" }} justify={\"space-between\"} w={\"60px\"}>\n            {[\n              { id: \"1\", icon: ImCircleLeft, fn: ArrowLeft },\n              { id: \"2\", icon: ImCircleRight, fn: ArrowRight },\n            ]?.map((e, i) => (\n              <Box onClick={e.fn} key={nanoid()} as=\"button\">\n                <Icon\n                  as={e.icon}\n                  w={\"25px\"}\n                  h={\"25px\"}\n                  color={\"rgba(153,153,153,0.66)\"}\n                  _hover={{ color: \"black\" }}\n                />\n              </Box>\n            ))}\n          </Flex>\n        </Flex>\n        <Box w={\"100%\"}>\n          <Slider\n            ref={sliderRef}\n            {...settings}\n            onSwipe={() => {\n              setDragging(true);\n              setTimeout(() => {\n                setDragging(false);\n              }, 300);\n            }}\n          >\n            {items?.map((e: any, i: any) => (\n              // <Box key={nanoid()} mr={5}>\n              //   {/* OVERLAY */}\n              //   <Box\n              //     pos={\"absolute\"}\n              //     borderRadius={{ base: \"10px\", md: \"16px\" }}\n              //     w={\"380px\"}\n              //     h={\"380px\"}\n              //     as=\"button\"\n              //     onClick={() => handleClick(e)}\n              //     bg={\"#0000000E\"}\n              //   />\n              //   <Image\n              //     w={\"380px\"}\n              //     h={\"380px\"}\n              //     bg={\"grey\"}\n              //     borderRadius={{ base: \"10px\", md: \"16px\" }}\n              //     objectFit={\"cover\"}\n              //     src={e?.images[0] || e?.images}\n              //     // src={e?.images || e?.images[0]}\n              //     fallbackSrc={Images_Icons.appLogoPlaceholder}\n              //     // src={e.images[0]}\n              //   />\n              //   <Flex flexDir={\"column\"} mt={\"2%\"} w={\"380px\"}>\n              //     <Flex w={\"380px\"} justify={\"space-between\"} align={\"center\"}>\n              //       <Text fontSize={\"20px\"} w={\"65%\"} noOfLines={1}>\n              //         {e?.name}\n              //       </Text>\n              //       <Heading fontSize={\"20px\"} noOfLines={1}>\n              //         {e?.point_discount} {e?.reward?.rewardSymbol}\n              //       </Heading>\n              //     </Flex>\n              //     <Text fontSize={\"18px\"} opacity={0.7} w={\"70%\"} noOfLines={1}>\n              //       {e?.category?.name}\n              //     </Text>\n              //   </Flex>\n              // </Box>\n\n              <Flex {...root} flexDir={\"column\"} pos=\"relative\" mr={5} key={nanoid()}>\n                <Box w={[\"280px\", \"200px\", \"280px\", \"290px\", \"340px\"]} px=\"0px\">\n                  <Skeleton borderRadius={{ base: \"8px\", md: \"10px\" }} isLoaded={true}>\n                    <Flex\n                      w={[\"280px\", \"200px\", \"280px\", \"290px\", \"340px\"]}\n                      h={[\"350px\", \"270px\", \"350px\", \"360px\", \"400px\"]}\n                      px=\"0px\"\n                      borderRadius={{ base: \"8px\", md: \"10px\" }}\n                      flexDir={\"column\"}\n                      // bg={\"grey\"}\n                      bg={\"#F2F2F2\"}\n                      // overflow=\"hidden\"\n                      className=\"card-hover\"\n                      as=\"button\"\n                      onClick={() => handleClick(e)}\n                      role=\"group\"\n                      // bg=\"white\"\n                      borderColor={\"#00000012\"}\n                      borderWidth=\"1px\"\n                      // pos={\"relative\"}\n                    >\n                      {/* OVERLAY */}\n                      <Box\n                        pos={\"absolute\"}\n                        borderRadius={{ base: \"8px\", md: \"16px\" }}\n                        w={[\"280px\", \"200px\", \"280px\", \"290px\", \"340px\"]}\n                        h={[\"350px\", \"270px\", \"350px\", \"360px\", \"400px\"]}\n                        bg={\"#0000000E\"}\n                        zIndex={10}\n\n                        // bg={\"#F6F6F6\"}\n                        // bg={\"#0000000E\"}\n                      />\n                      <Box\n                        w={[\"280px\", \"200px\", \"280px\", \"290px\", \"340px\"]}\n                        h={[\"160px\", \"190px\", \"260px\", \"260px\", \"300px\"]}\n                        overflow=\"hidden\"\n                      >\n                        <Image\n                          src={e?.offerImages[0]?.url}\n                          w=\"100%\"\n                          h=\"100%\"\n                          borderRadius={{ base: \"8px\", md: \"16px\" }}\n                          objectFit=\"cover\"\n                          // className=\"img-card\"\n                          fallbackSrc={Images_Icons.appLogoPlaceholder}\n                          fallbackStrategy=\"beforeLoadOrError\"\n                          _groupHover={{\n                            transform: \"scale(1.2)\",\n                            transition: \"all .2s linear\",\n                          }}\n                          mixBlendMode=\"multiply\"\n                        />\n                      </Box>\n\n                      <HStack w=\"70%\" alignSelf={\"center\"} mt=\"5px\">\n                        <Image\n                          src={e?.brand?.logo}\n                          w=\"20px\"\n                          h=\"20px\"\n                          borderRadius=\"20px\"\n                          objectFit={\"contain\"}\n                          bg=\"grey\"\n                        />\n                        <Text noOfLines={1}> {e?.name}</Text>\n                      </HStack>\n                      <Text noOfLines={1} w=\"70%\" alignSelf={\"center\"}>\n                        {e?.product?.category?.name}\n                      </Text>\n\n                      <Flex\n                        pos={\"absolute\"}\n                        top={\"-14.5px\"}\n                        right={[\n                          \"-1.5px\",\n                          \"-1.5px\",\n                          i === 2\n                            ? \"0px\"\n                            : i === 5\n                            ? \"0px\"\n                            : i === 8\n                            ? \"0px\"\n                            : i === 11\n                            ? \"0px\"\n                            : \"-18.5px\",\n                          i === 3\n                            ? \"0px\"\n                            : i === 7\n                            ? \"0px\"\n                            : i === 11\n                            ? \"0px\"\n                            : i === 15\n                            ? \"0px\"\n                            : \"-15.5px\",\n                          i === 3\n                            ? \"0px\"\n                            : i === 7\n                            ? \"0px\"\n                            : i === 11\n                            ? \"0px\"\n                            : i === 15\n                            ? \"0px\"\n                            : \"-10.5px\",\n                        ]}\n                      >\n                        {/* {trending ? <TrendingSvg /> : isNew ? <NewSvg /> : null} */}\n                      </Flex>\n                      <Box\n                        bg=\"dark\"\n                        pos={\"absolute\"}\n                        bottom=\"0\"\n                        w={[\"280px\", \"200px\", \"280px\", \"290px\", \"340px\"]}\n                        h=\"30px\"\n                        borderBottomRadius={\"10px\"}\n                        color=\"white\"\n                        alignItems={\"center\"}\n                        justifyContent={\"center\"}\n                      >\n                        <Text\n                          pt=\"2px\"\n                          fontFamily=\"Dot Matrix\"\n                          fontSize=\"20px\"\n                          textTransform={\"uppercase\"}\n                        >\n                          {e?.tokens} {e?.reward?.rewardSymbol} PT\n                        </Text>\n                      </Box>\n                    </Flex>\n                  </Skeleton>\n                </Box>\n              </Flex>\n            ))}\n          </Slider>\n\n          <Center\n            bg=\"dark\"\n            color=\"white\"\n            px=\"15px\"\n            py=\"5px\"\n            as=\"button\"\n            mt=\"20px\"\n            fontSize=\"16px\"\n            //@ts-ignore\n            onClick={seeMoreClick}\n          >\n            SEE ALL OFFERS\n          </Center>\n          {/* <MeProtocolButton\n            name={\"See all offers\"}\n            rest={seeMoreButton}\n            onClick={seeMoreClick}\n          /> */}\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default TrendingSliderCarousel;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      // bg: \"red\",\n      // overflow: \"hidden\",\n    },\n    desc: {\n      pb: \"10px\",\n      fontSize: [\"16px\", \"16px\", \"18px\", \"18px\", \"20px\", \"22px\"],\n      w: {\n        base: \"100%\",\n        md: \"80%\",\n      },\n    },\n    seeMoreButton: {\n      w: \"100px\",\n      h: \"1vw\",\n      color: \"dark\",\n      borderWidth: 1,\n      backgroundColor: \"light\",\n      mt: \"2%\",\n      fontSize: \"14px\",\n    },\n  };\n};\n"],"names":["_ref","_ref2","carouselTitle","seeMoreClick","showIcon","onClick","items","sliderRef","useRef","_useState","useState","_useState2","_slicedToArray","isDragging","setDragging","navigate","useNavigate","_useStyles","useStyles","root","desc","seeMoreButton","_jsx","Container","children","_jsxs","Flex","_objectSpread","flexDir","w","pt","justify","alignSelf","align","Image","src","iconsImages","appLogo","base","md","h","mr","Heading","display","id","icon","ImCircleLeft","fn","_sliderRef$current","current","slickPrev","ImCircleRight","_sliderRef$current2","slickNext","map","e","i","Box","as","Icon","color","_hover","nanoid","Slider","ref","dots","infinite","speed","variableWidth","arrows","onSwipe","setTimeout","_e$offerImages$","_e$brand","_e$product","_e$product$category","_e$reward","_createElement","pos","key","px","Skeleton","borderRadius","isLoaded","bg","className","concat","GLOBAL_PREFIX","offerCode","handleClick","role","borderColor","borderWidth","zIndex","overflow","offerImages","url","objectFit","fallbackSrc","Images_Icons","appLogoPlaceholder","fallbackStrategy","_groupHover","transform","transition","mixBlendMode","HStack","mt","brand","logo","Text","noOfLines","name","product","category","top","right","bottom","borderBottomRadius","alignItems","justifyContent","fontFamily","fontSize","textTransform","tokens","reward","rewardSymbol","Center","py","pb","backgroundColor"],"sourceRoot":""}