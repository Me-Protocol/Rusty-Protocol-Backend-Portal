{"version":3,"file":"static/js/5495.67e5e562.chunk.js","mappings":"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","sources":["pages/AuthenticationModule/Login/Login.tsx","components/NewModalComponent/index.tsx","components/NewCountdownTimer/index.tsx","pages/AuthenticationModule/Register/OTPModal/index.tsx","pages/AuthenticationModule/Register/Register.tsx"],"sourcesContent":["// @flow\nimport { Divider, Flex, Heading, Link, Spinner, Text, VStack } from \"@chakra-ui/react\";\nimport { lazy, Suspense, useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Formik, FormikHelpers, FormikValues } from \"formik\";\nimport { AuthReducerProps, LoginFormikValues, UserReducerProps } from \"../../../interfaces\";\nimport { GLOBAL_PREFIX, LoginValidationSchema } from \"../../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { loginFn, resetErrorMsg } from \"../../../redux/AuthSlice\";\nimport { RootState } from \"../../../redux/store\";\nimport { useOnline } from \"rooks\";\nimport { BASE_URL } from \"../../../config\";\nimport Container from \"../../../components/Container\";\nimport { getUserInfo } from \"../../../redux/UserSlice\";\nconst TopIconBar = lazy(() => import(\"../../../components/TopIconBar\"));\nconst MeProtocolButton = lazy(() => import(\"../../../components/MeProtocolButton\"));\nconst MeProtocolFormikButton = lazy(() => import(\"../../../components/MeProtocolFormikButton\"));\nconst MeProtocolInput = lazy(() => import(\"../../../components/MeProtocolInput\"));\n\nexport const Login = () => {\n  let location = useLocation();\n  let navigate = useNavigate();\n  const online = useOnline();\n  const dispatch = useDispatch<Dispatch>();\n  const [googleLoading, setGoogleLoading] = useState<boolean>(false);\n  const { isLoading, error, token }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n  const [errorMsg, setErrorMsg] = useState<string>(\" \");\n\n  const { root, boxLeft, boxLogin, leftImg, loginColumn, head, desc } = useStyles();\n  // useEffect(() => {\n  //   if (!token) {\n  //     navigate(`${GLOBAL_PREFIX}/login`);\n  //   }\n  // });\n\n  useEffect(() => {\n    dispatch(resetErrorMsg());\n    // console.log(location, \"LOCAAA\");\n\n    if (token) {\n      dispatch(resetErrorMsg());\n      navigate(`${GLOBAL_PREFIX}/dashboard`);\n    }\n  }, [dispatch, token, navigate]);\n\n  const onSubmit = async (\n    { email, password }: FormikValues,\n    actions: FormikHelpers<LoginFormikValues>\n  ) => {\n    if (!online) return;\n    // const data: any = await dispatch(loginFn({email, password}));\n    // console.log(data, \"TESRRRSE\")\n    // return\n    const { payload, error }: any = await dispatch(loginFn({ identifier: email, password }));\n    if (error) {\n      return setErrorMsg(error?.message);\n    }\n\n    if (payload) {\n      const { payload: userPayload }: any = await dispatch(getUserInfo({ token: payload }));\n\n      if (userPayload?.customer?.walletAddress) {\n        navigate(`${GLOBAL_PREFIX}/dashboard`);\n      } else {\n        navigate(`${GLOBAL_PREFIX}/syncRewards`);\n      }\n    }\n    // if (payload) {\n    //   // IF PHONE IS NOT ADDED GO TO PHONE VERIFICATION PAGE\n    //   if (payload?.access_token?.phones?.length < 1) {\n    //     navigate(`${GLOBAL_PREFIX}/phone_auth`, {\n    //       state: payload?.access_token,\n    //     });\n    //     return;\n    //   }\n    //   // IF PHONE NUMBER IS ADDED BUT 2FA IS ENABLED GO TO PHONE CODE VERIFICATION PAGE\n    //   if (payload?.access_token?.phones?.length > 0) {\n    //     const { status }: { status: number } = await axios.get(\n    //       `${BASE_URL}/users/phone/${payload?.access_token?.phones[0].phone}/${payload?.access_token?.user?.userId}`\n    //     );\n    //     if (status === 200) {\n    //       navigate(`${GLOBAL_PREFIX}/code_input`, {\n    //         state: {\n    //           state: payload?.access_token,\n    //           value: payload?.access_token?.phones[0],\n    //         },\n    //       });\n    //     }\n    //     return;\n    //   }\n    //   //IF 2FA IS DISABLED LOGIN DIRECTLY\n    //   if (payload?.access_token?.token) {\n    //     // console.log(payload, \"JJOOPOJHUHUUHU\");\n    //     // navigate(`${GLOBAL_PREFIX}/dashboard`);\n\n    //     await dispatch(getUserInfo({ token: payload?.access_token?.token }));\n    //     dispatch(GET_WALLETS({ token: payload?.access_token?.token }));\n    //     dispatch(getUserCollection({ token: payload?.access_token?.token }));\n\n    //     if (user_data?.customer?.walletAddress) {\n    //       navigate(`${GLOBAL_PREFIX}/dashboard`);\n    //     } else {\n    //       navigate(`${GLOBAL_PREFIX}/syncRewards`);\n    //     }\n    //   }\n    // }\n  };\n\n  async function SignInWithGoogle() {\n    let config = {\n      method: \"post\",\n      url: `${BASE_URL}/user/google`,\n    };\n\n    try {\n      setGoogleLoading(true);\n      // const { data }: any = await axios(config);\n      // console.log(data,\"hhhhhhhh\")\n      // if (data) {\n      //   window.location.replace(data.url);\n      window.location.replace(`${BASE_URL}/user/google`);\n      // }\n    } catch (e: any | unknown) {\n      console.log(e, \"err google\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n\n  async function SignInWithTwitter() {\n    try {\n      window.location.replace(`${BASE_URL}/users/twitter`);\n    } catch (e: any | unknown) {\n      console.log(e, \"err twitter\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n\n  async function SignInWithFacebook() {\n    try {\n      window.location.replace(`${BASE_URL}/users/facebook`);\n    } catch (e: any | unknown) {\n      console.log(e, \"err twitter\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Suspense fallback={<Spinner size=\"sm\" />}>\n          <TopIconBar pos={\"fixed\"} />\n        </Suspense>\n        <Flex {...root}>\n          <Flex {...boxLogin}>\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={LoginValidationSchema}\n              //@ts-ignore\n              onSubmit={onSubmit}\n            >\n              {(formik) => (\n                <VStack\n                  as={\"form\"}\n                  {...loginColumn}\n                  //@ts-ignore\n                  onSubmit={formik.handleSubmit}\n                  onChange={() => dispatch(resetErrorMsg())}\n                >\n                  <Heading {...head} pb={2}>\n                    Let’s Login\n                  </Heading>\n\n                  <Flex w={\"100%\"} justify={\"space-between\"}>\n                    <Suspense fallback={<Spinner size=\"sm\" />}>\n                      <MeProtocolButton\n                        isLoading={googleLoading}\n                        name={\"Sign in with Google\"}\n                        onClick={() => {\n                          window.location.replace(`${BASE_URL}/user/google`);\n                        }}\n                        // onClick={SignInWithGoogle}\n                        rest={{ w: \"100%\" }}\n                      />\n                    </Suspense>\n\n                    {/* <Flex w={\"25%\"} justify={\"space-between\"}>\n                      <Center\n                        as={Button}\n                        bg={\"#F6F6F6\"}\n                        h={\"40px\"}\n                        w={\"65px\"}\n                        borderRadius={\"25px\"}\n                        onClick={SignInWithFacebook}\n                        _hover={{ bg: \"black\", color: \"light\" }}\n                        role=\"group\"\n                      >\n                        <Icon\n                          color={\"#999999\"}\n                          w={\"20px\"}\n                          h={\"20px\"}\n                          as={FaFacebookSquare}\n                          _groupHover={{ color: \"light\" }}\n                        />\n                      </Center>\n\n                      <Center\n                        as={Button}\n                        bg={\"#F6F6F6\"}\n                        h={\"40px\"}\n                        w={\"65px\"}\n                        ml=\"5px\"\n                        borderRadius={\"25px\"}\n                        onClick={SignInWithTwitter}\n                        _hover={{ bg: \"black\", color: \"light\" }}\n                        role=\"group\"\n                      >\n                        <Icon\n                          color={\"#999999\"}\n                          w={\"20px\"}\n                          h={\"20px\"}\n                          as={FaTwitter}\n                          // _hover={{ color: \"light\" }}\n                          _groupHover={{ color: \"light\" }}\n                        />\n                      </Center>\n                    </Flex> */}\n                  </Flex>\n                  <Flex align={\"center\"} w={\"100%\"} justify={\"space-between\"}>\n                    <Divider w={\"45%\"} color={\"#ECECEC\"} />\n                    <Text color={\"#999999\"} fontSize={{ base: \"12px\", md: \"20px\" }}>\n                      or\n                    </Text>\n                    <Divider w={\"45%\"} color={\"#ECECEC\"} />\n                  </Flex>\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    <MeProtocolInput name={\"email\"} type={\"email\"} placeholder={\"your@email.com\"} />\n\n                    <MeProtocolInput name={\"password\"} type={\"password\"} placeholder={\"Password\"} />\n                  </Suspense>\n\n                  {errorMsg && (\n                    <Text {...desc} color={\"red\"}>\n                      {errorMsg}\n                    </Text>\n                  )}\n                  <Link\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/password_reset`)}\n                    {...desc}\n                    py={3}\n                    textDecoration={\"underline\"}\n                    w={\"30%\"}\n                  >\n                    Forgot Password\n                  </Link>\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    <MeProtocolFormikButton isLoading={isLoading} name={\"Login\"} />\n                  </Suspense>\n\n                  <Text {...desc} pt={\"10px\"}>\n                    Don’t have an account yet?\n                    <Link\n                      onClick={() => {\n                        navigate(`${GLOBAL_PREFIX}/register`);\n                      }}\n                      textDecoration={\"underline\"}\n                    >\n                      {\" \"}\n                      Create one here.\n                    </Link>\n                  </Text>\n                </VStack>\n              )}\n            </Formik>\n          </Flex>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n\nexport const useStyles = () => {\n  return {\n    root: {\n      h: \"100vh\",\n      align: \"center\",\n      justify: \"center\",\n      bg: \"light\",\n    },\n    boxLeft: {\n      display: [\"none\", \"none\", \"none\", \"flex\", \"flex\"],\n      bg: \"light\",\n      fontSize: 40,\n      h: \"100%\",\n      w: \"40vw\",\n    },\n    boxLogin: {\n      // bg: \"light\",\n      // bg: \"red\",\n      fontSize: 40,\n      // justify: \"center\",\n      h: \"100%\",\n      w: [\"100%\", \"100%\", \"80%\", \"50%\", \"50%\"],\n      overflow: \"hidden\",\n    },\n    boxRegister: {\n      fontSize: 40,\n      h: \"100vh\",\n      w: [\"100%\", \"100%\", \"80%\", \"80%\", \"70%\"],\n      justify: \"center\",\n    },\n    leftImg: {\n      h: \"100%\",\n      w: \"100%\",\n    },\n    loginColumn: {\n      bg: \"light\",\n      w: \"100%\",\n      align: \"flex-start\",\n      pt: {\n        base: \"5vh\",\n        md: \"10vh\",\n      },\n      px: {\n        base: \"15px\",\n      },\n      justifySelf: \"center\",\n    },\n    registerColumn: {\n      bg: \"light\",\n      w: [\"100%\", \"100%\", \"100%\", \"80%\", \"70%\"],\n      align: \"flex-start\",\n      pt: {\n        base: \"5vh\",\n        md: \"10vh\",\n      },\n      px: {\n        base: \"15px\",\n        // md: 20\n      },\n      justifySelf: \"center\",\n    },\n    head: {\n      fontSize: {\n        base: \"18px\",\n        md: \"25px\",\n      },\n      pt: \"20px\",\n    },\n    desc: {\n      pb: \"5px\",\n      fontSize: {\n        base: \"15px\",\n        md: \"17px\",\n      },\n      w: {\n        base: \"100%\",\n        md: \"85%\",\n      },\n    },\n    basedText: {\n      pt: \"30px\",\n      fontSize: {\n        base: \"18px\",\n        md: \"20px\",\n      },\n    },\n    checkBoxRoot: {\n      py: \"20px\",\n    },\n    countrySelect: {\n      w: {\n        base: \"100%\",\n        md: \"100%\",\n      },\n      bg: \"grey\",\n      color: \"dark\",\n      borderColor: \"light\",\n      borderWidth: \"1px\",\n      align: \"center\",\n    },\n  };\n};\n","import { Modal, ModalBody, ModalContent, ModalOverlay } from \"@chakra-ui/react\";\nimport { FC, ReactNode } from \"react\";\n\ninterface ModalComponentProps {\n  children: ReactNode;\n  isOpen: boolean;\n  onClose(): void;\n  modalContentStyle?: any;\n  rest: any;\n}\n\nconst NewModalComponent: FC<any> = ({\n  children,\n  isOpen,\n  onClose,\n  modalContentStyle,\n  modalBodyStyle,\n  ...rest\n}): JSX.Element => {\n  return (\n    <Modal\n      isCentered\n      blockScrollOnMount={true}\n      scrollBehavior={\"inside\"}\n      isOpen={isOpen}\n      size={\"lg\"}\n      onClose={onClose}\n      motionPreset=\"slideInBottom\"\n      // useInert=\"false\"\n      {...rest}\n    >\n      <ModalOverlay bg=\"#00000020\" backdropFilter=\"auto\" backdropBlur=\"2px\" />\n      <ModalContent\n        w={{ base: \"90vw\", md: \"60vw\" }}\n        borderRadius={0}\n        py=\"1%\"\n        {...modalContentStyle}\n      >\n        <ModalBody {...modalBodyStyle}>{children}</ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default NewModalComponent;\n","// import { Text } from \"@chakra-ui/react\";\n// import React, { useState, useEffect, FC } from \"react\";\n\n// interface CountdownProps {\n//   countFrom: number;\n//   onCountdownComplete: () => void;\n// }\n\n// const CountdownTimer: FC<CountdownProps> = ({ countFrom, onCountdownComplete }) => {\n//   const [countdown, setCountdown] = useState(countFrom);\n\n//   useEffect(() => {\n//     if (countdown > 0) {\n//       const interval = setInterval(() => {\n//         setCountdown(countdown - 1);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     } else {\n//       onCountdownComplete();\n//     }\n//   }, [countdown, onCountdownComplete]);\n//   const formatTime = (time: number) => {\n//     const minutes = Math.floor(time / 60);\n//     const seconds = time % 60;\n//     return `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n//   };\n\n//   return <Text>Resend ({formatTime(countdown)})</Text>;\n// };\n\n// export default CountdownTimer;\n\nimport { Text, Button, HStack } from \"@chakra-ui/react\";\nimport React, { useState, useEffect, FC } from \"react\";\n\ninterface CountdownProps {\n  countFrom: number;\n  onCountdownComplete: () => void;\n}\n\nconst NewCountdownTimer: FC<CountdownProps> = ({\n  countFrom,\n  onCountdownComplete,\n}) => {\n  const [countdown, setCountdown] = useState(countFrom);\n  const [isActive, setIsActive] = useState(true); // New state for countdown activity\n\n  useEffect(() => {\n    if (isActive && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (countdown === 0 && isActive) {\n      setIsActive(false);\n      onCountdownComplete();\n    }\n  }, [countdown, isActive, onCountdownComplete]);\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${seconds\n      .toString()\n      .padStart(2, \"0\")}`;\n  };\n\n  const handleResetClick = () => {\n    if (countFrom > 0) return;\n    setCountdown(countFrom);\n    setIsActive(true);\n  };\n\n  return (\n    <HStack as={\"button\"} onClick={handleResetClick}>\n      <Text>Resend</Text>\n      <Text opacity={countdown > 0 ? 1 : 0}>({formatTime(countdown)})</Text>\n    </HStack>\n  );\n};\n\nexport default NewCountdownTimer;\n","import {\n  Box,\n  Flex,\n  PinInput,\n  Text,\n  HStack,\n  PinInputField,\n  useToast,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { IoCloseCircle } from \"react-icons/io5\";\nimport { useState } from \"react\";\n// import { RESEND_CODE_FN, VERIFY_EMAIL_FN } from \"@/store/AuthSlice\";\n// import { useRouter } from \"next/navigation\";\nimport NewModalComponent from \"../../../../components/NewModalComponent\";\nimport MeProtocolToast from \"../../../../hooks/MeProtocolToast\";\nimport { useDispatch } from \"react-redux\";\nimport NewCountdownTimer from \"../../../../components/NewCountdownTimer\";\nimport { resendCodeFn, verifyEmailFn } from \"../../../../redux/AuthSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GLOBAL_PREFIX } from \"../../../../constants\";\n\ninterface OTPModalProps {\n  isOpen: boolean;\n  onClose(): void;\n  token: string;\n}\n\nconst OTPModal = ({ isOpen, onClose, token }: OTPModalProps) => {\n  const [resendActive, setResendActive] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [countFrom, setCountFrom] = useState(60);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  let navigate = useNavigate();\n\n  let toast = useToast();\n\n  const dispatch = useDispatch();\n  // const router = useRouter();\n\n  async function VERIFY_CODE(code: string) {\n    try {\n      setLoading(true);\n\n      const { payload, error }: any = await dispatch(\n        verifyEmailFn({ code, token })\n      );\n      if (error) {\n        return setErrorMsg(error.message);\n      }\n\n      if (payload) {\n        onClose();\n        // MeProtocolToast(toast, \"Sign up successful\", 9000, \"bottom-left\");\n        const id = \"error-toast\";\n        if (!toast.isActive(id)) {\n          toast({\n            id,\n            position: \"top\",\n            title: `Account Created Successfully`,\n            description:\n              \"Your account was created using email and password, please enter your email and password to continue\",\n            status: \"success\",\n            duration: 9000,\n            isClosable: false,\n          });\n        }\n        navigate(`${GLOBAL_PREFIX}/login`);\n      }\n    } catch (error) {\n      // console.log(error, \"VERIFY_CODEERR\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function RESEND_CODE() {\n    try {\n      setLoading(true);\n\n      const { payload, error }: any = await dispatch(resendCodeFn({ token }));\n      if (error) {\n        return setErrorMsg(error.message);\n      }\n\n      if (payload) {\n        MeProtocolToast(toast, \"Code resent successfully\", 9000, \"bottom-left\");\n      }\n    } catch (error) {\n      // console.log(error, \"VERIFY_CODEERR\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <NewModalComponent\n      isOpen={isOpen}\n      onClose={onClose}\n      closeOnOverlayClick={false}\n      modalContentStyle={{\n        borderRadius: \"10px\",\n      }}\n    >\n      <Flex flexDir={\"column\"} py=\"5px\">\n        <Flex alignSelf={\"flex-end\"} as=\"button\" onClick={onClose} mb=\"20px\">\n          <IoCloseCircle size={20} />\n        </Flex>\n        <Text fontSize={\"14px\"} mb=\"10px\">\n          Please provide the OTP sent to your Email\n        </Text>\n\n        <HStack w={\"100%\"} h={\"80px\"}>\n          <PinInput\n            onComplete={(e) => {\n              setErrorMsg(\"\");\n              VERIFY_CODE(e);\n            }}\n            otp\n            placeholder={\"*\"}\n          >\n            {[1, 2, 3, 4]?.map(() => (\n              <PinInputField\n                key={nanoid()}\n                bg={\"grey\"}\n                borderRadius={10}\n                borderWidth={0}\n                w={\"30%\"}\n                h={\"100%\"}\n              />\n            ))}\n          </PinInput>\n        </HStack>\n        {errorMsg && <Text color={\"red\"}>{errorMsg}</Text>}\n        {loading && <Spinner size={\"sm\"} alignSelf={\"flex-end\"} mt=\"10px\" />}\n        <HStack fontSize={\"14px\"} mt=\"25px\">\n          <Text>Did not receive OTP?</Text>\n\n          <Box\n            opacity={resendActive ? 1 : 0.5}\n            // as=\"button\"\n            onClick={() => {\n              if (!resendActive) return;\n              RESEND_CODE();\n              setCountFrom(countFrom + 1);\n              setResendActive(false);\n            }}\n          >\n            <NewCountdownTimer\n              countFrom={countFrom}\n              onCountdownComplete={() => {\n                setResendActive(true);\n              }}\n            />\n          </Box>\n        </HStack>\n      </Flex>\n    </NewModalComponent>\n  );\n};\n\nexport default OTPModal;\n","// @flow\nimport {\n  Box,\n  Button,\n  Center,\n  Checkbox,\n  Divider,\n  Flex,\n  Heading,\n  Icon,\n  Image,\n  Link,\n  Spinner,\n  Text,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport Images_Icons from \"../../../constants/icons-images\";\nimport { lazy, FC, Suspense, useEffect, useState } from \"react\";\nimport { useStyles } from \"../Login/Login\";\nimport { Formik, FormikValues } from \"formik\";\nimport { AuthReducerProps } from \"../../../interfaces\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GLOBAL_PREFIX, RegisterValidationSchema } from \"../../../constants\";\nimport { registerFn, resetErrorMsg, resetLoaders } from \"../../../redux/AuthSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { RootState } from \"../../../redux/store\";\nimport { FaFacebookSquare, FaTwitter } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useOnline } from \"rooks\";\nimport { BASE_URL } from \"../../../config\";\nimport OTPModal from \"./OTPModal\";\n\nconst MeProtocolFormikButton = lazy(() => import(\"../../../components/MeProtocolFormikButton\"));\nconst MeProtocolButton = lazy(() => import(\"../../../components/MeProtocolButton\"));\nconst MeProtocolInput = lazy(() => import(\"../../../components/MeProtocolInput\"));\nconst CountrySelector = lazy(() => import(\"../../../components/CountrySelector\"));\nconst TopIconBar = lazy(() => import(\"../../../components/TopIconBar\"));\nexport const Register: FC = () => {\n  const dispatch = useDispatch<Dispatch>();\n  let navigate = useNavigate();\n  const online = useOnline();\n  const [show, setShow] = useState(false);\n  const [googleLoading, setGoogleLoading] = useState<boolean>(false);\n  const { isOpen, onClose, onOpen } = useDisclosure();\n  const [codeJwt, setCodeJwt] = useState<string>(\"\");\n  const [errorMsg, setErrorMsg] = useState<string>(\"\");\n\n  const handleClick = () => setShow(!show);\n  const { token, registerLoading }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n  const {\n    root,\n    boxLeft,\n    boxRegister,\n    leftImg,\n    registerColumn,\n    head,\n    desc,\n    basedText,\n    checkBoxRoot,\n    countrySelect,\n  } = useStyles();\n\n  useEffect(() => {\n    // dispatch(resetRegisterResponse());\n    dispatch(resetLoaders());\n    getGeoInfo();\n\n    if (token) {\n      navigate(`${GLOBAL_PREFIX}/dashboard`);\n    }\n\n    // if (registerResponse) {\n    //     navigate(`/email/${registerResponse?.userId}`, {state: registerResponse?.userId});\n    //     toast({\n    //         position: \"top\",\n    //         title: \"Account created.\",\n    //         description: \"Please verify your account.\",\n    //         status: \"success\",\n    //         duration: 9000,\n    //         isClosable: true,\n    //     });\n    //     dispatch(resetErrorMsg());\n    // }\n  }, []);\n\n  const [country, setCountry] = useState<string>(\"United States of America\");\n\n  const getGeoInfo = () => {\n    axios\n      .get(\"https://ipapi.co/json/\")\n      .then((response) => {\n        let data = response.data;\n        setCountry(data.country_name);\n        // alert(JSON.stringify(data.country_name));\n      })\n      .catch((error: any | unknown) => {\n        console.log(error);\n      });\n  };\n\n  const onSubmit = async ({ email, password, firstname, lastname }: FormikValues) => {\n    if (!online) return;\n    const { payload, error }: any = await dispatch(\n      registerFn({ firstname, lastname, email, password })\n    );\n    // console.log(payload, \"YYYYYY\")\n    if (error) {\n      console.log(error);\n\n      return setErrorMsg(error?.message);\n    }\n    if (payload) {\n      setCodeJwt(payload);\n      onOpen();\n    }\n  };\n\n  async function SignUpWithGoogle() {\n    try {\n      setGoogleLoading(true);\n      // const { data }: any = await axios(config);\n      // console.log(data,\"hhhhhhhh\")\n      // if (data) {\n      //   window.location.replace(data.url);\n      window.location.replace(`${BASE_URL}/user/google`);\n      // }\n    } catch (e: any | unknown) {\n      console.log(e, \"err google\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n\n  async function SignUpWithTwitter() {\n    try {\n      // setGoogleLoading(true);\n      window.location.replace(`${BASE_URL}/users/twitter`);\n\n      // const { data }: any = await axios(config);\n      // //   console.log(data, \"hhhhhhhh\");\n      // if (data) {\n      //   window.location.replace(data.url);\n      // }\n    } catch (e: any | unknown) {\n      console.log(e, \"err twitter\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n\n  async function SignUpWithFacebook() {\n    try {\n      // setGoogleLoading(true);\n      window.location.replace(`${BASE_URL}/users/facebook`);\n\n      // const { data }: any = await axios(config);\n      // //   console.log(data, \"hhhhhhhh\");\n      // if (data) {\n      //   window.location.replace(data.url);\n      // }\n    } catch (e: any | unknown) {\n      console.log(e, \"err twitter\");\n    } finally {\n      setGoogleLoading(false);\n    }\n  }\n  return (\n    <>\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        <Flex pos={\"absolute\"}>\n          <TopIconBar pos={\"fixed\"} />\n        </Flex>\n      </Suspense>\n      <Flex {...root}>\n        <Flex {...boxLeft}>\n          <Image src={Images_Icons.AuthImage} alt=\"Me Protocol\" {...leftImg} />\n        </Flex>\n\n        <Flex {...boxRegister} overflowX=\"hidden\">\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              confirm: \"\",\n              firstname: \"\",\n              lastname: \"\",\n            }}\n            validationSchema={RegisterValidationSchema}\n            onSubmit={onSubmit}\n          >\n            {(formik) => (\n              <VStack\n                as={\"form\"}\n                {...registerColumn}\n                onChange={() => dispatch(resetErrorMsg())}\n                //@ts-ignore\n                onSubmit={formik.handleSubmit}\n              >\n                <Text {...head}>Let’s get started.</Text>\n                <Flex w={\"100%\"} justify={\"space-between\"}>\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    <MeProtocolButton\n                      isLoading={googleLoading}\n                      name={\"Sign up with Google\"}\n                      onClick={SignUpWithGoogle}\n                      rest={{ w: \"100%\" }}\n                    />\n                  </Suspense>\n                  {/* <Flex w={\"28%\"} justify={\"space-between\"}>\n                    <Center\n                      as={Button}\n                      bg={\"#F6F6F6\"}\n                      h={\"45px\"}\n                      w={\"48%\"}\n                      borderRadius={\"25px\"}\n                      onClick={SignUpWithFacebook}\n                      _hover={{ bg: \"black\", color: \"light\" }}\n                      role=\"group\"\n                    >\n                      <Icon\n                        color={\"#999999\"}\n                        w={\"20px\"}\n                        h={\"20px\"}\n                        as={FaFacebookSquare}\n                        _groupHover={{ color: \"light\" }}\n                      />\n                    </Center>\n\n                    <Center\n                      as={Button}\n                      bg={\"#F6F6F6\"}\n                      h={\"45px\"}\n                      w={\"48%\"}\n                      borderRadius={\"25px\"}\n                      onClick={SignUpWithTwitter}\n                      _hover={{ bg: \"black\", color: \"light\" }}\n                      role=\"group\"\n                    >\n                      <Icon\n                        color={\"#999999\"}\n                        w={\"20px\"}\n                        h={\"20px\"}\n                        as={FaTwitter}\n                        _groupHover={{ color: \"light\" }}\n                      />\n                    </Center>\n                  </Flex> */}\n                </Flex>\n                <Flex align={\"center\"} w={\"100%\"} justify={\"space-between\"}>\n                  <Divider w={\"45%\"} color={\"#ECECEC\"} />\n                  <Text color={\"#999999\"} fontSize={{ base: \"12px\", md: \"20px\" }}>\n                    or\n                  </Text>\n                  <Divider w={\"45%\"} color={\"#ECECEC\"} />\n                </Flex>\n                <Text {...desc}>Enter a few details to join the ME community</Text>\n                <Flex\n                  flexDir={{ base: \"column\", md: \"row\" }}\n                  justifyContent={\"space-between\"}\n                  w={\"100%\"}\n                  // align={\"center\"}\n                >\n                  <Flex w={{ base: \"100%\", md: \"49%\" }}>\n                    <Suspense fallback={<Spinner size=\"sm\" />}>\n                      <MeProtocolInput name={\"firstname\"} placeholder={\"First Name\"} />\n                    </Suspense>\n                  </Flex>\n                  <Flex w={{ base: \"100%\", md: \"49%\" }}>\n                    <Suspense fallback={<Spinner size=\"sm\" />}>\n                      <MeProtocolInput name={\"lastname\"} placeholder={\"Last Name\"} />\n                    </Suspense>\n                  </Flex>\n                </Flex>\n\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  <MeProtocolInput name={\"email\"} type={\"email\"} placeholder={\"your@email.com\"} />\n                  {errorMsg && (\n                    <Text fontSize={\"12px\"} color={\"red\"}>\n                      {errorMsg}\n                    </Text>\n                  )}\n                </Suspense>\n\n                <Heading {...basedText}>Get yourself a password.</Heading>\n                <Text {...desc}>\n                  Passwords must include a symbol or number and have at least 8 characters.\n                </Text>\n\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  <MeProtocolInput\n                    name={\"password\"}\n                    type={show ? \"text\" : \"password\"}\n                    placeholder={\"Password\"}\n                  />\n                  <MeProtocolInput\n                    name={\"confirm\"}\n                    type={show ? \"text\" : \"password\"}\n                    placeholder={\"Confirm Password\"}\n                  />\n                </Suspense>\n                <Text\n                  as={Button}\n                  onClick={handleClick}\n                  alignSelf={\"flex-end\"}\n                  {...basedText}\n                  pt={\"0px\"}\n                  bg={\"transparent\"}\n                  _hover={{ bg: \"transparent\" }}\n                >\n                  {!show ? \"Show\" : \"Hide\"}\n                </Text>\n\n                <Text {...basedText}>Where are you based?</Text>\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  <CountrySelector\n                    value={country}\n                    onChange={(e: any) => {\n                      setCountry(e.target.value);\n                    }}\n                    {...countrySelect}\n                  />\n                </Suspense>\n                <Flex {...checkBoxRoot}>\n                  <Checkbox w={\"100%\"} borderColor={\"black\"} spacing={\"1rem\"}>\n                    Get exclusive offers, trends and deals\n                  </Checkbox>\n                </Flex>\n\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  <MeProtocolFormikButton isLoading={registerLoading} name={\"Create Account\"} />\n                </Suspense>\n                <Text {...desc} pt={\"10px\"}>\n                  By signing up you accept to our{\" \"}\n                  <Link href=\"https://google.com\" textDecoration={\"underline\"}>\n                    {\" \"}\n                    Terms and Services.\n                  </Link>\n                </Text>\n\n                <Text {...desc} pt={\"10px\"}>\n                  Already have an account?\n                  <Link\n                    onClick={() => {\n                      navigate(`${GLOBAL_PREFIX}/login`, { replace: true });\n                    }}\n                    textDecoration={\"underline\"}\n                  >\n                    {\" \"}\n                    Login here.\n                  </Link>\n                </Text>\n\n                <Box bg=\"transparent\" pt=\"40px\" w=\"100%\" />\n              </VStack>\n            )}\n          </Formik>\n        </Flex>\n      </Flex>\n      <OTPModal isOpen={isOpen} onClose={onClose} token={codeJwt} />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["TopIconBar","lazy","MeProtocolButton","MeProtocolFormikButton","MeProtocolInput","useLocation","navigate","useNavigate","online","useOnline","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","googleLoading","_useSelector","useSelector","state","authReducer","isLoading","token","error","_useState3","userReducer","user_data","_useState4","errorMsg","setErrorMsg","_useStyles","useStyles","root","boxLogin","boxLeft","loginColumn","leftImg","head","desc","useEffect","resetErrorMsg","concat","GLOBAL_PREFIX","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","actions","email","password","_yield$dispatch","payload","_userPayload$customer","_yield$dispatch2","userPayload","wrap","_context","prev","next","abrupt","loginFn","identifier","sent","message","getUserInfo","customer","walletAddress","stop","_x","_x2","apply","arguments","_jsx","_Fragment","children","_jsxs","Container","Suspense","fallback","Spinner","size","pos","Flex","_objectSpread","Formik","initialValues","validationSchema","LoginValidationSchema","formik","VStack","as","handleSubmit","onChange","Heading","pb","w","justify","name","onClick","window","location","replace","BASE_URL","rest","align","Divider","color","Text","fontSize","base","md","type","placeholder","Link","py","textDecoration","pt","h","bg","display","overflow","boxRegister","px","justifySelf","registerColumn","basedText","checkBoxRoot","countrySelect","borderColor","borderWidth","isOpen","onClose","modalContentStyle","modalBodyStyle","_objectWithoutProperties","_excluded","Modal","isCentered","blockScrollOnMount","scrollBehavior","motionPreset","ModalOverlay","backdropFilter","backdropBlur","ModalContent","borderRadius","ModalBody","countFrom","onCountdownComplete","countdown","setCountdown","isActive","setIsActive","interval","setInterval","clearInterval","HStack","opacity","time","minutes","Math","floor","seconds","toString","padStart","formatTime","resendActive","setResendActive","loading","setLoading","_useState5","_useState6","setCountFrom","_useState7","_useState8","toast","useToast","_VERIFY_CODE","code","id","verifyEmailFn","position","title","description","status","duration","isClosable","t0","finish","_RESEND_CODE","_callee2","_context2","resendCodeFn","MeProtocolToast","NewModalComponent","closeOnOverlayClick","flexDir","alignSelf","mb","IoCloseCircle","PinInput","onComplete","e","VERIFY_CODE","otp","map","PinInputField","nanoid","mt","Box","RESEND_CODE","NewCountdownTimer","CountrySelector","show","setShow","setGoogleLoading","_useDisclosure","useDisclosure","onOpen","codeJwt","setCodeJwt","handleClick","registerLoading","resetLoaders","getGeoInfo","_useState9","_useState10","country","setCountry","axios","then","response","data","country_name","catch","console","log","firstname","lastname","registerFn","SignUpWithGoogle","_SignUpWithGoogle","Image","src","Images_Icons","alt","overflowX","confirm","RegisterValidationSchema","justifyContent","Button","_hover","value","target","Checkbox","spacing","href","OTPModal"],"sourceRoot":""}