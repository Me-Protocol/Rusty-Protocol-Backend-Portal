{"version":3,"file":"static/js/9146.7902af09.chunk.js","mappings":"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","sources":["components/SkeletonLoader/index.tsx","assets/iconsSvg/iconsSvgNew.tsx","../node_modules/react-sticky-box/dist/index.js","assets/icons/forYou.svg","pages/DashboardModule/NewDashboard/Dashboard.tsx"],"sourcesContent":["import {\n  Flex,\n  Skeleton,\n  HStack,\n  Heading,\n  Box,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst SkeletonLoader: FC = (): JSX.Element => {\n  const { root } = useStyles();\n  return (\n    <SimpleGrid\n      columns={[2, 2, 3, 4, 4]}\n      w={\"100%\"}\n      spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n      spacingY={\"5px\"}\n    >\n      {[1, 2, 3, 4]?.map(() => (\n        <Flex {...root} flexDir={\"column\"} key={nanoid()}>\n          <Box w={\"280px\"}>\n            <Skeleton\n              borderRadius={{ base: \"8px\", md: \"16px\" }}\n              isLoaded={false}\n            >\n              <Flex\n                w={\"280px\"}\n                h={\"280px\"}\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                flexDir={\"column\"}\n                bg={\"#99999951\"}\n                overflow=\"hidden\"\n                className=\"card-hover\"\n                as=\"button\"\n              >\n                {/* OVERLAY */}\n                <Box\n                  pos={\"absolute\"}\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  w={\"280px\"}\n                  h={\"280px\"}\n                  bg={\"#99999951\"}\n                />\n              </Flex>\n            </Skeleton>\n            <Flex flexDir={\"column\"} mt={\"2%\"}>\n              <Flex w={\"280px\"} justify={\"space-between\"} align={\"center\"}>\n                <Skeleton\n                  borderRadius={{ base: \"8px\", md: \"16px\" }}\n                  isLoaded={false}\n                >\n                  <Text\n                    fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}\n                    noOfLines={1}\n                  >\n                    productTitle\n                  </Text>\n                </Skeleton>\n              </Flex>\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <Text\n                  fontSize={[\"8px\", \"8px\", \"12px\", \"14px\", \"14px\"]}\n                  opacity={0.7}\n                  noOfLines={1}\n                >\n                  points\n                </Text>\n              </Skeleton>\n\n              <Skeleton\n                borderRadius={{ base: \"8px\", md: \"16px\" }}\n                isLoaded={false}\n              >\n                <HStack>\n                  <Heading fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    points\n                  </Heading>\n                  <Text fontSize={[\"10px\", \"10px\", \"14px\", \"16px\", \"16px\"]}>\n                    price\n                  </Text>\n                </HStack>\n              </Skeleton>\n            </Flex>\n          </Box>\n        </Flex>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default SkeletonLoader;\n\nconst useStyles = () => {\n  return {\n    root: {\n      //   w: \"90vw\",\n      pt: \"2vh\",\n      align: \"center\",\n      pb: \"2%\",\n      borderRadius: \"16px\",\n    },\n  };\n};\n","import { useBreakpointValue } from \"@chakra-ui/react\";\nimport React, { lazy, FC } from \"react\";\n\ninterface Icons {\n  props?: any;\n  color?: any;\n  w?: any;\n  h?: any;\n}\n\nexport const DashIcon1: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={46}\n      height={46}\n      viewBox=\"0 0 46 46\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.283 14.167V6.879L38.243.2 45.8 5.298l-3.688 12.83-9.395 4.87v-3.63l-19.435-5.201zM41.173 9a2.379 2.379 0 11-4.757 0 2.379 2.379 0 014.757 0z\"\n        fill={color || \"currentColor\"}\n      />\n      {/* <path\n        d=\"M32.718 23.006v-3.63l-19.435-5.201v18.902l19.435-10.071z\"\n        fill=\"#FFF\"\n      /> */}\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.282 14.166v18.902l19.435-10.071v22.56L3.887 30.615.2 17.785l7.558-5.098 5.525 1.479zm-8.455 7.322a2.379 2.379 0 104.757 0 2.379 2.379 0 00-4.757 0z\"\n        fill={color || \"currentColor\"}\n      />\n    </svg>\n  );\n};\n\nexport const DashIcon2: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"35px\"}\n      height={h || \"35px\"}\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M27.442 1.384v4.362L7.762 12.65v17.465L.91 34.122v-23.43l26.533-9.308zM13.636 26.68l-5.874 3.434v5.965l5.874-3.434v6.37l25.455-16.233V6.14l-4.796 1.78V3.341l-6.853 2.404v4.717l-13.806 5.123v11.095zm13.806-16.218v8.146l-4.921 2.877-6.099 3.566-2.786 1.629v5.965l9.64-5.636 6.098-3.566 4.921-2.877V7.919l-6.853 2.544z\"\n        fill={color || \"currentColor\"}\n        // fill={\"currentColor\"}\n      />\n    </svg>\n  );\n};\nexport const DashIcon3: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"35px\"}\n      height={h || \"35px\"}\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M29.683 21.446V7.87l-6.465-3.374 2.213-2.679L38.774 8.78v13.575l-5.337 3.12-6.613 3.867L10 39.178v-6.224l7.733-4.521v-7.8l6.497-3.132.116 7.065 5.337-3.12zM10 32.954L.91 38.269V19.59L16.34.91l6.878 3.588L10 20.498v12.456z\"\n        fill={color || \"currentColor\"}\n        // fill={\"currentColor\"}\n      />\n    </svg>\n  );\n};\nexport const DashIcon4: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"35px\"}\n      height={h || \"35px\"}\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M31.573 12.488v8.382L9.65 33.406l.575-1.915a4.438 4.438 0 014.042-3.157 4.438 4.438 0 003.417-1.872l2.532-3.584a8.436 8.436 0 014.578-3.246 8.436 8.436 0 005.083-4.054l1.696-3.09zm0 0V.91l-8.742 16.108-6.249-.967-5.5 10.534L5.779 25 2.593 37.442l7.057-4.036-1.707 5.684 28.98-16.572V2.741l-5.35 9.747z\"\n        fill={color || \"currentColor\"}\n        // fill={\"currentColor\"}\n      />\n      <path\n        d=\"M2.593 18.767v-3.039l13.183-5.634v2.63L2.593 18.767zM2.593 12.572V9.534l19.916-7.786v2.63L2.593 12.573z\"\n        // fill={color || \"#000\"}\n        fill={\"currentColor\"}\n      />\n    </svg>\n  );\n};\nexport const DashIcon5: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={48}\n      height={40}\n      viewBox=\"0 0 48 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.895 10.652V2.75L.195 22.24l7.356 2.691v13.833l33.178-16.652V1.99l-7.59 3.81V.45L12.895 10.652zm20.244-4.853L7.551 18.642v6.29l5.344 1.954v-6.59l20.244-10.123V5.799zm-5.636 11.982c0 2.107-1.479 4.669-3.303 5.722-1.825 1.053-3.304.2-3.304-1.907s1.479-4.669 3.303-5.722c1.825-1.053 3.304-.2 3.304 1.907z\"\n        fill=\"#fff\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.895 2.75v7.902L33.139.45v5.393L9.824 17.546v8.218L.195 22.24l12.7-19.49z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M15.257 34.887l-.01 4.663 20.51-9.962v7.496l12.048-18.49-7.083-2.59v6.09L15.257 34.886z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M33.141 5.8L7.553 18.643v6.29l5.343 1.954v-6.591l20.245-10.122V5.8zM40.729 16.018v6.083L15.257 34.887v-4.066L35.497 20.7v-6.596l5.232 1.914z\"\n        fill=\"#000\"\n      />\n    </svg>\n  );\n};\nexport const DashIcon6: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"35px\"}\n      height={h || \"35px\"}\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.09 7.52v28.226l6.937-9.975v13.32l8.954-10.923 6.566 3.872V5.163L24.61 7.722V.909L9.09 7.52zm15.52.202l-8.583 3.166V25.77l2.018-2.902 6.566 4.008V7.722z\"\n        fill={color || \"currentColor\"}\n        // fill={\"currentColor\"}\n      />\n    </svg>\n  );\n};\n\nexport const DashEarnIcon: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"35px\"}\n      height={h || \"35px\"}\n      viewBox=\"0 0 378 229\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M101.081 81.496V18.942L0.543945 173.236L58.7763 194.541V304.047L321.435 172.222V12.9245L261.351 43.0802V0.732422L101.081 81.496ZM261.351 43.0802L58.7763 144.75V194.541L101.081 210.019V157.838L261.351 77.7028V43.0802ZM216.73 137.937C216.73 154.615 205.021 174.896 190.577 183.235C176.133 191.574 164.424 184.814 164.424 168.135C164.424 151.457 176.133 131.176 190.577 122.837C205.021 114.498 216.73 121.258 216.73 137.937Z\"\n        fill=\"#00FFFF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M101.081 18.942V81.496L261.351 0.732422V43.4294L76.7715 136.067V201.125L0.543945 173.236L101.081 18.942Z\"\n        fill=\"#FF00FF\"\n      />\n      <path\n        d=\"M119.78 273.355L119.695 310.267L282.079 231.409V290.753L377.456 144.377L321.382 123.861V172.073L119.78 273.355Z\"\n        fill=\"#FF00FF\"\n      />\n      <path\n        d=\"M261.364 43.0874L58.79 144.757V194.548L101.094 210.026V157.845L261.364 77.7098V43.0874Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M321.433 123.979V172.134L119.785 273.36V241.166L280.014 161.042V108.822L321.433 123.979Z\"\n        fill=\"black\"\n      />\n    </svg>\n  );\n};\n\nexport const TrendingSvg: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"45px\"}\n      height={h || \"45px\"}\n      viewBox=\"0 0 64 64\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M28.1083 3.31648C30.3508 1.4054 33.6492 1.4054 35.8917 3.31649L40.3184 7.08889C41.2794 7.90783 42.4742 8.40275 43.7328 8.50319L49.5305 8.96584C52.4675 9.20022 54.7998 11.5325 55.0342 14.4695L55.4968 20.2672C55.5972 21.5258 56.0922 22.7206 56.9111 23.6816L60.6835 28.1083C62.5946 30.3508 62.5946 33.6492 60.6835 35.8917L56.9111 40.3184C56.0922 41.2794 55.5972 42.4742 55.4968 43.7328L55.0342 49.5305C54.7998 52.4675 52.4675 54.7998 49.5305 55.0342L43.7328 55.4968C42.4742 55.5972 41.2794 56.0922 40.3184 56.9111L35.8917 60.6835C33.6492 62.5946 30.3508 62.5946 28.1083 60.6835L23.6816 56.9111C22.7206 56.0922 21.5258 55.5972 20.2672 55.4968L14.4695 55.0342C11.5325 54.7998 9.20022 52.4675 8.96584 49.5305L8.50319 43.7328C8.40275 42.4742 7.90783 41.2794 7.08889 40.3184L3.31648 35.8917C1.4054 33.6492 1.4054 30.3508 3.31649 28.1083L7.08889 23.6816C7.90783 22.7206 8.40275 21.5258 8.50319 20.2672L8.96584 14.4695C9.20022 11.5325 11.5325 9.20022 14.4695 8.96584L20.2672 8.50319C21.5258 8.40275 22.7206 7.90783 23.6816 7.08889L28.1083 3.31648Z\"\n        fill=\"#00FFFF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M44.1173 55.4661L43.7329 55.4968C42.4743 55.5972 41.2795 56.0922 40.3185 56.9111L35.8918 60.6835C33.6493 62.5946 30.351 62.5946 28.1084 60.6835L23.6817 56.9111C22.7207 56.0922 21.5259 55.5972 20.2673 55.4968L14.4697 55.0342C11.5326 54.7998 9.20035 52.4675 8.96597 49.5305L8.50332 43.7328C8.40288 42.4742 7.90796 41.2794 7.08902 40.3184L3.31661 35.8917C1.40553 33.6492 1.40553 30.3508 3.31661 28.1083L7.08902 23.6816C7.27311 23.4656 7.44084 23.2377 7.59138 23H36.1173C40.5356 23 44.1173 26.5817 44.1173 31V55.4661Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M32.5 47.0938C41.732 47.0938 46 41.8376 46 32.75C46 23.6642 32.5 14 32.5 14C32.5 14 19 23.6624 19 32.75C19 41.8358 23.268 47.0938 32.5 47.0938Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M23 42.9601C23 47.8222 27.3587 49 32.74 49C41.8933 49 44.9151 43.9667 38.8276 33.9002C30.305 42.9601 32.6449 26.5758 31.9908 27.0084C28.2446 29.4864 23 36.5537 23 42.9601Z\"\n        fill=\"black\"\n      />\n    </svg>\n  );\n};\nexport const NewSvg: FC<Icons> = ({ props, w, h, color }) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={w || \"45px\"}\n      height={h || \"45px\"}\n      viewBox=\"0 0 64 64\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M28.1083 3.31648C30.3508 1.4054 33.6492 1.4054 35.8917 3.31649L40.3184 7.08889C41.2794 7.90783 42.4742 8.40275 43.7328 8.50319L49.5305 8.96584C52.4675 9.20022 54.7998 11.5325 55.0342 14.4695L55.4968 20.2672C55.5972 21.5258 56.0922 22.7206 56.9111 23.6816L60.6835 28.1083C62.5946 30.3508 62.5946 33.6492 60.6835 35.8917L56.9111 40.3184C56.0922 41.2794 55.5972 42.4742 55.4968 43.7328L55.0342 49.5305C54.7998 52.4675 52.4675 54.7998 49.5305 55.0342L43.7328 55.4968C42.4742 55.5972 41.2794 56.0922 40.3184 56.9111L35.8917 60.6835C33.6492 62.5946 30.3508 62.5946 28.1083 60.6835L23.6816 56.9111C22.7206 56.0922 21.5258 55.5972 20.2672 55.4968L14.4695 55.0342C11.5325 54.7998 9.20022 52.4675 8.96584 49.5305L8.50319 43.7328C8.40275 42.4742 7.90783 41.2794 7.08889 40.3184L3.31648 35.8917C1.4054 33.6492 1.4054 30.3508 3.31649 28.1083L7.08889 23.6816C7.90783 22.7206 8.40275 21.5258 8.50319 20.2672L8.96584 14.4695C9.20022 11.5325 11.5325 9.20022 14.4695 8.96584L20.2672 8.50319C21.5258 8.40275 22.7206 7.90783 23.6816 7.08889L28.1083 3.31648Z\"\n        fill=\"#FF00FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M44.1173 55.4661L43.7329 55.4968C42.4743 55.5972 41.2795 56.0922 40.3185 56.9111L35.8918 60.6835C33.6493 62.5946 30.351 62.5946 28.1084 60.6835L23.6817 56.9111C22.7207 56.0922 21.5259 55.5972 20.2673 55.4968L14.4697 55.0342C11.5326 54.7998 9.20035 52.4675 8.96597 49.5305L8.50332 43.7328C8.40288 42.4742 7.90796 41.2794 7.08902 40.3184L3.31661 35.8917C1.40553 33.6492 1.40553 30.3508 3.31661 28.1083L7.08902 23.6816C7.27311 23.4656 7.44084 23.2377 7.59138 23H36.1173C40.5356 23 44.1173 26.5817 44.1173 31V55.4661Z\"\n        fill=\"black\"\n      />\n      <path d=\"M34.0001 17L19 35H32.5L31 47.0001L46 29H32.5L34.0001 17Z\" fill=\"white\" />\n    </svg>\n  );\n};\nexport const TrendingIconSvg: FC = ({ props }: any) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={\"25%\"}\n      height={\"10%\"}\n      viewBox=\"0 0 100 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <rect width={100} height={30} rx={15} fill=\"#000\" fillOpacity={0.3} />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M28.543 9H23.7l2.693 1.194-5.003 5.63-4.91-3.06L10 21l7.19-6.06 3.623 3.707 7.89-6.204L30 15.118V9h-1.457z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M41.714 10.56v1.12h-3.122v8.82h-1.33v-8.82H34.14v-1.12h7.574zm1.734 4.536c.177-.523.448-.947.812-1.274.373-.327.812-.49 1.316-.49.112 0 .196.005.252.014v1.162h-.056c-.663 0-1.176.182-1.54.546a2.071 2.071 0 00-.476.77 3.174 3.174 0 00-.196.798c-.019.224-.028.518-.028.882V20.5h-1.19v-7h1.106v1.596zm9.319 1.414v.84h-4.97c.009.681.2 1.232.574 1.652.382.41.886.616 1.512.616.924 0 1.544-.443 1.862-1.33l.98.434c-.495 1.297-1.47 1.946-2.926 1.946-1.008 0-1.792-.308-2.352-.924-.56-.625-.84-1.512-.84-2.66 0-1.176.28-2.095.84-2.758.56-.663 1.339-.994 2.338-.994.952 0 1.684.27 2.198.812.522.541.784 1.33.784 2.366zm-1.204-.126v-.154c0-.635-.16-1.12-.476-1.456-.308-.336-.752-.504-1.33-.504-.607 0-1.083.187-1.428.56-.336.373-.514.891-.532 1.554h3.766zm3.166 4.116v-7h1.12v1.386c.457-1.055 1.236-1.582 2.338-1.582 1.558 0 2.338.947 2.338 2.842V20.5h-1.19v-4.284c0-1.241-.514-1.862-1.54-1.862-.579 0-1.036.224-1.372.672-.336.439-.504 1.045-.504 1.82V20.5h-1.19zm10.32.168c-.85 0-1.536-.336-2.059-1.008-.523-.672-.784-1.559-.784-2.66 0-1.073.275-1.95.826-2.632.56-.69 1.279-1.036 2.156-1.036.933 0 1.62.401 2.058 1.204V10.35h1.19V20.5h-1.12v-1.302c-.439.98-1.195 1.47-2.268 1.47zm.321-1.05c.579 0 1.04-.22 1.386-.658.346-.448.518-1.045.518-1.792v-.322c0-.765-.172-1.367-.518-1.806-.336-.439-.798-.658-1.386-.658-.597 0-1.064.233-1.4.7-.336.457-.504 1.097-.504 1.918s.168 1.465.504 1.932c.336.457.803.686 1.4.686zm5.572-7.42V10.7H72.3v1.498h-1.358zm.084 8.302v-7h1.19v7h-1.19zm3.705 0v-7h1.12v1.386c.457-1.055 1.236-1.582 2.338-1.582 1.558 0 2.338.947 2.338 2.842V20.5h-1.19v-4.284c0-1.241-.514-1.862-1.54-1.862-.579 0-1.036.224-1.372.672-.336.439-.504 1.045-.504 1.82V20.5h-1.19zm13.483-7.112c-.532 0-.882.22-1.05.658.43.43.644.98.644 1.652 0 .7-.233 1.274-.7 1.722-.467.448-1.097.672-1.89.672a3.08 3.08 0 01-1.344-.294c-.336.14-.504.369-.504.686 0 .476.387.714 1.162.714h1.708c.784 0 1.377.173 1.778.518.401.336.602.821.602 1.456 0 .69-.285 1.232-.854 1.624-.57.401-1.442.602-2.618.602-2.1 0-3.15-.64-3.15-1.918 0-.336.098-.635.294-.896.196-.252.476-.439.84-.56-.541-.243-.812-.649-.812-1.218 0-.681.332-1.148.994-1.4-.457-.439-.686-1.008-.686-1.708 0-.69.234-1.255.7-1.694.467-.448 1.097-.672 1.89-.672.495 0 .952.098 1.372.294.252-.85.807-1.274 1.666-1.274.168 0 .322.019.462.056v1.036a2.597 2.597 0 00-.504-.056zm-4.06 3.374c.27.28.626.42 1.064.42.439 0 .793-.135 1.064-.406.27-.28.406-.635.406-1.064 0-.43-.135-.78-.406-1.05-.27-.28-.625-.42-1.064-.42-.448 0-.807.135-1.078.406-.261.27-.392.62-.392 1.05 0 .43.135.784.406 1.064zm1.82 3.486H84.49a8 8 0 01-.588-.028c-.495.224-.742.574-.742 1.05 0 .765.71 1.148 2.128 1.148 1.428 0 2.142-.387 2.142-1.162 0-.672-.485-1.008-1.456-1.008z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n};\n\nexport const NewIconSvg: FC = ({ props }: any) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={\"20%\"}\n      height={\"10%\"}\n      viewBox=\"0 0 73 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <rect width={73} height={30} rx={15} fill=\"#000\" fillOpacity={0.3} />\n      <path\n        d=\"M17.595 19.694L10 25l5.398-7.41-4.495-1.251 5.07-1.19-3.719-5.062 5.34 3.385 1.555-4.697 1.319 4.392L30 5l-7.133 10.15 4.327 1.189-5.138 1.25 3.583 5.124-5.171-3.416-1.319 4.819-1.554-4.422zM35.4 20.5v-9.94h1.61l4.214 7.238c.28.485.485.91.616 1.274h.028a16.842 16.842 0 01-.042-1.316V10.56h1.19v9.94h-1.61l-4.214-7.238c-.299-.523-.504-.947-.616-1.274h-.028c.028.355.042.793.042 1.316V20.5H35.4zm15.808-3.99v.84h-4.97c.01.681.2 1.232.574 1.652.383.41.887.616 1.512.616.924 0 1.545-.443 1.862-1.33l.98.434c-.495 1.297-1.47 1.946-2.926 1.946-1.008 0-1.792-.308-2.352-.924-.56-.625-.84-1.512-.84-2.66 0-1.176.28-2.095.84-2.758.56-.663 1.34-.994 2.338-.994.952 0 1.685.27 2.198.812.523.541.784 1.33.784 2.366zm-1.204-.126v-.154c0-.635-.159-1.12-.476-1.456-.308-.336-.751-.504-1.33-.504-.607 0-1.083.187-1.428.56-.336.373-.513.891-.532 1.554h3.766zm4.162 4.116l-1.974-7h1.232l1.26 4.998c.065.28.117.555.154.826h.028c0-.019.06-.294.182-.826l1.274-4.998h1.288l1.274 4.998c.121.532.182.807.182.826h.028c.037-.27.088-.546.154-.826l1.26-4.998h1.232l-1.974 7h-1.302l-1.33-5.04a5.505 5.505 0 01-.154-.784h-.028c-.028.243-.08.504-.154.784l-1.33 5.04h-1.302z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n};\nexport const ReceiveIconSvg: FC = ({ props }: any) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.038 18.148a.75.75 0 00.752-.748L12.826 4l.002-.75-1.5-.004-.002.75-.036 13.4a.75.75 0 00.748.752z\"\n        fill=\"#000\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.312 19.752h15.5v-1.5h-15.5v1.5zm8.279-.22a.75.75 0 01-1.06 0l-7-7-.531-.53 1.06-1.06.531.53 6.47 6.47 6.47-6.47.53-.53 1.06 1.06-.53.53-7 7z\"\n        fill=\"#000\"\n      />\n    </svg>\n  );\n};\nexport const SendIconSvg: FC = ({ props }: any) => {\n  const svgWidth = useBreakpointValue(\n    {\n      base: \"170px\",\n      sm: \"240px\",\n      md: \"320px\",\n      lg: \"320px\",\n      xl: \"380px\",\n      \"2xl\": \"492px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  const svgHeight = useBreakpointValue(\n    {\n      base: \"150px\",\n      sm: \"230px\",\n      md: \"470px\",\n      lg: \"470px\",\n      xl: \"500px\",\n      \"2xl\": \"550px\",\n    },\n    { fallback: \"md\" }\n  );\n\n  return (\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 4.25a.75.75 0 01.75.75v14.15h-1.5V5a.75.75 0 01.75-.75zm-7.75 13.4h15.5v1.5H4.25v-1.5z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M5 12l7-7 7 7\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n","// src/index.jsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nvar getScrollParent = (node) => {\n  let parent = node;\n  while (parent = parent.parentElement) {\n    const overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body)\n      return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\")\n      return parent;\n  }\n  return window;\n};\nvar offsetTill = (node, target) => {\n  let current = node;\n  let offset = 0;\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n  return offset;\n};\nvar getParentNode = (node) => {\n  let currentParent = node.parentNode;\n  while (currentParent) {\n    const style = getComputedStyle(currentParent, null);\n    if (style.getPropertyValue(\"display\") !== \"contents\")\n      break;\n    currentParent = currentParent.parentNode;\n  }\n  return currentParent || window;\n};\nvar stickyProp = null;\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\"))\n    stickyProp = \"sticky\";\n  else if (CSS.supports(\"position\", \"-webkit-sticky\"))\n    stickyProp = \"-webkit-sticky\";\n}\nvar passiveArg = false;\ntry {\n  opts = Object.defineProperty({}, \"passive\", {\n    get() {\n      passiveArg = { passive: true };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {\n}\nvar opts;\nvar registerNode = (node, { offsetTop, offsetBottom, bottom }) => {\n  const scrollPane = getScrollParent(node);\n  let latestScrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n  const unsubs = [];\n  let mode, offset, nodeHeight, naturalTop, parentHeight, scrollPaneOffset, viewPortHeight;\n  const getCurrentOffset = () => {\n    if (mode === \"relative\")\n      return offset;\n    if (mode === \"stickyTop\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY - naturalTop + offsetTop);\n    }\n    if (mode === \"stickyBottom\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY + viewPortHeight - (naturalTop + nodeHeight + offsetBottom));\n    }\n  };\n  const changeToStickyBottomIfBoxTooLow = (scrollY) => {\n    if (scrollY + scrollPaneOffset + viewPortHeight >= naturalTop + nodeHeight + offset + offsetBottom) {\n      changeMode(\"stickyBottom\");\n    }\n  };\n  const changeMode = (newMode) => {\n    mode = newMode;\n    if (newMode === \"relative\") {\n      node.style.position = \"relative\";\n      if (bottom) {\n        const nextBottom = Math.max(0, parentHeight - nodeHeight - offset);\n        node.style.bottom = `${nextBottom}px`;\n      } else {\n        node.style.top = `${offset}px`;\n      }\n    } else {\n      node.style.position = stickyProp;\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          node.style.bottom = `${offsetBottom}px`;\n        } else {\n          node.style.top = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        }\n      } else {\n        if (bottom) {\n          node.style.bottom = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        } else {\n          node.style.top = `${offsetTop}px`;\n        }\n      }\n    }\n    offset = getCurrentOffset();\n  };\n  const initial = () => {\n    if (bottom) {\n      if (mode !== \"stickyBottom\")\n        changeMode(\"stickyBottom\");\n    } else {\n      if (mode !== \"stickyTop\")\n        changeMode(\"stickyTop\");\n    }\n  };\n  const addListener = (element, event, handler, passive) => {\n    element.addEventListener(event, handler, passive);\n    unsubs.push(() => element.removeEventListener(event, handler));\n  };\n  const handleScroll = () => {\n    const scrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n    if (scrollY === latestScrollY)\n      return;\n    if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n      initial();\n      latestScrollY = scrollY;\n      return;\n    }\n    const scrollDelta = scrollY - latestScrollY;\n    offset = getCurrentOffset();\n    if (scrollDelta > 0) {\n      if (mode === \"stickyTop\") {\n        if (scrollY + scrollPaneOffset + offsetTop > naturalTop) {\n          if (scrollY + scrollPaneOffset + viewPortHeight <= naturalTop + nodeHeight + offset + offsetBottom) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyBottom\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        changeToStickyBottomIfBoxTooLow(scrollY);\n      }\n    } else {\n      if (mode === \"stickyBottom\") {\n        if (scrollPaneOffset + scrollY + viewPortHeight < naturalTop + parentHeight + offsetBottom) {\n          if (scrollPaneOffset + scrollY + offsetTop >= naturalTop + offset) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyTop\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        if (scrollPaneOffset + scrollY + offsetTop < naturalTop + offset) {\n          changeMode(\"stickyTop\");\n        }\n      }\n    }\n    latestScrollY = scrollY;\n  };\n  const handleWindowResize = () => {\n    viewPortHeight = window.innerHeight;\n    scrollPaneOffset = 0;\n    handleScroll();\n  };\n  const handleScrollPaneResize = () => {\n    viewPortHeight = scrollPane.offsetHeight;\n    if (viewPortHeight === 0) {\n      console.warn(`react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:`, scrollPane);\n    }\n    if (scrollPane.firstChild.offsetParent === scrollPane) {\n      scrollPaneOffset = scrollPane.getBoundingClientRect().top;\n    } else {\n      scrollPaneOffset = 0;\n    }\n    handleScroll();\n  };\n  const handleParentNodeResize = () => {\n    const parentNode = getParentNode(node);\n    const computedParentStyle = getComputedStyle(parentNode, null);\n    const parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n    const parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n    const verticalParentPadding = parentPaddingTop + parentPaddingBottom;\n    naturalTop = offsetTill(parentNode, scrollPane) + parentPaddingTop + scrollPaneOffset;\n    const oldParentHeight = parentHeight;\n    parentHeight = parentNode.getBoundingClientRect().height - verticalParentPadding;\n    if (mode === \"relative\") {\n      if (bottom) {\n        changeMode(\"relative\");\n      } else {\n        if (oldParentHeight > parentHeight) {\n          changeToStickyBottomIfBoxTooLow(latestScrollY);\n        }\n      }\n    }\n    if (oldParentHeight !== parentHeight && mode === \"relative\") {\n      latestScrollY = Number.POSITIVE_INFINITY;\n      handleScroll();\n    }\n  };\n  const handleNodeResize = ({ initial: initialArg } = {}) => {\n    const prevHeight = nodeHeight;\n    nodeHeight = node.getBoundingClientRect().height;\n    if (!initialArg && prevHeight !== nodeHeight) {\n      if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n        mode = void 0;\n        initial();\n        return;\n      } else {\n        const diff = prevHeight - nodeHeight;\n        const lowestPossible = parentHeight - nodeHeight;\n        const nextOffset = Math.min(lowestPossible, getCurrentOffset() + (bottom ? diff : 0));\n        offset = Math.max(0, nextOffset);\n        if (!bottom || mode !== \"stickyBottom\")\n          changeMode(\"relative\");\n      }\n    }\n  };\n  const addResizeObserver = (n, handler) => {\n    const ro = new ResizeObserver(handler);\n    ro.observe(n);\n    unsubs.push(() => ro.disconnect());\n  };\n  addListener(scrollPane, \"scroll\", handleScroll, passiveArg);\n  addListener(scrollPane, \"mousewheel\", handleScroll, passiveArg);\n  if (scrollPane === window) {\n    addListener(window, \"resize\", handleWindowResize);\n    handleWindowResize();\n  } else {\n    addResizeObserver(scrollPane, handleScrollPaneResize);\n    handleScrollPaneResize();\n  }\n  addResizeObserver(getParentNode(node), handleParentNodeResize);\n  handleParentNodeResize();\n  addResizeObserver(node, handleNodeResize);\n  handleNodeResize({ initial: true });\n  initial();\n  return () => unsubs.forEach((fn) => fn());\n};\nvar useStickyBox = ({ offsetTop = 0, offsetBottom = 0, bottom = false } = {}) => {\n  const [node, setNode] = useState(null);\n  const argRef = useRef({ offsetTop, offsetBottom, bottom });\n  useEffect(() => {\n    argRef.current = { offsetTop, offsetBottom, bottom };\n  });\n  useEffect(() => {\n    if (!node)\n      return;\n    return registerNode(node, argRef.current);\n  }, [node]);\n  return setNode;\n};\nvar StickyBox = ({ offsetTop, offsetBottom, bottom, children, className, style }) => {\n  const ref = useStickyBox({ offsetTop, offsetBottom, bottom });\n  return /* @__PURE__ */ React.createElement(\"div\", {\n    className,\n    style,\n    ref\n  }, children);\n};\nvar src_default = StickyBox;\nexport {\n  src_default as default,\n  useStickyBox\n};\n","var _rect, _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgForYou(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 34,\n    viewBox: \"0 0 34 34\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 34,\n    height: 34,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.0622 23.8132L2 32L10.573 20.5665L3.43342 18.6373L11.4855 16.8021L5.58065 8.99114L14.0622 14.2142L16.5315 6.96781L18.6251 13.7436L32 2L22.4364 16.8021L29.3076 18.6373L21.1481 20.5665L26.8383 28.4716L18.6251 23.2015L16.5315 30.6361L14.0622 23.8132Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 9V3H9\",\n    stroke: \"black\",\n    strokeWidth: 1.75\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31 25V31H25\",\n    stroke: \"black\",\n    strokeWidth: 1.75\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgForYou);\nexport default __webpack_public_path__ + \"static/media/forYou.6e2b3a523ae8c8c20440f5384e0d05b2.svg\";\nexport { ForwardRef as ReactComponent };","// @flow\nimport {\n  Flex,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n  Spinner,\n  Box,\n  Image,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { lazy, Suspense, useEffect, useState } from \"react\";\nimport { AuthReducerProps, UserReducerProps } from \"../../../interfaces\";\nimport { RootState } from \"../../../redux/store\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  DashIcon1,\n  DashIcon2,\n  DashIcon3,\n  DashIcon4,\n  DashIcon5,\n  DashIcon6,\n} from \"../../../assets/iconsSvg/iconsSvgNew\";\n// import Footer from \"../../../components/Footer\";\nimport { nanoid } from \"nanoid\";\nimport { Dispatch } from \"redux\";\nimport {\n  useGetAllOffersForFiltersQuery,\n  useGetRecentlyViewedOffersQuery,\n  useGetShopsQuery,\n} from \"../../../redux/rtkQuery/api\";\nimport SkeletonLoader from \"../../../components/SkeletonLoader\";\nimport NewDashboardNavBar from \"../../../components/NewDashboardNavBar\";\n// import Container from \"../../../components/Container\";\nimport { useStickyBox } from \"react-sticky-box\";\nimport forYouTodayIcon from \"../../../assets/icons/forYou.svg\";\nimport { GLOBAL_PREFIX } from \"../../../constants\";\n\nconst BrandsSliderCarousel = lazy(() => import(\"../../../components/BrandsSliderCarousel\"));\nconst DashboardProductItem = lazy(() => import(\"../../../components/DashboardProductItem\"));\nconst MeProtocolButton = lazy(() => import(\"../../../components/MeProtocolButton\"));\nconst DashboardCardItem = lazy(() => import(\"../../../components/NewDashboardCardItem\"));\nconst Footer = lazy(() => import(\"../../../components/Footer\"));\nconst Container = lazy(() => import(\"../../../components/Container\"));\n\nexport const Dashboard = () => {\n  const dispatch = useDispatch<Dispatch>();\n  let navigate = useNavigate();\n\n  // const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  const [isLoaded, setIsLoaded] = useState<boolean>(true);\n\n  // const {user_data} = useSelector((state: RootState) => state.userReducer)\n  const { root, nameStyles, button, loadMore } = useDashboardStyles();\n\n  const { token, session_id }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n\n  const { data: popularOfferData, isLoading: popularOfferIsLoading }: any =\n    useGetAllOffersForFiltersQuery(\n      { filter: \"popular\", page: 1, limit: 8 },\n      { refetchOnMountOrArgChange: 600 }\n    );\n\n  const { data: expiringOffers, isLoading: expiringFetching }: any = useGetAllOffersForFiltersQuery(\n    { filter: \"expiring\", page: 1, limit: 8 },\n    { refetchOnMountOrArgChange: 600 }\n  );\n  const { data: trendingOffers }: any = useGetAllOffersForFiltersQuery(\n    { filter: \"trending\", page: 1, limit: 8 },\n    { refetchOnMountOrArgChange: 600 }\n  );\n  const { data: forYou, isLoading: forYouFetching }: any = useGetAllOffersForFiltersQuery(\n    { filter: \"for-you\", page: 1, limit: 8 },\n    { refetchOnMountOrArgChange: 300 }\n  );\n\n  const { data: recentlyViewed, isLoading: recentlyViewedFetching }: any =\n    useGetRecentlyViewedOffersQuery(\n      { session_id },\n      {\n        refetchOnMountOrArgChange: 100,\n      }\n    );\n\n  const { data: trendingBrands, isLoading: trendingBrandsLoading }: any = useGetShopsQuery(\n    { page: 1, limit: 9 },\n    { refetchOnFocus: true }\n  );\n\n  const dashCardData = [\n    {\n      id: \"1\",\n      icon: DashIcon1,\n      label: \"Discover offers\",\n      onclick: () => navigate(\"offers\"),\n    },\n    {\n      id: \"2\",\n      icon: DashIcon2,\n      label: \"Browse categories\",\n      onclick: () => navigate(\"category\"),\n    },\n    {\n      id: \"3\",\n      icon: DashIcon3,\n      label: \"Visit shops\",\n      onclick: () => navigate(\"shop\"),\n    },\n    {\n      id: \"4\",\n      icon: DashIcon4,\n      label: \"My assets\",\n      onclick: () => navigate(`${GLOBAL_PREFIX}dashboard-my-assets`),\n    },\n    {\n      id: \"5\",\n      icon: DashIcon5,\n      label: \"Earn bounties\",\n      onclick: () => navigate(`${GLOBAL_PREFIX}/bounties`),\n      // onclick: () => navigate(\"offers\"),\n    },\n    {\n      id: \"6\",\n      icon: DashIcon6,\n      label: \"Saved\",\n      onclick: () => navigate(\"dashboard-saved\"),\n    },\n  ];\n  const stickyRef = useStickyBox({\n    offsetTop: 300,\n    //  offsetBottom: number,\n    bottom: false,\n  });\n\n  return (\n    <Flex flexDir={\"column\"} p=\"0px\">\n      {/* ----------------------------------------------------------------------NAV BAR------------------------------------------------------------ */}\n      {/* <DashboardNavBar /> */}\n      <NewDashboardNavBar />\n      {/* ----------------------------------------------------------------------TOP CARDS------------------------------------------------------------ */}\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        <Container>\n          <Stack {...root}>\n            {/* <div style={{ display: \"flex\" }}>\n            <StickyBox offsetTop={0}>\n              <Box bg=\"red\" w=\"100px\" h=\"100px\"></Box>\n            </StickyBox>\n            <div>Content</div>\n          </div> */}\n            <Text {...nameStyles} textTransform=\"uppercase\">\n              {user_data?.customer?.firstName}, {user_data?.customer?.lastName}\n            </Text>\n\n            <Spacer />\n\n            <Flex>\n              <SimpleGrid columns={3} spacing=\"40px\" spacingX={\"60px\"} w={\"100%\"}>\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  {dashCardData?.map((e, i) => (\n                    <DashboardCardItem\n                      key={nanoid()}\n                      onClick={e.onclick}\n                      icon={e.icon({\n                        color: \"\",\n                      })}\n                      cardName={e.label}\n                    />\n                  ))}\n                </Suspense>\n              </SimpleGrid>\n            </Flex>\n\n            {/* ----------------------------------------------------------------------READY TO REDEEM------------------------------------------------------------ */}\n            {/* <Flex w={\"100%\"} py={\"35px\"}>\n          <Text {...nameStyles}>Ready to redeem</Text>\n          <Spacer />\n\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            <MeProtocolButton name={\"See all\"} rest={{ ...button }} />\n          </Suspense>\n        </Flex> */}\n\n            {/* <SimpleGrid columns={[2, 2, 3, 4, 4]} w={\"100%\"} spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]} spacingY={\"5px\"}>\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            {products?.map((e) => (\n              <DashboardProductItem\n                key={nanoid()}\n                isLoaded={isLoaded}\n                productTitle={e.name}\n                 points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                productSubtitle={e.category.name}\n                price={e.price}\n                isNew={e.isNew}\n                trending={e.trending}\n                bgImage={[]}\n                onClick={() =>\n                  navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`, { state: { ...e } })\n                }\n              />\n            ))}\n          </Suspense>\n\n          <Spacer />\n        </SimpleGrid> */}\n            {/* ----------------------------------------------------------------------FROM SAVED------------------------------------------------------------ */}\n\n            {/* <Flex w={\"100%\"} py={\"35px\"}>\n          <Text {...nameStyles}>From your saved</Text>\n          <Spacer />\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            <MeProtocolButton name={\"See all\"} rest={{ ...button }} />\n          </Suspense>\n        </Flex>\n        <SimpleGrid columns={[2, 2, 3, 4, 4]} w={\"100%\"} spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]} spacingY={\"5px\"}>\n          <Suspense fallback={<Spinner size=\"sm\" />}>\n            {products2?.map((e, i) => (\n              <DashboardProductItem\n                key={nanoid()}\n                isLoaded={isLoaded}\n                productTitle={e.name}\n                 points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                productSubtitle={e.category.name}\n                price={e.price}\n                isNew={e.isNew}\n                trending={e.trending}\n                bgImage={[]}\n                onClick={() =>\n                  navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`, { state: { ...e } })\n                }\n              />\n            ))}\n          </Suspense>\n        </SimpleGrid> */}\n            {/* ----------------------------------------------------------------------POPULAR DEALS------------------------------------------------------------ */}\n            <Flex w={\"100%\"} py={\"35px\"}>\n              <HStack>\n                <Image src={forYouTodayIcon} w={34} h={34} />\n                <Text {...nameStyles} textTransform=\"uppercase\">\n                  for you today\n                </Text>\n              </HStack>\n              <Spacer />\n              <Suspense fallback={<Spinner size=\"sm\" />}>\n                <MeProtocolButton\n                  name={\"See all offers\"}\n                  rest={{ ...button }}\n                  onClick={() =>\n                    navigate(`see_all_offers_in_category/Popular_deals`, {\n                      state: \"popular\",\n                    })\n                  }\n                />\n              </Suspense>\n            </Flex>\n\n            {popularOfferIsLoading ? (\n              <SkeletonLoader />\n            ) : (\n              <SimpleGrid\n                columns={[2, 2, 3, 4, 4]}\n                w={\"100%\"}\n                spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n                spacingY={\"5px\"}\n              >\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  {popularOfferData?.data?.offers?.map(\n                    (e: {\n                      id: number;\n                      slug: string;\n\n                      name: string;\n                      category: {\n                        name: string;\n                      };\n                      price: number | string;\n                      point_discount: number | string;\n                      isNew: boolean;\n                      created_at: string;\n                      images: Array<string>;\n                      reward: {\n                        rewardSymbol: string;\n                      };\n                    }) => (\n                      <DashboardProductItem\n                        key={nanoid()}\n                        isLoaded={isLoaded}\n                        productTitle={e.name}\n                        points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                        productSubtitle={e.category.name}\n                        price={e.price.toLocaleString()}\n                        isNew={true}\n                        rest={{ ...e }}\n                        // trending={e.trending}\n                        bgImage={[]}\n                        onClick={() => navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`)}\n                      />\n                    )\n                  )}\n                </Suspense>\n              </SimpleGrid>\n            )}\n\n            {/* ----------------------------------------------------------------------PERFECT FOR YOU------------------------------------------------------------ */}\n            <Flex w={\"100%\"} py={\"35px\"}>\n              <HStack>\n                <Image src={forYouTodayIcon} w={34} h={34} />\n                <Text {...nameStyles} textTransform=\"uppercase\">\n                  for you today\n                </Text>\n              </HStack>\n              <Spacer />\n              <Suspense fallback={<Spinner size=\"sm\" />}>\n                <MeProtocolButton\n                  name={\"See all offers\"}\n                  rest={{ ...button }}\n                  onClick={() =>\n                    navigate(`see_all_offers_in_category/Perfect_for_you`, {\n                      state: \"for-you\",\n                    })\n                  }\n                />\n              </Suspense>\n            </Flex>\n\n            {forYouFetching ? (\n              <SkeletonLoader />\n            ) : (\n              <SimpleGrid\n                columns={[2, 2, 3, 4, 4]}\n                w={\"100%\"}\n                spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n                spacingY={\"5px\"}\n                // justifyContent=\"space-between\"\n                // justifyItems={\"space-between\"}\n              >\n                <Suspense fallback={<Spinner size=\"sm\" />}>\n                  {forYou?.data?.offers?.map(\n                    (e: {\n                      id: number;\n                      slug: string;\n\n                      name: string;\n                      category: { name: string };\n                      price: number | string;\n                      point_discount: number | string;\n                      isNew: boolean;\n                      created_at: string;\n                      images: Array<string>;\n                      reward: {\n                        rewardSymbol: string;\n                      };\n                    }) => (\n                      <DashboardProductItem\n                        key={nanoid()}\n                        isLoaded={isLoaded}\n                        productTitle={e.name}\n                        points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                        productSubtitle={e.category.name}\n                        price={e.price}\n                        // isNew={ new Date(e?.created_at).getDate()>= new Date().getDate() }\n                        // trending={e.trending}\n                        bgImage={[]}\n                        rest={{ ...e }}\n                        onClick={() => navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`)}\n                      />\n                    )\n                  )}\n                </Suspense>\n              </SimpleGrid>\n            )}\n\n            {/* ----------------------------------------------------------------------RECENTLY VIEWeD ------------------------------------------------------------ */}\n            {recentlyViewed?.data?.length > 0 && (\n              <Box>\n                <Flex w={\"100%\"} py={\"35px\"}>\n                  <Text {...nameStyles} textTransform=\"uppercase\">\n                    Recently viewed\n                  </Text>\n                  <Spacer />\n                  <Suspense fallback={<Spinner size=\"sm\" />}>\n                    <MeProtocolButton\n                      name={\"See all offers\"}\n                      rest={{ ...button }}\n                      onClick={() => navigate(`see_all_offers_in_category/Recently_viewed`)}\n                    />\n                  </Suspense>\n                </Flex>\n\n                {recentlyViewedFetching ? (\n                  <SkeletonLoader />\n                ) : (\n                  <SimpleGrid\n                    columns={[2, 2, 3, 4, 4]}\n                    w={\"100%\"}\n                    spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n                    spacingY={\"5px\"}\n                  >\n                    <Suspense fallback={<Spinner size=\"sm\" />}>\n                      {recentlyViewed?.data?.map(\n                        (e: {\n                          offer: {\n                            id: number;\n                            slug: string;\n\n                            name: string;\n                            category: { name: string };\n                            price: number | string;\n                            point_discount: number | string;\n                            isNew: boolean;\n                            created_at: string;\n                            images: Array<string>;\n                            reward: {\n                              rewardSymbol: string;\n                            };\n                          };\n                        }) => (\n                          <DashboardProductItem\n                            key={nanoid()}\n                            isLoaded={isLoaded}\n                            productTitle={e?.offer?.name}\n                            points={`${e?.offer?.point_discount}${e?.offer?.reward?.rewardSymbol}`}\n                            productSubtitle={e?.offer?.category.name}\n                            price={e?.offer?.price}\n                            isNew={e?.offer?.isNew}\n                            // trending={e.trending}\n                            bgImage={[]}\n                            rest={{ ...e }}\n                            onClick={() =>\n                              navigate(`${GLOBAL_PREFIX}/productDetails/${e?.offer?.id}`, {\n                                state: { ...e.offer },\n                              })\n                            }\n                          />\n                        )\n                      )}\n                    </Suspense>\n                  </SimpleGrid>\n                )}\n              </Box>\n            )}\n\n            {/* ----------------------------------------------------------------------EDITS------------------------------------------------------------ */}\n            {/* <Flex w={\"100%\"} py={\"35px\"}>\n            <Flex\n              flexDir={\"row\"}\n              align=\"center\"\n              // w={[\"25%\", \"16%\", \"15%\", \"15%\", \"30%\", \"30%\"]}\n              w={\"65%\"}\n            >\n              <Image\n                src={iconsImages.appLogo}\n                w={[\"20px\", \"30px\", \"40px\", \"40px\", \"40px\"]}\n                h={[\"20px\", \"30px\", \"40px\", \"40px\", \"40px\"]}\n                mr={\"1%\"}\n              />\n              <Heading fontSize={[\"16px\", \"18px\", \"20px\", \"24px\", \"26px\"]}>\n                Edits\n              </Heading>\n            </Flex>\n            <Spacer />\n            <Suspense fallback={<Spinner size=\"sm\" />}>\n              <MeProtocolButton\n                name={\"See all\"}\n                rest={{ ...button }}\n                onClick={() =>\n                  navigate(`see_all_offers_in_category/Edits`, {\n                    state: \"expiring\",\n                  })\n                }\n              />\n            </Suspense>\n          </Flex> */}\n            <SimpleGrid\n              columns={[2, 2, 3, 4, 4]}\n              w={\"100%\"}\n              spacingX={[\"35px\", \"35px\", \"35px\", \"15px\", \"35px\"]}\n              spacingY={\"5px\"}\n            >\n              <Suspense fallback={<Spinner size=\"sm\" />}>\n                {expiringOffers?.data?.offers?.map(\n                  (e: {\n                    id: number;\n                    slug: string;\n\n                    name: string;\n                    category: { name: string };\n                    price: number | string;\n                    point_discount: number | string;\n                    isNew: boolean;\n                    created_at: string;\n                    images: Array<string>;\n                    reward: {\n                      rewardSymbol: string;\n                    };\n                  }) => (\n                    <DashboardProductItem\n                      key={nanoid()}\n                      isLoaded={isLoaded}\n                      productTitle={e.name}\n                      points={`${e?.point_discount}${e.reward?.rewardSymbol}`}\n                      productSubtitle={e.category.name}\n                      price={e.price}\n                      isNew={e.isNew}\n                      rest={{ ...e }}\n                      // trending={e.trending}\n                      bgImage={[]}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/productDetails/${e.slug}`)}\n                    />\n                  )\n                )}\n              </Suspense>\n            </SimpleGrid>\n            {/* ----------------------------------------------------------------------BROWSE BRANDS------------------------------------------------------------ */}\n            <Flex>\n              <Suspense fallback={<Spinner size=\"sm\" />}>\n                <BrandsSliderCarousel\n                  carouselTitle={\"Browse brands\"}\n                  items={trendingBrands?.brands?.brands}\n                  seeMoreClick={() => navigate(\"shop\")}\n                />\n              </Suspense>\n            </Flex>\n          </Stack>\n        </Container>\n      </Suspense>\n      <Suspense fallback={<Spinner size=\"sm\" />}>\n        <Footer />\n      </Suspense>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n\nexport const useDashboardStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      // px: \"10%\",\n      // px: [5, 5, 10, 20, 40],\n      //   h: \"458px\",\n      mt: \"108px\",\n      pt: \"3%\",\n      overflow: \"hidden\",\n      pb: \"3%\",\n      px: \"0px\",\n      // bg: \"green\",\n    },\n    nameStyles: {\n      fontSize: [\"20px\", \"20px\"],\n      fontWeight: \"700\",\n    },\n    button: {\n      w: {\n        base: \"18%\",\n        md: \"14%\",\n      },\n      color: \"light\",\n      border: \"1px solid #000000\",\n      borderRadius: \"0px\",\n      textTransform: \"uppercase\",\n      // backgroundColor: \"light\",\n      fontSize: \"18px\",\n      fontWeight: \"500\",\n      p: \"10px 16px\",\n    },\n    loadMore: {\n      w: \"132px\",\n      h: \"32px\",\n      alignSelf: \"center\",\n      py: \"10px\",\n      borderRadius: \"100px\",\n    },\n    font: {\n      fontSize: \"18px\",\n      lineHeight: \"22px\",\n      color: \"#000000\",\n    },\n    smallButton: {\n      w: \"95px\",\n      h: \"42px\",\n      bg: \"#000000\",\n      borderRadius: \"100px\",\n    },\n    smallButton1: {\n      w: \"95px\",\n      h: \"42px\",\n      border: \"1px\",\n      borderColor: \"#000000\",\n      borderRadius: \"100px\",\n      color: \"#000000\",\n    },\n    font1: {\n      fontSize: \"14px\",\n      lineHeight: \"17px\",\n      color: \"#999999\",\n    },\n    font2: {\n      fontSize: \"18px\",\n      lineHeight: \"22px\",\n      color: \"#FFFFFF\",\n    },\n    imgStyle: {\n      w: \"50px\",\n      h: \"50px\",\n      borderRadius: \"50px\",\n      bg: \"#00000010\",\n    },\n  };\n};\n"],"names":["_ref","root","useStyles","_jsx","SimpleGrid","columns","w","spacingX","spacingY","children","map","_createElement","Flex","_objectSpread","flexDir","key","nanoid","_jsxs","Box","Skeleton","borderRadius","base","md","isLoaded","h","bg","overflow","className","as","pos","mt","justify","align","Text","fontSize","noOfLines","opacity","HStack","Heading","pt","pb","DashIcon1","props","color","useBreakpointValue","sm","lg","xl","fallback","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","DashIcon2","_ref2","DashIcon3","_ref3","DashIcon4","_ref4","DashIcon5","_ref5","DashIcon6","_ref6","getParentNode","node","currentParent","parentNode","getComputedStyle","getPropertyValue","window","stickyProp","CSS","supports","opts","passiveArg","Object","defineProperty","get","passive","addEventListener","removeEventListener","e","registerNode","mode","offset","nodeHeight","naturalTop","parentHeight","scrollPaneOffset","viewPortHeight","offsetTop","offsetBottom","bottom","scrollPane","parent","parentElement","overflowYVal","document","body","getScrollParent","latestScrollY","scrollY","scrollTop","unsubs","getCurrentOffset","Math","max","changeToStickyBottomIfBoxTooLow","changeMode","newMode","style","position","nextBottom","concat","top","initial","addListener","element","event","handler","push","handleScroll","scrollDelta","handleWindowResize","innerHeight","handleScrollPaneResize","offsetHeight","console","warn","firstChild","offsetParent","getBoundingClientRect","handleParentNodeResize","computedParentStyle","parentPaddingTop","parseInt","verticalParentPadding","target","current","offsetTill","oldParentHeight","Number","POSITIVE_INFINITY","handleNodeResize","initialArg","arguments","length","undefined","prevHeight","diff","lowestPossible","nextOffset","min","addResizeObserver","n","ro","ResizeObserver","observe","disconnect","forEach","fn","useStickyBox","_ref3$offsetTop","_ref3$offsetBottom","_ref3$bottom","_useState","useState","_useState2","_slicedToArray","setNode","argRef","useRef","useEffect","BrandsSliderCarousel","lazy","DashboardProductItem","MeProtocolButton","DashboardCardItem","Footer","Container","useDispatch","_user_data$customer","_user_data$customer2","_popularOfferData$dat","_popularOfferData$dat2","_forYou$data","_forYou$data$offers","_recentlyViewed$data","_recentlyViewed$data2","_expiringOffers$data","_expiringOffers$data$","_trendingBrands$brand","navigate","useNavigate","_useDashboardStyles","useDashboardStyles","nameStyles","button","_useSelector","loadMore","useSelector","state","authReducer","session_id","token","user_data","userReducer","_useGetAllOffersForFi","useGetAllOffersForFiltersQuery","filter","page","limit","refetchOnMountOrArgChange","popularOfferData","data","popularOfferIsLoading","isLoading","_useGetAllOffersForFi2","expiringOffers","_useGetAllOffersForFi4","forYou","forYouFetching","_useGetRecentlyViewed","useGetRecentlyViewedOffersQuery","recentlyViewed","recentlyViewedFetching","_useGetShopsQuery","useGetShopsQuery","refetchOnFocus","trendingBrands","dashCardData","id","icon","label","onclick","GLOBAL_PREFIX","p","NewDashboardNavBar","Suspense","Spinner","size","Stack","textTransform","customer","firstName","lastName","Spacer","spacing","i","onClick","cardName","py","Image","src","forYouTodayIcon","name","rest","SkeletonLoader","offers","_e$reward","productTitle","points","point_discount","reward","rewardSymbol","productSubtitle","category","price","toLocaleString","isNew","bgImage","slug","_e$reward2","_e$offer","_e$offer2","_e$offer3","_e$offer3$reward","_e$offer4","_e$offer5","_e$offer6","offer","_e$offer7","_e$reward3","carouselTitle","items","brands","seeMoreClick","px","fontWeight","border","alignSelf","font","lineHeight","smallButton","smallButton1","borderColor","font1","font2","imgStyle"],"sourceRoot":""}