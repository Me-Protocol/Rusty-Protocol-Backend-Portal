{"version":3,"file":"static/js/824.33d1447a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/avatar/src/avatar-group.tsx","../node_modules/utilities/object-utils/src/compact.ts","components/MiniNavBar/index.tsx","pages/OrderSummary/OrderSummary.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { baseStyle } from \"./avatar\"\nimport { cloneElement } from \"react\"\n\ninterface AvatarGroupOptions {\n  /**\n   * The children of the avatar group.\n   *\n   * Ideally should be `Avatar` and `MoreIndicator` components\n   */\n  children: React.ReactNode\n  /**\n   * The space between the avatars in the group.\n   * @default \"-0.75rem\"\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number\n}\n\nexport interface AvatarGroupProps\n  extends AvatarGroupOptions,\n    Omit<HTMLChakraProps<\"div\">, \"children\">,\n    ThemingProps<\"Avatar\"> {}\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nexport const AvatarGroup = forwardRef<AvatarGroupProps, \"div\">(\n  function AvatarGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Avatar\", props)\n\n    const {\n      children,\n      borderColor,\n      max,\n      spacing = \"-0.75rem\",\n      borderRadius = \"full\",\n      ...rest\n    } = omitThemingProps(props)\n\n    const validChildren = getValidChildren(children)\n\n    /**\n     * get the avatars within the max\n     */\n    const childrenWithinMax =\n      max != null ? validChildren.slice(0, max) : validChildren\n\n    /**\n     * get the remaining avatar count\n     */\n    const excess = max != null ? validChildren.length - max : 0\n\n    /**\n     * Reversing the children is a great way to avoid using zIndex\n     * to overlap the avatars\n     */\n    const reversedChildren = childrenWithinMax.reverse()\n\n    const clones = reversedChildren.map((child, index) => {\n      const isFirstAvatar = index === 0\n\n      const childProps = {\n        marginEnd: isFirstAvatar ? 0 : spacing,\n        size: props.size,\n        borderColor: child.props.borderColor ?? borderColor,\n        showBorder: true,\n      }\n\n      return cloneElement(child, compact(childProps))\n    })\n\n    const groupStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"row-reverse\",\n      ...styles.group,\n    }\n\n    const excessStyles: SystemStyleObject = {\n      borderRadius,\n      marginStart: spacing,\n      ...baseStyle,\n      ...styles.excessLabel,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        role=\"group\"\n        __css={groupStyles}\n        {...rest}\n        className={cx(\"chakra-avatar__group\", props.className)}\n      >\n        {excess > 0 && (\n          <chakra.span className=\"chakra-avatar__excess\" __css={excessStyles}>\n            {`+${excess}`}\n          </chakra.span>\n        )}\n        {clones}\n      </chakra.div>\n    )\n  },\n)\n\nAvatarGroup.displayName = \"AvatarGroup\"\n","export function compact<T extends Record<any, any>>(object: T) {\n  const clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n","import { Flex, Image, Spacer } from \"@chakra-ui/react\";\nimport React, { lazy, FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GLOBAL_PREFIX } from \"../../constants\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { useNavbarStyles } from \"../NavBar\";\n\nconst MiniNavBar: FC<any> = ({ customPadding, ...rest }): JSX.Element => {\n  let navigate = useNavigate();\n  const { homeIcon } = useNavbarStyles();\n  return (\n    <Flex w={\"100%\"} px={customPadding || \"5%\"}>\n      <Flex {...homeIcon} onClick={() => navigate(`${GLOBAL_PREFIX}/`)}>\n        <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n      </Flex>\n      <Spacer />\n      <Flex></Flex>\n    </Flex>\n  );\n};\n\nexport default MiniNavBar;\n","import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Center,\n  Circle,\n  Divider,\n  Flex,\n  HStack,\n  Image,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\n// import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport MeProtocolButton from \"../../components/MeProtocolButton\";\nimport MiniNavBar from \"../../components/MiniNavBar\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { AuthReducerProps } from \"../../interfaces\";\nimport { RootState } from \"../../redux/store\";\n\nconst OrderSummary = (): JSX.Element => {\n  const {\n    root,\n    button,\n    leftFrame,\n    rightFrame,\n    inner,\n    fontHeader,\n    fontBody,\n    headText,\n    greyTexts,\n    button2,\n    font,\n  } = useStyles();\n\n  // let navigate = useNavigate();\n\n  const { token }: AuthReducerProps = useSelector(\n    (state: RootState) => state.authReducer\n  );\n  // useEffect(() => {\n  //   if (!token) {\n  //     navigate(`${GLOBAL_PREFIX}/`);\n  //   }\n  // });\n  return (\n    <Flex flexDir={\"column\"}>\n      <MiniNavBar />\n      <Stack {...root}>\n        <Flex flexDir={\"row\"}>\n          {/* ----------------------------------------------------------LEFT SECTION--------- ------ ------ ----- ------ ------ ------ ------ */}\n          <Stack {...leftFrame} {...fontHeader}>\n            <Stack {...inner}>\n              <Box>\n                <Text {...headText}>Pay in token rewards</Text>\n              </Box>\n              <HStack h=\"80px\" bg=\"#F2F2F2\" borderRadius=\"100px\" px={\"20px\"}>\n                <AvatarGroup size=\"md\">\n                  {[1, 2, 3, 4, 5, 6, 7, 8]?.map((e, i) => (\n                    <Avatar name=\"A A\" src=\"https://bit.ly/ryan-florence\" />\n                  ))}\n                </AvatarGroup>\n                <Spacer />\n                <Box fontSize=\"16px\" lineHeight=\"24px\">\n                  <Text>Add/remove rewards</Text>\n                </Box>\n              </HStack>\n\n              <Box>\n                <Center as=\"button\" {...button2} bg=\"#F6C657\" color=\"#000000\">\n                  <Spacer />\n                  <Text {...font}>\n                    <Image src={Images_Icons.paypalLogo} />\n                  </Text>\n                  <Text>Pay with PayPal</Text>\n                  <Spacer />\n                  <Text {...font} padding=\"15\">\n                    <Image src={Images_Icons.checkIcon} />\n                  </Text>\n                </Center>\n                <Center as=\"button\" {...button2} bg=\"#000000\" color=\"#FFFFFF\">\n                  <Text {...font}>\n                    <Image src={Images_Icons.applePayLogo} />\n                  </Text>\n                  <Text>Pay with Apple Pay</Text>\n                </Center>\n                <Center as=\"button\" {...button2} bg=\"#F2F2F2\" color=\"#999999\">\n                  <HStack padding={\"10\"}>\n                    <Text>1234 1234 1234 1234 1234</Text>\n                    <Spacer />\n                    <Text>MM / YY</Text>\n                    <Spacer />\n                    <Text>CVC</Text>\n                    <Spacer />\n                    <Text {...font}>\n                      <Image src={Images_Icons.visaLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.mastercardLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.americanExpressLogo} />\n                    </Text>\n                    <Text {...font}>\n                      <Image src={Images_Icons.unionPayLogo} />\n                    </Text>\n                  </HStack>\n                </Center>\n              </Box>\n\n              <Box>\n                <MeProtocolButton\n                  name={\"Confirm transaction\"}\n                  rest={{ ...button }}\n                />\n              </Box>\n              <Box {...fontBody}>\n                <Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n                  dignissim magna in nisi auctor, id aliquam ligula semper.\n                  Mauris congue finibus tellus, sed eleifend elit cursus eu\n                </Text>\n              </Box>\n            </Stack>\n\n            <Stack>\n              <Divider orientation=\"horizontal\" w=\"100%\" mt={\"40px\"} />\n              <Text {...headText} pt={\"20px\"}>\n                How it works\n              </Text>\n\n              {[1, 2, 3, 4]?.map((e, i) => (\n                <Flex key={nanoid()} flexDir=\"row\">\n                  <Circle size=\"25px\" bg=\"black\" color=\"white\">\n                    <Text>{i + 1}</Text>\n                  </Circle>\n                  <Text {...greyTexts} pl=\"20px\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Morbi dignissim magna in nisi auctor, id aliquam ligula\n                    semper. Mauris congue finibus tellus, sed eleifend elit\n                    cursus eu\n                  </Text>\n                </Flex>\n              ))}\n            </Stack>\n          </Stack>\n\n          <Spacer />\n\n          {/* ----------------------------------------------------------RIGHT SECTION--------- ------ ------ ----- ------ ------ ------ ------ */}\n          <Stack {...rightFrame}>\n            <Text {...headText}>Order summary</Text>\n            <HStack>\n              <Image\n                boxSize=\"100px\"\n                objectFit=\"cover\"\n                src=\"https://bit.ly/dan-abramov\"\n                bg={\"#999999\"}\n              />\n              <Box>\n                <Text>DV + Suicoke Interlocking Sandals</Text>\n                <Box {...greyTexts}>\n                  <Text>Black</Text>\n                  <Text>Size: S</Text>\n                  <Text>Quantity: 1</Text>\n                </Box>\n              </Box>\n            </HStack>\n\n            <HStack bg={\"#F2F2F2\"} h=\"45px\">\n              <Text>Deal price </Text>\n              <Spacer />\n              <Text>$229.00</Text>\n            </HStack>\n            <HStack h=\"45px\">\n              <Text>Subtotal rewards</Text>\n              <Spacer />\n              <Text>-$229.00</Text>\n            </HStack>\n            {/* ----------------------------------------------------------PAYMENT  DETAILS--------- ------ ------ ----- ------ ------ ------ ------ */}\n            <Text fontSize={\"24px\"} py={\"40px\"}>\n              Payment details\n            </Text>\n            <HStack {...greyTexts}>\n              <Text>Reward split</Text>\n              <Spacer />\n              <Text onClick={() => alert(\"edit\")}>Edit</Text>\n            </HStack>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9]?.map((e, i) => (\n              <Flex\n                bg={i % 2 === 0 ? \"#F2F2F2\" : \"white\"}\n                w=\"100%\"\n                h=\"55px\"\n                flexDir={\"column\"}\n                justify=\"center\"\n              >\n                <HStack>\n                  <Text>Nike ACG</Text>\n                  <Spacer />\n                  <Text>$85.07</Text>\n                </HStack>\n                <HStack {...greyTexts}>\n                  <Text>4353 NKE</Text>\n                  <Spacer />\n                  <Text>24%</Text>\n                </HStack>\n              </Flex>\n            ))}\n          </Stack>\n        </Flex>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default OrderSummary;\n\nconst useStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      px: \"10%\",\n      mt: \"50px\",\n      pt: \"3%\",\n    },\n    button: {\n      w: \"100%\",\n      h: \"80px\",\n      borderRadius: \"0px\",\n      background: \"#000000\",\n      my: \"20px\",\n    },\n\n    leftFrame: {\n      w: \"60%\",\n    },\n    rightFrame: {\n      w: \"35%\",\n    },\n\n    inner: {\n      flexGrow: \"0\",\n      flex: \"none\",\n    },\n\n    fontHeader: {\n      fontSize: \"18px\",\n      lineHeight: \"30px\",\n      color: \"#000000\",\n    },\n\n    fontBody: {\n      fontSize: \"14px\",\n      lineHeight: \"21px\",\n      color: \"#999999\",\n    },\n    headText: {\n      fontSize: \"20px\",\n      mb: \"25px\",\n    },\n    greyTexts: {\n      color: \"#AEAEAE\",\n      fontSize: \"14px\",\n    },\n    button2: {\n      w: \"100%\",\n      h: \"62px\",\n      borderRadius: \"0px\",\n      background: \"#000000\",\n      my: \"20px\",\n    },\n    font: {\n      fontSize: \"24px\",\n      lineHeight: \"24px\",\n      padding: \"10px\",\n    },\n  };\n};\n"],"names":["AvatarGroup","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","borderColor","max","_omitThemingProps$spa","spacing","_omitThemingProps$bor","borderRadius","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","childrenWithinMax","slice","excess","length","clones","reverse","map","child","index","_a","childProps","marginEnd","size","showBorder","cloneElement","object","clone","Object","assign","key","compact","groupStyles","_objectSpread","display","alignItems","justifyContent","flexDirection","group","excessStyles","marginStart","baseStyle","excessLabel","jsxs","chakra","role","__css","className","cx","jsx","concat","displayName","_ref","customPadding","navigate","useNavigate","homeIcon","useNavbarStyles","_jsxs","Flex","w","px","_jsx","onClick","GLOBAL_PREFIX","Image","src","Images_Icons","objectFit","Spacer","_ref2","_ref3","_useStyles","useStyles","root","button","leftFrame","rightFrame","inner","fontHeader","fontBody","headText","greyTexts","button2","font","useSelector","state","authReducer","token","flexDir","MiniNavBar","Stack","Box","Text","HStack","h","bg","e","i","Avatar","name","fontSize","lineHeight","Center","as","color","padding","MeProtocolButton","Divider","orientation","mt","pt","Circle","pl","nanoid","boxSize","py","alert","justify","background","my","flexGrow","flex","mb"],"sourceRoot":""}