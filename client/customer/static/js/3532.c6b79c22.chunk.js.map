{"version":3,"file":"static/js/3532.c6b79c22.chunk.js","mappings":"2RA4sBaA,EAAkB,WAC7B,MAAO,CACLC,KAAM,CACJC,EAAG,OACHC,OAAQ,IAEVC,UAAW,CACTC,EAAG,OACHC,GAAI,KACJC,MAAO,UASTC,eAAgB,CACdC,QAAS,WAGXC,OAAQ,CACNR,EAAG,QACHG,EAAG,OACHM,WAAY,UACZC,aAAc,OACdC,QAAS,aACTN,MAAO,SACPO,GAAI,MAGNC,KAAM,CACJC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAI7CC,QAAS,CACPD,SAAU,OACVE,WAAY,OACZC,MAAO,WAETC,WAAY,CACVf,EAAG,OACHH,EAAG,MACHmB,QAAS,MACTR,QAAS,gBACTN,MAAO,UAETe,QAAS,CACPjB,EAAG,MAEHE,MAAO,SACPM,QAAS,iBAEXU,gBAAiB,CACfjB,GAAI,KACJD,EAAG,OACHH,EAAG,CAAC,MAAO,MAAO,MAAO,MAAO,OAChCsB,QAAS,QAEXC,SAAU,CACRC,MAAO,OACPC,OAAQ,OACRd,QAAS,SACTN,MAAO,SACPqB,GAAI,MAENC,SAAU,CACRxB,EAAG,OACHH,EAAG,OACHsB,QAAS,OACTM,YAAa,QACbX,MAAO,QACPH,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE7Ce,UAAW,CAGTlB,QAAS,SACTN,MAAO,UAETyB,aAAc,CACZhB,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CiB,UAAW,cAEbC,kBAAmB,CACjBlB,SAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC3CG,MAAO,UACPc,UAAW,cAEbE,QAAS,CACPjC,EAAG,OACHG,EAAG,MACH+B,GAAI,QACJvB,QAAS,gBACTN,MAAO,SACPD,GAAI,MAEN+B,WAAY,CACVnC,EAAG,OACHkC,GAAI,SAKV,C","sources":["components/NavBar/index.tsx"],"sourcesContent":["import {\n  Avatar,\n  Center,\n  Divider,\n  Flex,\n  HStack,\n  Icon,\n  Input,\n  InputGroup,\n  Image,\n  InputLeftElement,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Spacer,\n  Text,\n  Heading,\n  Button,\n  PopoverHeader,\n  Circle,\n  Box,\n  Spinner,\n  ScaleFade,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { FC, memo, useCallback, useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { FaChevronRight, FaSearch } from \"react-icons/fa\";\nimport Images_Icons from \"../../constants/icons-images\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthReducerProps, CartReducerProps, UserReducerProps } from \"../../interfaces\";\nimport { RootState } from \"../../redux/store\";\nimport { Dispatch } from \"redux\";\nimport { logOut } from \"../../redux/AuthSlice\";\nimport { getUserCollection, getUserInfo } from \"../../redux/UserSlice\";\nimport PopoverComponent from \"../PopoverComponent\";\nimport {\n  CategoryType,\n  useGetAllUserSyncedRewardsQuery,\n  useGetCategoriesQuery,\n  useGetTrendingBrandsQuery,\n} from \"../../redux/rtkQuery/api\";\nimport { brands } from \"../../constants/brandsdummyJSON\";\nimport Container from \"../Container\";\nimport Searchbox from \"../../components/Searchbox\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config\";\nimport debounce from \"lodash.debounce\";\nimport { cancelBounty, clearBounty } from \"../../redux/BountySlice\";\nimport { GLOBAL_PREFIX } from \"../../constants\";\n\nconst NavBar: FC<any> = ({ customPadding, ...rest }): JSX.Element => {\n  let navigate = useNavigate();\n  const { isOpen, onToggle } = useDisclosure();\n\n  const dispatch = useDispatch<Dispatch>();\n  const { token }: AuthReducerProps = useSelector((state: RootState) => state.authReducer);\n  const { user_data }: UserReducerProps = useSelector((state: RootState) => state.userReducer);\n\n  const { cartItems }: CartReducerProps = useSelector((state: RootState) => state.cartReducer);\n\n  const [searchOpen, setSearchOpen] = useState<boolean>(false);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [searchResultLoading, setSearchResultLoading] = useState<boolean>(false);\n  const [searchResult, setSearchResult] = useState<Array<any>>([]);\n  const { data, isError, isFetching, isLoading, isSuccess } = useGetCategoriesQuery(\n    { page: 1, limit: 8, type: CategoryType.PRODUCT },\n    { refetchOnMountOrArgChange: 200 }\n  );\n  // const {\n  //   data: syncedRewards,\n  //   error,\n  //   refetch: refetchSyncRewards,\n  // } = useGetAllUserSyncedRewardsQuery(undefined, {\n  //   refetchOnFocus: true,\n  //   skip: true,\n  // });\n\n  const { data: trendingBrands, isLoading: trendingBrandsLoading }: any = useGetTrendingBrandsQuery(\n    { page: 1 },\n    { refetchOnMountOrArgChange: 300 }\n  );\n  // useEffect(() => {\n  //   // console.log(trendingBrands, \"YYUUTT\");\n  //   if (token) {\n  //     // if (token) dispatch(getUserInfo({ token }));\n  //     dispatch(getUserCollection({ token }));\n  //   }\n  // }, [token]);\n  // ------------------------------------GLOBAL SEARCH FN------------------------------------------------------\n  const debouncedSearch = useCallback(\n    debounce((query: string) => {\n      setSearchResultLoading(true);\n      axios\n        .get(`${BASE_URL}/search?q=${query}`)\n        .then((res: any) => {\n          // console.log(res, \"E WORK\");\n          setSearchResult(res?.data?.result);\n        })\n        .catch((err: any) => {\n          console.log(err, \"Err SEARCH\");\n        })\n        .finally(() => {\n          setSearchResultLoading(false);\n        });\n    }, 500),\n    []\n  );\n  const DoGlobalSearch = (query: string) => {\n    if (searchValue.length <= 1) return;\n    if (!query) return setSearchResult([]);\n    debouncedSearch(query);\n  };\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedLanguage, setSelectedLanguage] = useState(0);\n\n  const {\n    root,\n    container,\n    font,\n    popfont,\n    search,\n    shopperBox,\n    infoBox,\n    shopperBusiness,\n    homeIcon,\n    helpText,\n    iconsLogo,\n    popoverTexts,\n    popoverLightTexts,\n    itemBox,\n    searchRoot,\n    boxCircleColor,\n  } = useNavbarStyles();\n\n  // console.log(trendingBrands, \"trendingBrands\");\n\n  return (\n    <Flex {...root} pos=\"absolute\" flexDir={\"column\"}>\n      {/* ----------------------------------------------------------------TOP SECTION ----------------------------------------------------------------*/}\n\n      <Box w=\"100%\" bg=\"black\">\n        <Container>\n          <Flex\n            bg={\"black\"}\n            h={\"50px\"}\n            // px={customPadding || [5, 5, 10, 20, 40]}\n            align={\"center\"}\n          >\n            <Flex {...shopperBox} flexDir=\"row\">\n              {[\"For Shoppers\", \"For Businesses\"]?.map((e, i) => (\n                <Center\n                  key={nanoid()}\n                  as=\"button\"\n                  bg={activeIndex === i ? \"light\" : \"dark\"}\n                  color={activeIndex === i ? \"dark\" : \"light\"}\n                  onClick={() => setActiveIndex(i)}\n                  {...shopperBusiness}\n                >\n                  <Heading fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}>{e}</Heading>\n                </Center>\n              ))}\n            </Flex>\n            <Spacer />\n            {/* ----------------------------------------------------------------IS LOGGED IN STATE--------------------------------------------------------*/}\n            {token ? (\n              <Flex {...infoBox}>\n                <Center {...helpText}>Help</Center>\n                <Divider orientation=\"vertical\" h={\"12px\"} mx={\"5px\"} />\n                <Popover isLazy placement=\"bottom-start\">\n                  <PopoverTrigger>\n                    <Flex\n                      as=\"button\"\n                      flexDir={\"row\"}\n                      align={\"center\"}\n                      _hover={{ bg: \"white\", color: \"dark\" }}\n                      color={\"light\"}\n                      fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}\n                    >\n                      Hi, {user_data?.customer?.firstName || \"user\"}\n                      <Avatar\n                        ml={\"5px\"}\n                        name={`${user_data?.customer?.lastName} ${user_data?.customer?.firstName}`}\n                        src={user_data?.customer?.profilePicture}\n                        size={\"sm\"}\n                      />\n                    </Flex>\n                  </PopoverTrigger>\n                  {/* ----------------------------------USER POPOVER CONTENT------------------------------ */}\n                  <PopoverContent\n                    borderRadius=\"0\"\n                    // boxSizing=\"border-box\"\n                    position=\"relative\"\n                    width=\"15vw\"\n                    background=\"#FFFFFF\"\n                    border=\"1px\"\n                  >\n                    {/*--------------------------------- NAME SECTION ------------------------------------ */}\n                    <Flex\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      {...itemBox}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/settings`)}\n                    >\n                      <Flex flexDir={\"column\"}>\n                        <Text {...popoverTexts} noOfLines={1}>\n                          {user_data?.customer?.lastName} {user_data?.customer?.firstName}\n                        </Text>\n                        <Text {...popoverLightTexts}>{user_data?.email}</Text>\n                      </Flex>\n                      <Icon as={FaChevronRight} />\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- EDITS SECTION ------------------------------------ */}\n\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My assets</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        {/* {syncedRewards?.userPoints?.length || 0} */}\n                      </Text>\n                    </Flex>\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My Offers</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        0\n                      </Text>\n                    </Flex>\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-saved`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr={\"5%\"}\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>Saved</Text>\n                      </Flex>\n                      <Text {...popoverTexts} alignSelf=\"center\">\n                        0\n                      </Text>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\n                    <Flex\n                      {...itemBox}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      as=\"a\"\n                      href={\"https://www.supremenewyork.com\"}\n                    >\n                      <Avatar\n                        mr={\"5px\"}\n                        name=\"John Doe\"\n                        src=\"https://pbs.twimg.com/profile_images/846716933894537216/7VCYCh5V_400x400.jpg\"\n                        size={\"sm\"}\n                      />\n                      <Flex flexDir={\"column\"} pl=\"5px\" w=\"75%\">\n                        <Text {...popoverTexts}>Supreme</Text>\n                        <Text\n                          as=\"a\"\n                          href={\"https://www.supremenewyork.com\"}\n                          {...popoverLightTexts}\n                          noOfLines={1}\n                          textDecoration={\"underline\"}\n                          w=\"95%\"\n                        >\n                          https://www.supremenewyork.com\n                        </Text>\n                      </Flex>\n                      <Icon as={FaChevronRight} />\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- MAJOR OFFER SECTION ------------------------------------ */}\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => navigate(`${GLOBAL_PREFIX}/dashboard/dashboard-my-assets`)}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My assets</Text>\n                      </Flex>\n                    </Flex>\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.edit_Icon}\n                        />\n                        <Text {...popoverTexts}>My Offers</Text>\n                      </Flex>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- INSTALL APP SECTION ------------------------------------ */}\n                    <Flex {...itemBox} h={\"3vw\"} as={\"button\"} _hover={{ bg: \"#F6F6F6\" }}>\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.mobileapp_icon}\n                        />\n                        <Text {...popoverTexts}>Install mobile app</Text>\n                      </Flex>\n                    </Flex>\n                    <Divider w={\"100%\"} />\n                    {/*--------------------------------- LOGOUT SECTION ------------------------------------ */}\n\n                    <Flex\n                      {...itemBox}\n                      h={\"3vw\"}\n                      as={\"button\"}\n                      _hover={{ bg: \"#F6F6F6\" }}\n                      onClick={() => {\n                        dispatch(logOut());\n                        dispatch(cancelBounty());\n                        dispatch(clearBounty());\n                      }}\n                    >\n                      <Flex w=\"100%\">\n                        <Image\n                          w={\"1vw\"}\n                          h={\"1vw\"}\n                          alignSelf={\"center\"}\n                          mr=\"5%\"\n                          src={Images_Icons.logoutIcon}\n                        />\n                        <Text {...popoverTexts}>Logout</Text>\n                      </Flex>\n                    </Flex>\n                  </PopoverContent>\n                </Popover>\n              </Flex>\n            ) : (\n              <Flex flexDir={\"row\"} w={\"20%\"} justify={\"flex-end\"}>\n                {[\"EN\", \"FR\", \"IT\"]?.map((e, i) => (\n                  <Center\n                    key={nanoid()}\n                    as={Button}\n                    w={\"10%\"}\n                    h={\"90%\"}\n                    color={i === selectedLanguage ? \"black\" : \"white\"}\n                    borderWidth={0.5}\n                    borderRadius={\"100px\"}\n                    px={\"7%\"}\n                    ml={\"3%\"}\n                    _hover={{ bg: i === selectedLanguage ? \"white\" : \"dark\" }}\n                    bg={i === selectedLanguage ? \"white\" : \"black\"}\n                    onClick={() => {\n                      setSelectedLanguage(i);\n                    }}\n                  >\n                    <Heading fontSize={[\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"]}>{e}</Heading>\n                  </Center>\n                ))}\n              </Flex>\n            )}\n          </Flex>\n        </Container>\n      </Box>\n\n      {/* ----------------------------------------------------------------------LOWER SECTION --------------------------------------------*/}\n      <Box w=\"100%\" bg=\"light\">\n        <Container>\n          <Flex\n            bg={\"light\"}\n            h={\"55px\"}\n            // px={customPadding || [5, 5, 10, 20, 40]}\n            borderBottomWidth={1}\n            w={\"100%\"}\n            display={[\"none\", \"none\", \"none\", \"flex\", \"flex\"]}\n            {...rest}\n          >\n            <HStack w={\"100%\"}>\n              <Flex\n                {...homeIcon}\n                as=\"button\"\n                onClick={() => {\n                  token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\n                }}\n              >\n                <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n              </Flex>\n              {/* ----------------------------------------SEARCH BAR SECTION --------------------------------------------*/}\n              <Flex\n                {...search}\n                as=\"button\"\n                onClick={() => {\n                  onToggle();\n                }}\n              >\n                <Icon as={FaSearch} color=\"#999999\" />\n                <Text noOfLines={1} {...font} px={\"3%\"} color={\"#999999\"}>\n                  Search offers, brand or style...\n                </Text>\n              </Flex>\n              {/* ----------------------------------------MENU BAR SECTION --------------------------------------------*/}\n              <PopoverComponent label=\"Brands\">\n                {trendingBrands?.brands?.brands?.slice(0, 7)?.map((e: any, i: number) => (\n                  <PopoverHeader\n                    as=\"button\"\n                    {...font}\n                    key={nanoid()}\n                    onClick={() =>\n                      navigate(`${GLOBAL_PREFIX}/dashboard/shop/${e.brandName}`, {\n                        state: { ...e },\n                      })\n                    }\n                  >\n                    <Flex>\n                      <Image\n                        src={e?.logo}\n                        w=\"20px\"\n                        h=\"20px\"\n                        mr=\"15px\"\n                        objectFit={\"contain\"}\n                        borderRadius={\"20px\"}\n                      />\n                      <Text textAlign={\"left\"}>{e.brandName}</Text>\n                    </Flex>\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <PopoverComponent label=\"Categories\">\n                {data?.data?.categories.map((e) => (\n                  <PopoverHeader\n                    {...font}\n                    key={nanoid()}\n                    onClick={() => {\n                      navigate(`${GLOBAL_PREFIX}/dashboard/category/${e.name}`, {\n                        state: { ...e },\n                      });\n                    }}\n                  >\n                    {e.name}\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <PopoverComponent label=\"Special\">\n                {data?.data?.categories?.map((e) => (\n                  <PopoverHeader\n                    {...font}\n                    key={nanoid()}\n                    onClick={() => {\n                      navigate(`${GLOBAL_PREFIX}/dashboard/category/${e.name}`, {\n                        state: { ...e },\n                      });\n                    }}\n                  >\n                    {e.name}\n                  </PopoverHeader>\n                ))}\n              </PopoverComponent>\n              <Flex {...container}>\n                <Text {...font} as=\"button\">\n                  Latest\n                </Text>\n              </Flex>\n              <Spacer />\n              {token ? (\n                <>\n                  {/* ++++++++++++++++++ Notification Bell is here +++++++++++++++++++++ */}\n\n                  <Flex\n                    as=\"button\"\n                    {...iconsLogo}\n                    pos=\"relative\"\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/notification`)}\n                  >\n                    {/* {data?.data?.categories.length > 1 ? (\n                      <Circle\n                        size=\"10px\"\n                        {...boxCircleColor}\n                        pos=\"absolute\"\n                        top=\"0\"\n                        right=\"1\"\n                      ></Circle>\n                    ) : null} */}\n                    <Image src={Images_Icons.bell} />\n                  </Flex>\n\n                  {/* ++++++++++++++++++ The END Notification Bell is here +++++++++++++++++++++ */}\n\n                  {/* --------------------------------- ADD BAG ICON ------------------------------------------- */}\n                  <Flex\n                    as=\"button\"\n                    {...iconsLogo}\n                    pos=\"relative\"\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/bag`)}\n                  >\n                    {cartItems?.length > 0 && (\n                      <Center\n                        h=\"20px\"\n                        w=\"20px\"\n                        borderRadius=\"20px\"\n                        bg=\"dark\"\n                        color=\"white\"\n                        pos=\"absolute\"\n                        right=\"0\"\n                        top=\"-2\"\n                        left=\"4\"\n                      >\n                        <Text fontSize={\"14px\"}>{cartItems?.length}</Text>\n                      </Center>\n                    )}\n                    <Image src={Images_Icons.box} />\n                  </Flex>\n                </>\n              ) : (\n                <Flex>\n                  <Center\n                    as={Button}\n                    bg={\"black\"}\n                    color={\"white\"}\n                    px={\"15px\"}\n                    py={\"3px\"}\n                    _hover={{ bg: \"dark\" }}\n                    borderRadius={\"100px\"}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/register`)}\n                  >\n                    <Text>Create an account</Text>\n                  </Center>\n                  <Spacer />\n                  <Center\n                    as={Button}\n                    bg={\"white\"}\n                    color={\"dark\"}\n                    borderWidth={1}\n                    borderColor={\"black\"}\n                    ml={\"15px\"}\n                    py={\"3px\"}\n                    _hover={{ bg: \"white\" }}\n                    borderRadius={\"100px\"}\n                    onClick={() => navigate(`${GLOBAL_PREFIX}/login`)}\n                  >\n                    <Text>Login</Text>\n                  </Center>\n                </Flex>\n              )}\n            </HStack>\n          </Flex>\n        </Container>\n      </Box>\n\n      {/* ----------------------------------------------------------------------SEARCH SECTION --------------------------------------------*/}\n      <Box\n        display={!isOpen ? \"none\" : \"block\"}\n        pos={\"absolute\"}\n        w=\"100%\"\n        zIndex={1000}\n        bg=\"white\"\n        minHeight={\"100px\"}\n      >\n        <ScaleFade in={isOpen}>\n          <Box\n            // bg=\"red\"\n            zIndex={1000}\n            boxShadow={\"1px 1px 3px #00000035\"}\n            // alignItems=\"center\"\n            minHeight={\"auto\"}\n          >\n            <Container>\n              <Flex\n                {...searchRoot}\n                // px={customPadding || [5, 5, 10, 20, 40]}\n                pt={5}\n                minHeight={\"auto\"}\n                // minHeight={searchResult.length > 0 ? \"600px\" : \"100px\"}\n                transition={\"min-height 0.5s\"}\n                transition-timing-function=\"ease-in\"\n                _focus={{ boxShadow: \"none\" }}\n                // overflowY={\"scroll\"}\n                // alignItems=\"center\"\n                justifyContent=\"space-between\"\n              >\n                {/* ---------------------------------------------MeProtocol LOGO------------------------------------------ */}\n                <Flex\n                  {...homeIcon}\n                  as=\"button\"\n                  onClick={() => {\n                    token ? navigate(`${GLOBAL_PREFIX}/dashboard`) : navigate(`${GLOBAL_PREFIX}/`);\n                  }}\n                >\n                  <Image src={Images_Icons.appLogo} objectFit={\"cover\"} />\n                </Flex>\n                {/* <Spacer /> */}\n\n                {/* ------------------------------------------------------SEARCH BAR------------------------------------------ */}\n                <Flex {...search} w=\"600px\" _focus={{ boxShadow: \"none\" }} flexDir=\"column\">\n                  <InputGroup _focus={{ boxShadow: \"none\" }} as=\"button\">\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={<Icon as={FaSearch} color=\"#999999\" />}\n                    />\n                    <Input\n                      {...font}\n                      value={searchValue}\n                      onChange={({ target }: { target: { value: string } }) => {\n                        setSearchValue(target.value);\n                        DoGlobalSearch(target.value);\n                        if (target.value.length < 3) {\n                          setSearchResult([]);\n                        }\n                      }}\n                      placeholder=\"Search offers, brand or style...\"\n                      borderRadius=\"0\"\n                      borderWidth=\"0\"\n                      onKeyDown={(event) => {\n                        if (event.key === \"Enter\") {\n                          event.preventDefault();\n                          onToggle();\n                          navigate(`${GLOBAL_PREFIX}/searchResult`, {\n                            state: searchValue,\n                          });\n                        }\n                      }}\n                      // _focus={{ boxShadow: \"none\" }}\n                    />\n                  </InputGroup>\n                </Flex>\n\n                {/* --------------- EXIST BUTTON ------------------ */}\n                <Center\n                  as=\"button\"\n                  w={\"50px\"}\n                  h={\"50px\"}\n                  onClick={() => {\n                    // setSearchOpen(false);\n                    setSearchValue(\"\");\n                    setSearchResult([]);\n                    onToggle();\n                  }}\n                >\n                  <Image w={\"40px\"} h={\"40px\"} src={Images_Icons.cancel_icon} />\n                </Center>\n              </Flex>\n              <Flex\n                // bg=\"cyan\"\n                w=\"600px\"\n                pos={\"relative\"}\n                left={[\"300px\", \"300px\", \"300px\", \"300px\", \"340px\"]}\n              >\n                {/* -------------------------------- SEARCH BOX INFORMATION SECTION ----------------------- */}\n                {searchResult.length > 0 && searchValue.length > 2 ? (\n                  <Searchbox\n                    searchResult={searchResult}\n                    isLoading={searchResultLoading}\n                    clearClick={() => {\n                      setSearchValue(\"\");\n                      setSearchResult([]);\n                    }}\n                    navigate={() => {\n                      // onToggle();\n                      // navigate(`${GLOBAL_PREFIX}/searchResult`, {\n                      //   state: searchValue,\n                      // });\n                    }}\n                  />\n                ) : (\n                  <Flex>{searchValue.length > 2 ? <Spinner mt=\"8px\" size={\"sm\"} /> : \"\"}</Flex>\n                )}\n              </Flex>\n            </Container>\n          </Box>\n        </ScaleFade>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default memo(NavBar);\n\nexport const useNavbarStyles = () => {\n  return {\n    root: {\n      w: \"100%\",\n      zIndex: 10,\n    },\n    container: {\n      h: \"36px\",\n      px: \"1%\",\n      align: \"center\",\n      // px: [\"10%\", \"10%\", \"5%\", \"5%\", \"10%\", \"10%\"],\n      // bg: \"red\",\n      // _hover: {\n      //   background: \"black\",\n      //   color: \"white\",\n      // },\n    },\n\n    boxCircleColor: {\n      bgColor: \"#3478F6\",\n    },\n\n    search: {\n      w: \"300px\",\n      h: \"40px\",\n      background: \"#F6F6F6\",\n      borderRadius: \"53px\",\n      justify: \"flex-start\",\n      align: \"center\",\n      pl: \"1%\",\n    },\n\n    font: {\n      fontSize: [\"14px\", \"14px\", \"14px\", \"16px\", \"16px\"],\n      // lineHeight: \"19px\",\n    },\n\n    popfont: {\n      fontSize: \"12px\",\n      lineHeight: \"14px\",\n      color: \"#999999\",\n    },\n    shopperBox: {\n      h: \"45px\",\n      w: \"24%\",\n      flexDir: \"row\",\n      justify: \"space-between\",\n      align: \"center\",\n    },\n    infoBox: {\n      h: \"95%\",\n      // w: \"45%\",\n      align: \"center\",\n      justify: \"space-between\",\n    },\n    shopperBusiness: {\n      px: \"2%\",\n      h: \"40px\",\n      w: [\"50%\", \"50%\", \"50%\", \"50%\", \"50%\"],\n      rounded: \"50px\",\n    },\n    homeIcon: {\n      width: \"44px\",\n      height: \"44px\",\n      justify: \"center\",\n      align: \"center\",\n      mr: \"2%\",\n    },\n    helpText: {\n      h: \"25px\",\n      w: \"70px\",\n      rounded: \"70px\",\n      borderWidth: \"0.5px\",\n      color: \"white\",\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\n    },\n    iconsLogo: {\n      // width: \"30px\",\n      // height: \"24px\",\n      justify: \"center\",\n      align: \"center\",\n    },\n    popoverTexts: {\n      fontSize: [\"14px\", \"14px\", \"14px\", \"14px\", \"14px\"],\n      alignSelf: \"flex-start\",\n    },\n    popoverLightTexts: {\n      fontSize: [\"12px\", \"12px\", \"12px\", \"12px\", \"12px\"],\n      color: \"#999999\",\n      alignSelf: \"flex-start\",\n    },\n    itemBox: {\n      w: \"100%\",\n      h: \"3vw\",\n      bg: \"white\",\n      justify: \"space-between\",\n      align: \"center\",\n      px: \"5%\",\n    },\n    searchRoot: {\n      w: \"100%\",\n      bg: \"light\",\n      // zIndex: 1000,\n      // boxShadow: \"1px 2px 9px #00000035\",\n    },\n  };\n};\n"],"names":["useNavbarStyles","root","w","zIndex","container","h","px","align","boxCircleColor","bgColor","search","background","borderRadius","justify","pl","font","fontSize","popfont","lineHeight","color","shopperBox","flexDir","infoBox","shopperBusiness","rounded","homeIcon","width","height","mr","helpText","borderWidth","iconsLogo","popoverTexts","alignSelf","popoverLightTexts","itemBox","bg","searchRoot"],"sourceRoot":""}