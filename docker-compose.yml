version: '3.8'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start
    depends_on:
      - postgres
      - redis
      - elasticsearch
    env_file: .env
    ports:
      - "1450:1450"
      - 8080:3000
      - 9229:9229

  postgres:
    image: postgres:12
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4:4.28
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@docker.ai
      PGADMIN_DEFAULT_PASSWORD: password

  redis:
    image: redis:6-alpine
    environment:
      - REDIS_PASSWORD=password
    command: redis-server --requirepass password
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=password
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  localstack:
    image: localstack/localstack
    environment:
      - SERVICES=kms,s3,lambda,cloudwatch
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
      - PORT_WEB_UI=8089
      - USE_SSL=false
    ports:
      - "4566:4566"

volumes:
  postgres_data:
  redis_data:
  es_data:
