{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_sendWebFrontEnd",
        "parameters": [],
        "responses": { "200": { "description": "Me Protocol Api v0.0.1" } }
      }
    },
    "/health": {
      "get": {
        "operationId": "AppController_healthCheck",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/public-settings": {
      "get": {
        "operationId": "AppController_getPublicSettings",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/search": {
      "get": {
        "operationId": "SearchController_searchAll",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } }
      }
    },
    "/user/google-spreadsheet": {
      "post": {
        "operationId": "AuthenticationController_googleSheet",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/email": {
      "post": {
        "operationId": "AuthenticationController_signupWithEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailSignupDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/email/with-brand/{brandId}": {
      "post": {
        "operationId": "AuthenticationController_signupAsBrandCustomerWithEmail",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailSignupDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/email/resend": {
      "post": {
        "operationId": "AuthenticationController_resendEmailOTP",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/email/verify": {
      "post": {
        "operationId": "AuthenticationController_verifyEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailVerifyDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/phone": {
      "post": {
        "operationId": "AuthenticationController_signupWithPhone",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PhoneSignupDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/phone/resend": {
      "post": {
        "operationId": "AuthenticationController_resendPhoneOTP",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/signup/phone/verify": {
      "post": {
        "operationId": "AuthenticationController_verifyPhone",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PhoneVerifyDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/login": {
      "post": {
        "operationId": "AuthenticationController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/login/2fa": {
      "post": {
        "operationId": "AuthenticationController_verifyLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Verify2FADto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/me": {
      "get": {
        "operationId": "AuthenticationController_me",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/logout": {
      "post": {
        "operationId": "AuthenticationController_logout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogoutDeviceDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/username": {
      "put": {
        "operationId": "AuthenticationController_updateUsername",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/password": {
      "put": {
        "operationId": "AuthenticationController_updatePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/email": {
      "put": {
        "operationId": "AuthenticationController_updateEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StartChangeEmailDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/email/verify": {
      "post": {
        "operationId": "AuthenticationController_verifyUpdateEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangeEmailDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/phone": {
      "put": {
        "operationId": "AuthenticationController_updatePhone",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StartChangePhoneDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/2fa": {
      "put": {
        "operationId": "AuthenticationController_enableDisable2FA",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Enable2FADto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/preferences": {
      "put": {
        "operationId": "AuthenticationController_updatePreferences",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePreferenceDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/phone/verify": {
      "post": {
        "operationId": "AuthenticationController_verifyUpdatePhone",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangePhoneDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/twitter": {
      "get": {
        "operationId": "AuthenticationController_twitter",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/twitter/callback": {
      "get": {
        "operationId": "AuthenticationController_twitterCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/link_twitter": {
      "get": {
        "operationId": "AuthenticationController_linkTwitter",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/link_twitter/callback": {
      "get": {
        "operationId": "AuthenticationController_linkTwitterCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/google": {
      "get": {
        "operationId": "AuthenticationController_googleLogin",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/google/callback": {
      "get": {
        "operationId": "AuthenticationController_googleCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/google/brand/callback": {
      "get": {
        "operationId": "AuthenticationController_googleBrandCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/facebook": {
      "get": {
        "operationId": "AuthenticationController_facebookLogin",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/facebook/callback": {
      "get": {
        "operationId": "AuthenticationController_facebookCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/password/forgot": {
      "post": {
        "operationId": "AuthenticationController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgotPasswordDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/password/reset": {
      "post": {
        "operationId": "AuthenticationController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Authentication"]
      }
    },
    "/user/me/devices": {
      "get": {
        "operationId": "AuthenticationController_getDevices",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/me/devices/{id}": {
      "put": {
        "operationId": "AuthenticationController_updateDevice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateDeviceTokenDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Authentication"],
        "security": [{ "bearer": [] }]
      }
    },
    "/category": {
      "post": {
        "operationId": "CategoryManagementController_createCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCategoryDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Category"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "CategoryManagementController_getAllCategories",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["brand", "product", "sub-category"],
              "type": "string"
            }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Category"],
        "security": [{ "bearer": [] }]
      }
    },
    "/category/{categoryId}": {
      "put": {
        "operationId": "CategoryManagementController_updateCategory",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategoryDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Category"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "CategoryManagementController_deleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Category"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product": {
      "post": {
        "operationId": "ProductManagementController_createProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProductDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "ProductManagementController_getAllProducts",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "subCategoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "filterBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["MOST_RECENT", "LOW_IN_STOCK"],
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "collectionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/create": {
      "post": {
        "operationId": "ProductManagementController_createProductWithApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProductDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/{productId}": {
      "put": {
        "operationId": "ProductManagementController_updateProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "ProductManagementController_deleteProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "ProductManagementController_getProductById",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/update/{productId}": {
      "put": {
        "operationId": "ProductManagementController_updateProductWithAPIKey",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/variant/delete": {
      "delete": {
        "operationId": "ProductManagementController_deleteVariant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteVariantDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/images": {
      "get": {
        "operationId": "ProductManagementController_getProductImages",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "subCategoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "filterBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["MOST_RECENT", "LOW_IN_STOCK"],
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "collectionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/images/{imageId}": {
      "delete": {
        "operationId": "ProductManagementController_deleteProductImage",
        "parameters": [
          {
            "name": "imageId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/delete/{productId}": {
      "delete": {
        "operationId": "ProductManagementController_deleteProductWithApiKey",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/archive/{productId}": {
      "put": {
        "operationId": "ProductManagementController_archiveProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/product/unarchive/{productId}": {
      "put": {
        "operationId": "ProductManagementController_unarchiveProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Products"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customer": {
      "put": {
        "operationId": "CustomerManagementController_updateCustomer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCustomerDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Customer"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customer/setup-wallet-address": {
      "put": {
        "operationId": "CustomerManagementController_setWalletAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerWalletDto"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Customer"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customer/customer-exist": {
      "get": {
        "operationId": "CustomerManagementController_verifyBrandMemberExistingUser",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "identifierType",
            "required": true,
            "in": "query",
            "schema": { "enum": ["email", "phone"], "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Customer"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand": {
      "put": {
        "operationId": "BrandManagementController_updateBrand",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBrandDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "BrandManagementController_getAllFilteredBrands",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "disabled",
            "required": true,
            "in": "query",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/update": {
      "put": {
        "operationId": "BrandManagementController_updateBrandViaApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBrandDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/admin/brands": {
      "get": {
        "operationId": "BrandManagementController_getAllBrandsForAdmin",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "disabled",
            "required": true,
            "in": "query",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/campaign": {
      "post": {
        "operationId": "BrandManagementController_createCampaign",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCampaignDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "BrandManagementController_getCampaigns",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["pending", "active", "ended"],
              "type": "string"
            }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/campaign/fund": {
      "post": {
        "operationId": "BrandManagementController_fundAndActivateCampaign",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FundCampaignDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/campaign/{id}": {
      "put": {
        "operationId": "BrandManagementController_updateCampaign",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCampaignDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/campaign/{id}/end": {
      "put": {
        "operationId": "BrandManagementController_endCampaign",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/{id}": {
      "get": {
        "operationId": "BrandManagementController_getBrandById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/public/{id}": {
      "get": {
        "operationId": "BrandManagementController_getBrandByIdPublic",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member/roles/owner": {
      "get": {
        "operationId": "BrandManagementController_getBrandOwner",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/members/all": {
      "get": {
        "operationId": "BrandManagementController_getBrandMembers",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member/{id}/role": {
      "put": {
        "operationId": "BrandManagementController_updateBrandMemberRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMemberDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member/{id}": {
      "put": {
        "operationId": "BrandManagementController_updateBrandMember",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMemberDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "BrandManagementController_removeBrandMember",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member": {
      "put": {
        "operationId": "BrandManagementController_updateBrandMemberDetail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMemberDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "BrandManagementController_createBrandMember",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateMemberDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/all": {
      "get": {
        "operationId": "BrandManagementController_getCustomers",
        "parameters": [
          {
            "name": "filterBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["ALL", "MOST_ACTIVE", "MOST_RECENT"],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "isOnboarded",
            "required": true,
            "in": "query",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/active": {
      "get": {
        "operationId": "BrandManagementController_getActivelySpendingCustomers",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/{id}": {
      "delete": {
        "operationId": "BrandManagementController_deleteBrandCustomer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/create": {
      "post": {
        "operationId": "BrandManagementController_createBrandCustomer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCustomerDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/bulk-create": {
      "post": {
        "operationId": "BrandManagementController_bulkCreateBrandCustomers",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/api_key/create": {
      "post": {
        "operationId": "BrandManagementController_createBrandCustomerWithApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCustomerDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/customers/api_key/bulk-create": {
      "post": {
        "operationId": "BrandManagementController_bulkCreateBrandCustomersWithApiKey",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member/verify-email/{code}/{brandId}": {
      "get": {
        "operationId": "BrandManagementController_verifyBrandMemberEmail",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/member/join/{email}/{brandId}": {
      "get": {
        "operationId": "BrandManagementController_verifyBrandMemberExistingUser",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/onboard": {
      "post": {
        "operationId": "BrandManagementController_onboardBrand",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OnboardBrandDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/onboard/runtime": {
      "post": {
        "operationId": "BrandManagementController_onboardBrandToRuntime",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OnboardBrandDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/onboard/protocol": {
      "post": {
        "operationId": "BrandManagementController_onboardBrandToProtocol",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OnboardBrandDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brand/disable/{id}": {
      "post": {
        "operationId": "BrandManagementController_disableBrand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"],
        "security": [{ "bearer": [] }]
      }
    },
    "/upload/image-signature": {
      "get": {
        "operationId": "UploadController_getUploadImageSignature",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Upload"]
      }
    },
    "/collections": {
      "post": {
        "operationId": "CollectionManagementController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCollectionDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "CollectionManagementController_get",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "draft",
                "published",
                "archived",
                "private",
                "paused",
                "pending",
                "active",
                "expired",
                "completed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      }
    },
    "/collections/{id}": {
      "put": {
        "operationId": "CollectionManagementController_createCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCollectionDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "CollectionManagementController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      }
    },
    "/collections/{id}/user": {
      "delete": {
        "operationId": "CollectionManagementController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      }
    },
    "/collections/{id}/brand": {
      "delete": {
        "operationId": "CollectionManagementController_deleteBrandCollection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Collection"],
        "security": [{ "bearer": [] }]
      }
    },
    "/follow": {
      "post": {
        "operationId": "FollowManagementController_follow",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FollowDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Followers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/follow/unfollow": {
      "post": {
        "operationId": "FollowManagementController_unfollow",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FollowDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Followers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/follow/brand": {
      "get": {
        "operationId": "FollowManagementController_getBrandFollow",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Followers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/follow/user": {
      "get": {
        "operationId": "FollowManagementController_getUserFollowedBrands",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Followers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/follow/check/{brandId}": {
      "get": {
        "operationId": "FollowManagementController_checkIsFollowing",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Followers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/like": {
      "post": {
        "operationId": "LikeManagementController_like",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LikeDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Like"],
        "security": [{ "bearer": [] }]
      }
    },
    "/like/unlike": {
      "post": {
        "operationId": "LikeManagementController_unlike",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LikeDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Like"],
        "security": [{ "bearer": [] }]
      }
    },
    "/like/user": {
      "get": {
        "operationId": "LikeManagementController_getUserLikedBrands",
        "parameters": [
          {
            "name": "orderBy",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "collectionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Like"],
        "security": [{ "bearer": [] }]
      }
    },
    "/like/check": {
      "get": {
        "operationId": "LikeManagementController_checkLike",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "collectionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Like"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer": {
      "post": {
        "operationId": "OfferManagementController_createOffer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOfferDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "OfferManagementController_getOffers",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "subCategory",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["draft", "published", "archived", "paused", "expired"],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "MOST_VIEWED",
                "MOST_SALES",
                "MOST_RECENT",
                "LOW_IN_STOCK"
              ],
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "TRENDING",
                "NEW",
                "PRICE_HIGH_TO_LOW",
                "PRICE_LOW_TO_HIGH",
                "POPULAR",
                "EXPIRING"
              ],
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/{offerId}": {
      "put": {
        "operationId": "OfferManagementController_updateOffer",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateOfferDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "OfferManagementController_deleteProduct",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/top/user": {
      "get": {
        "operationId": "OfferManagementController_getTopOffersForUser",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "subCategory",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["draft", "published", "archived", "paused", "expired"],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "MOST_VIEWED",
                "MOST_SALES",
                "MOST_RECENT",
                "LOW_IN_STOCK"
              ],
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "TRENDING",
                "NEW",
                "PRICE_HIGH_TO_LOW",
                "PRICE_LOW_TO_HIGH",
                "POPULAR",
                "EXPIRING"
              ],
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/brand": {
      "get": {
        "operationId": "OfferManagementController_getBrandOffers",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "subCategory",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["draft", "published", "archived", "paused", "expired"],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "MOST_VIEWED",
                "MOST_SALES",
                "MOST_RECENT",
                "LOW_IN_STOCK"
              ],
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "TRENDING",
                "NEW",
                "PRICE_HIGH_TO_LOW",
                "PRICE_LOW_TO_HIGH",
                "POPULAR",
                "EXPIRING"
              ],
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "order must be of this format \"name:ASC\" or \"name:DESC\"",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/detail/{offerId}": {
      "get": {
        "operationId": "OfferManagementController_getOfferById",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/{offerCode}": {
      "get": {
        "operationId": "OfferManagementController_getOfferByCode",
        "parameters": [
          {
            "name": "offerCode",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "sessionId",
            "required": true,
            "in": "query",
            "description": "This is the session id of the user",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/{offerCode}/user": {
      "get": {
        "operationId": "OfferManagementController_getOfferForLoggedInUser",
        "parameters": [
          {
            "name": "offerCode",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "sessionId",
            "required": true,
            "in": "query",
            "description": "This is the session id of the user",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/offer/user/redeemed": {
      "get": {
        "operationId": "OfferManagementController_geOffersBasedOnRedeemedOffers",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Offers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward": {
      "post": {
        "operationId": "RewardManagementController_createReward",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRewardDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "RewardManagementController_getRewards",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/complete": {
      "put": {
        "operationId": "RewardManagementController_completeReward",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardCreationDto"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/{rewardId}": {
      "put": {
        "operationId": "RewardManagementController_updateReward",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRewardDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "RewardManagementController_deleteReward",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/api_key": {
      "post": {
        "operationId": "RewardManagementController_createRewardUseApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRewardDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/brand/{rewardId}": {
      "get": {
        "operationId": "RewardManagementController_getRewardBrand",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/brand-rewards": {
      "get": {
        "operationId": "RewardManagementController_checkApiKey",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/name-symbol/lookup": {
      "get": {
        "operationId": "RewardManagementController_checkUniqueRewardNameAndSymbol",
        "parameters": [
          {
            "name": "rewardName",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "rewardSymbol",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/contract/{contractAddress}": {
      "get": {
        "operationId": "RewardManagementController_getRewardByContractAddress",
        "parameters": [
          {
            "name": "contractAddress",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/add-reward-points": {
      "post": {
        "operationId": "RewardManagementController_updateBatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBatchDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/issue-reward": {
      "post": {
        "operationId": "RewardManagementController_issueReward",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBatchDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/issue-and-distribute": {
      "post": {
        "operationId": "RewardManagementController_issueAndDistributeReward",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBatchDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/batch/{batchId}": {
      "get": {
        "operationId": "RewardManagementController_getBatch",
        "parameters": [
          {
            "name": "batchId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/batch": {
      "get": {
        "operationId": "RewardManagementController_getBatches",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/pre-distribute/{rewardId}": {
      "get": {
        "operationId": "RewardManagementController_preDistributeBatch",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/distribute": {
      "post": {
        "operationId": "RewardManagementController_distributeBatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DistributeBatchDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/distribute/{rewardId}": {
      "post": {
        "operationId": "RewardManagementController_distributeWithApiKey",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeBatchWithApiKeyDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/push-transaction": {
      "post": {
        "operationId": "RewardManagementController_spendReward",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PushTransactionDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/get-treasury-permit": {
      "post": {
        "operationId": "RewardManagementController_getTreasuryPermitAsync",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetTreasuryPermitDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/registry/syncedCustomer": {
      "post": {
        "operationId": "RewardManagementController_getRegistryByIdentifer",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/draft": {
      "get": {
        "operationId": "RewardManagementController_getDraftReward",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/get-reward/{rewardId}": {
      "get": {
        "operationId": "RewardManagementController_getReward",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/reward/registry": {
      "get": {
        "operationId": "RewardManagementController_getRegistry",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "transactionsType",
            "required": true,
            "in": "query",
            "schema": { "enum": ["DEBIT", "CREDIT"], "type": "string" }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reward"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api_key": {
      "post": {
        "operationId": "ApiKeyManagementController_createApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateApiDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["API Key"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "ApiKeyManagementController_getApiKeysByBrandId",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["API Key"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api_key/{id}": {
      "delete": {
        "operationId": "ApiKeyManagementController_deleteApiKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["API Key"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api_key/get-external-keys": {
      "get": {
        "operationId": "ApiKeyManagementController_getMagicKey",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["API Key"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api_key/brand": {
      "get": {
        "operationId": "ApiKeyManagementController_checkApiKey",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["API Key"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/redeem-offer": {
      "post": {
        "operationId": "OrderManagementController_redeem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOrderDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/user": {
      "get": {
        "operationId": "OrderManagementController_getUserOrders",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterBy",
            "required": false,
            "in": "query",
            "description": "Filter by status",
            "schema": { "$ref": "#/components/schemas/OrderFilter" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/brand": {
      "get": {
        "operationId": "OrderManagementController_getBranOrders",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterBy",
            "required": false,
            "in": "query",
            "description": "Filter by status",
            "schema": { "$ref": "#/components/schemas/OrderFilter" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "type": "date" }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/{id}": {
      "get": {
        "operationId": "OrderManagementController_getOrderById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/mark-as-redeemed/{id}": {
      "post": {
        "operationId": "OrderManagementController_markOrderAsRedeemed",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/use-coupon": {
      "post": {
        "operationId": "OrderManagementController_useCoupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UseCouponDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/complete": {
      "post": {
        "operationId": "OrderManagementController_completeOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CompleteOrderDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/order/redeem/confirm-redeem-mock": {
      "get": {
        "operationId": "OrderManagementController_useCouponMock",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Order"],
        "security": [{ "bearer": [] }]
      }
    },
    "/cost/request": {
      "post": {
        "operationId": "CostManagementController_createPaymentRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentRequestDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Cost Module"],
        "security": [{ "bearer": [] }]
      }
    },
    "/cost/request/in-app": {
      "post": {
        "operationId": "CostManagementController_createPaymentRequestInApp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequestInAppDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Cost Module"],
        "security": [{ "bearer": [] }]
      }
    },
    "/cost/request/check-status/{taskId}": {
      "get": {
        "operationId": "CostManagementController_checkStatus",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Cost Module"],
        "security": [{ "bearer": [] }]
      }
    },
    "/cost/set-topup-amount": {
      "post": {
        "operationId": "CostManagementController_setAutoTopUpAmount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SetAutoTopupAmountDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Cost Module"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/add-payment-method": {
      "post": {
        "operationId": "PaymentModuleController_savePaymentMethodToWallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LinkCardDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/plan": {
      "post": {
        "operationId": "PaymentModuleController_createSubscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePlanDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "PaymentModuleController_getSubscriptionPlans",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/methods": {
      "get": {
        "operationId": "PaymentModuleController_getPaymentMethods",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/methods/{id}": {
      "delete": {
        "operationId": "PaymentModuleController_deleteBrandPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/plan/subscribe": {
      "post": {
        "operationId": "PaymentModuleController_subscribeToPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscribeDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/invoice": {
      "get": {
        "operationId": "PaymentModuleController_getInvoices",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/invoice/pay": {
      "post": {
        "operationId": "PaymentModuleController_payInvoice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PayInvoiceDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/admin/invoice/due": {
      "get": {
        "operationId": "PaymentModuleController_getDueInvoices",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/currencies": {
      "get": {
        "operationId": "PaymentModuleController_getCurrency",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/create-currencies": {
      "post": {
        "operationId": "PaymentModuleController_createCurrency",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCurrencyDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/region": {
      "post": {
        "operationId": "PaymentModuleController_createRegion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRegionDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "PaymentModuleController_getRegions",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/region/{id}": {
      "put": {
        "operationId": "PaymentModuleController_updateRegion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRegionDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/voucher": {
      "post": {
        "operationId": "PaymentModuleController_createVoucher",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateVoucherDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/voucher/{code}": {
      "get": {
        "operationId": "PaymentModuleController_getVoucherByCode",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/brand-initial-onboarding": {
      "post": {
        "operationId": "PaymentModuleController_manualTopUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ManualTopupDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/me-credit-balance": {
      "get": {
        "operationId": "PaymentModuleController_getMeCredits",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/admin/me-credit-balance/{brandId}": {
      "get": {
        "operationId": "PaymentModuleController_getMeCreditsAdmin",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/admin/me-credit-balance": {
      "post": {
        "operationId": "PaymentModuleController_issueMeCredits",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/IssueMeCreditsDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment/admin/remove-unused-credit": {
      "post": {
        "operationId": "PaymentModuleController_RemoveMeCredits",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RemoveMeCreditsDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"],
        "security": [{ "bearer": [] }]
      }
    },
    "/notification": {
      "get": {
        "operationId": "NotificationController_getNotifications",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "types",
            "required": true,
            "in": "query",
            "description": "Array of notification types",
            "schema": { "type": "array", "items": {} }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      }
    },
    "/notification/send-bulk": {
      "post": {
        "operationId": "NotificationController_sendBulkNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendBulkNotificationDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      }
    },
    "/notification/send": {
      "post": {
        "operationId": "NotificationController_sendNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendNotificationDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      }
    },
    "/notification/{id}": {
      "get": {
        "operationId": "NotificationController_getNotificationById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "NotificationController_deleteNotificationById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      }
    },
    "/notification/clear/all": {
      "delete": {
        "operationId": "NotificationController_clearNotification",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Notification"],
        "security": [{ "bearer": [] }]
      }
    },
    "/debug-sentry": {
      "get": {
        "operationId": "DebugController_firstTestSentry",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/debug-sentry-test": {
      "get": {
        "operationId": "DebugController_secondTestSentry",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/debug-sentry-testing": {
      "get": {
        "operationId": "DebugController_thirdTestSentry",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/test-error": {
      "get": {
        "operationId": "DebugController_fourthTestSentry",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/review": {
      "post": {
        "operationId": "ReviewManagementController_createApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReviewDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reviews"],
        "security": [{ "bearer": [] }]
      }
    },
    "/review/brand": {
      "get": {
        "operationId": "ReviewManagementController_getBrandReviews",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "offerId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reviews"],
        "security": [{ "bearer": [] }]
      }
    },
    "/review/user": {
      "get": {
        "operationId": "ReviewManagementController_getUserReviews",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "offerId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reviews"],
        "security": [{ "bearer": [] }]
      }
    },
    "/review/offer": {
      "get": {
        "operationId": "ReviewManagementController_getOfferReviews",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "offerId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Reviews"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/create": {
      "post": {
        "operationId": "TasksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTaskDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/next": {
      "get": {
        "operationId": "TasksController_findNextTask",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/active": {
      "get": {
        "operationId": "TasksController_findActiveTasks",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "operationId": "TasksController_findOne",
        "parameters": [
          {
            "name": "task_id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/join": {
      "post": {
        "operationId": "TasksController_joinTask",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/joined_tasks": {
      "get": {
        "operationId": "TasksController_getUsersTasks",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/next_step": {
      "post": {
        "operationId": "TasksController_moveToSecondStep",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/joined_tasks/{id}": {
      "get": {
        "operationId": "TasksController_getUsersSingleTasks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/cancel_task/{id}": {
      "post": {
        "operationId": "TasksController_cancelledTask",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/complete_user_task": {
      "post": {
        "operationId": "TasksController_completeTask",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/brandTasks": {
      "get": {
        "operationId": "TasksController_findBrandTasks",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/update": {
      "put": {
        "operationId": "TasksController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/updateStatus": {
      "put": {
        "operationId": "TasksController_updateStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateStatusDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/respond": {
      "post": {
        "operationId": "TasksController_respondToTask",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskResponseDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/activities/{task_id}": {
      "get": {
        "operationId": "TasksController_getWinners",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tasks/test_payout": {
      "post": {
        "operationId": "TasksController_distributeTaskRewardWithPrivateKey",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["task"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/all": {
      "get": {
        "operationId": "AnalyticsManagementController_getAllBrandAnalytics",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["day", "week", "month", "year"],
              "type": "string"
            }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/total-offers": {
      "get": {
        "operationId": "AnalyticsManagementController_getTotalNumberOfOffers",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/total-offers-views": {
      "get": {
        "operationId": "AnalyticsManagementController_getTotalNumberOfViewsByOffer",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/total-issued-rewards": {
      "get": {
        "operationId": "AnalyticsManagementController_totalRewardIssuedToCustomers",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/total-active-tasks": {
      "get": {
        "operationId": "AnalyticsManagementController_totalActiveTasks",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/review-analytics": {
      "get": {
        "operationId": "AnalyticsManagementController_ratingAnalytics",
        "parameters": [
          {
            "name": "offerId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/circular-supply": {
      "get": {
        "operationId": "AnalyticsManagementController_getCirculatingSupply",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "sortBy",
            "required": true,
            "in": "query",
            "schema": { "type": "enum" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/transactions": {
      "get": {
        "operationId": "AnalyticsManagementController_getRewardTransactions",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/reward-holders": {
      "get": {
        "operationId": "AnalyticsManagementController_getRewardHolders",
        "parameters": [
          {
            "name": "rewardId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/store/analytics/admin/dashboard": {
      "get": {
        "operationId": "AnalyticsManagementController_getAdminDashboard",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["day", "week", "month", "year"],
              "type": "string"
            }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Analytics"],
        "security": [{ "bearer": [] }]
      }
    },
    "/settings/admin-settings": {
      "get": {
        "operationId": "SettingsModuleController_getPublicSettings",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["settings"],
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "SettingsModuleController_updateSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSettingsDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["settings"],
        "security": [{ "bearer": [] }]
      }
    },
    "/audit-trail": {
      "get": {
        "operationId": "AuditTrailController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Audit Trail"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": {
    "title": "Me Protocol",
    "description": "Me Protocol",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter Bearer token",
        "in": "header"
      }
    },
    "schemas": {
      "EmailSignupDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "name": { "type": "string" },
          "userType": {
            "type": "string",
            "enum": ["brand", "user", "brand_member", "admin"]
          },
          "walletAddress": { "type": "string" }
        },
        "required": [
          "email",
          "password",
          "confirmPassword",
          "name",
          "userType",
          "walletAddress"
        ]
      },
      "EmailVerifyDto": {
        "type": "object",
        "properties": { "code": { "type": "number" } },
        "required": ["code"]
      },
      "PhoneSignupDto": {
        "type": "object",
        "properties": {
          "phone": { "type": "string" },
          "countryCode": { "type": "string" },
          "countryAbbr": { "type": "string" },
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "name": { "type": "string" },
          "userType": { "type": "string" }
        },
        "required": [
          "phone",
          "countryCode",
          "countryAbbr",
          "password",
          "confirmPassword",
          "name",
          "userType"
        ]
      },
      "PhoneVerifyDto": {
        "type": "object",
        "properties": { "code": { "type": "number" } },
        "required": ["code"]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "identifier": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["identifier", "password"]
      },
      "Verify2FADto": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "code": { "type": "number" }
        },
        "required": ["userId", "code"]
      },
      "LogoutDeviceDto": {
        "type": "object",
        "properties": { "deviceId": { "type": "string" } },
        "required": ["deviceId"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": { "username": { "type": "string" } },
        "required": ["username"]
      },
      "PasswordDto": {
        "type": "object",
        "properties": {
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "currentPassword": { "type": "string" }
        },
        "required": ["password", "confirmPassword", "currentPassword"]
      },
      "StartChangeEmailDto": {
        "type": "object",
        "properties": { "email": { "type": "string" } },
        "required": ["email"]
      },
      "ChangeEmailDto": {
        "type": "object",
        "properties": {
          "code": { "type": "number" },
          "email": { "type": "string" }
        },
        "required": ["code", "email"]
      },
      "StartChangePhoneDto": {
        "type": "object",
        "properties": {
          "phone": { "type": "string" },
          "countryCode": { "type": "string" }
        },
        "required": ["phone", "countryCode"]
      },
      "Enable2FADto": {
        "type": "object",
        "properties": {
          "enable": { "type": "boolean" },
          "twoFAType": { "type": "string" }
        },
        "required": ["enable", "twoFAType"]
      },
      "UpdatePreferenceDto": {
        "type": "object",
        "properties": {
          "language": { "type": "string" },
          "timezone": { "type": "string" },
          "region": { "type": "string" },
          "currency": { "type": "string" }
        },
        "required": ["language", "timezone", "region", "currency"]
      },
      "ChangePhoneDto": {
        "type": "object",
        "properties": {
          "code": { "type": "number" },
          "phone": { "type": "string" },
          "countryCode": { "type": "string" },
          "countryName": { "type": "string" }
        },
        "required": ["code", "phone", "countryCode", "countryName"]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": { "identifier": { "type": "string" } },
        "required": ["identifier"]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "currentPassword": { "type": "string" },
          "userId": { "type": "string" },
          "code": { "type": "number" }
        },
        "required": [
          "password",
          "confirmPassword",
          "currentPassword",
          "userId",
          "code"
        ]
      },
      "UpdateDeviceTokenDto": {
        "type": "object",
        "properties": { "device_token": { "type": "string" } },
        "required": ["device_token"]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "image": { "type": "string" },
          "banner": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["brand", "product", "sub-category"]
          },
          "parentId": { "type": "string" }
        },
        "required": [
          "name",
          "description",
          "image",
          "banner",
          "type",
          "parentId"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "image": { "type": "string" },
          "banner": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["brand", "product", "sub-category"]
          }
        },
        "required": ["name", "description", "image", "banner", "type"]
      },
      "VariantOptionDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "value": { "type": "string" },
          "price": { "type": "number" },
          "inventory": { "type": "number" }
        },
        "required": ["name", "value", "price", "inventory"]
      },
      "VariantDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "isCustom": { "type": "boolean" },
          "options": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/VariantOptionDto" }
          }
        },
        "required": ["name", "isCustom", "options"]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "categoryId": { "type": "string" },
          "productImages": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "string" },
          "price": { "type": "number" },
          "inventory": { "type": "number" },
          "isUnlimited": { "type": "boolean" },
          "subCategoryId": { "type": "string" },
          "variants": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/VariantDto" }
          },
          "collections": { "type": "array", "items": { "type": "string" } },
          "productUrl": { "type": "string" },
          "minAge": { "type": "number" },
          "currencyId": { "type": "string" },
          "coverImage": { "type": "string" },
          "regions": { "type": "array", "items": { "type": "string" } },
          "productIdOnBrandSite": { "type": "string" },
          "currencyCode": { "type": "string" }
        },
        "required": [
          "name",
          "description",
          "categoryId",
          "productImages",
          "status",
          "price",
          "inventory",
          "isUnlimited",
          "subCategoryId",
          "variants",
          "collections",
          "productUrl",
          "minAge",
          "currencyId",
          "coverImage",
          "regions",
          "productIdOnBrandSite",
          "currencyCode"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "categoryId": { "type": "string" },
          "productImages": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "string" },
          "price": { "type": "number" },
          "inventory": { "type": "number" },
          "isUnlimited": { "type": "boolean" },
          "subCategoryId": { "type": "string" },
          "variants": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/VariantDto" }
          },
          "collections": { "type": "array", "items": { "type": "string" } },
          "productUrl": { "type": "string" },
          "minAge": { "type": "number" },
          "currencyId": { "type": "string" },
          "coverImage": { "type": "string" },
          "productIdOnBrandSite": { "type": "string" },
          "regions": { "type": "array", "items": { "type": "string" } },
          "currencyCode": { "type": "string" }
        },
        "required": [
          "name",
          "description",
          "categoryId",
          "productImages",
          "status",
          "price",
          "inventory",
          "isUnlimited",
          "subCategoryId",
          "variants",
          "collections",
          "productUrl",
          "minAge",
          "currencyId",
          "coverImage",
          "productIdOnBrandSite",
          "regions",
          "currencyCode"
        ]
      },
      "DeleteVariantDto": {
        "type": "object",
        "properties": { "variantId": { "type": "string" } },
        "required": ["variantId"]
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "country": { "type": "string" },
          "bio": { "type": "string" },
          "location": { "type": "string" },
          "weight": { "type": "string" },
          "height": { "type": "string" },
          "profilePicture": { "type": "string" },
          "walletAddress": { "type": "string" },
          "login_2fa": { "type": "boolean" },
          "deposit_2fa": { "type": "boolean" },
          "withdraw_2fa": { "type": "boolean" },
          "sizes": { "type": "array", "items": { "type": "string" } },
          "news_notifications": { "type": "string" },
          "offer_notifications": { "type": "string" },
          "brand_notifications": { "type": "string" },
          "expiring_notifications": { "type": "string" },
          "point_notifications": { "type": "string" },
          "order_notifications": { "type": "string" },
          "other_notifications": { "type": "string" },
          "firstTimeLogin": { "type": "string" }
        },
        "required": [
          "name",
          "country",
          "bio",
          "location",
          "weight",
          "height",
          "profilePicture",
          "walletAddress",
          "login_2fa",
          "deposit_2fa",
          "withdraw_2fa",
          "sizes",
          "news_notifications",
          "offer_notifications",
          "brand_notifications",
          "expiring_notifications",
          "point_notifications",
          "order_notifications",
          "other_notifications",
          "firstTimeLogin"
        ]
      },
      "UpdateCustomerWalletDto": {
        "type": "object",
        "properties": {
          "walletAddress": { "type": "string" },
          "walletVersion": { "type": "number" }
        },
        "required": ["walletAddress", "walletVersion"]
      },
      "BrandStore": {
        "type": "object",
        "properties": {
          "streetAddress": { "type": "string" },
          "longitude": { "type": "number" },
          "latitude": { "type": "number" }
        },
        "required": ["streetAddress", "longitude", "latitude"]
      },
      "UpdateBrandDto": {
        "type": "object",
        "properties": {
          "website": { "type": "string" },
          "location": { "type": "string" },
          "categoryId": { "type": "string" },
          "revenueRange": { "type": "string" },
          "vatTaxId": { "type": "string" },
          "ecommercePlatform": { "type": "string" },
          "loyaltyProgram": { "type": "string" },
          "slug": { "type": "string" },
          "slogan": { "type": "string" },
          "socialMediaLinks": {
            "type": "array",
            "items": { "type": "object" }
          },
          "logo_icon": { "type": "string" },
          "description": { "type": "string" },
          "logo_white": { "type": "string" },
          "logo_white_icon": { "type": "string" },
          "logo": { "type": "string" },
          "banners": { "type": "array", "items": { "type": "string" } },
          "supportPhoneNumber": { "type": "string" },
          "listOnStore": { "type": "boolean" },
          "vaultPercentage": { "type": "number" },
          "noOfCustomers": { "type": "number" },
          "currency": { "type": "string" },
          "countryCode": { "type": "string" },
          "country": { "type": "string" },
          "region": { "type": "string" },
          "additionalAddress": { "type": "string" },
          "city": { "type": "string" },
          "postalCode": { "type": "number" },
          "firstTimeLogin": { "type": "string" },
          "brandStore": { "$ref": "#/components/schemas/BrandStore" },
          "regions": { "type": "array", "items": { "type": "string" } },
          "onlineStoreType": { "type": "string" },
          "woocommerceConsumerKey": { "type": "string" },
          "woocommerceConsumerSecret": { "type": "string" },
          "online_store_url": { "type": "string" },
          "shopify_consumer_key": { "type": "string" },
          "shopify_consumer_secret": { "type": "string" }
        },
        "required": [
          "website",
          "location",
          "categoryId",
          "revenueRange",
          "vatTaxId",
          "ecommercePlatform",
          "loyaltyProgram",
          "slug",
          "slogan",
          "socialMediaLinks",
          "logo_icon",
          "description",
          "logo_white",
          "logo_white_icon",
          "logo",
          "banners",
          "supportPhoneNumber",
          "listOnStore",
          "vaultPercentage",
          "noOfCustomers",
          "currency",
          "countryCode",
          "country",
          "region",
          "additionalAddress",
          "city",
          "postalCode",
          "firstTimeLogin",
          "brandStore",
          "regions",
          "onlineStoreType",
          "woocommerceConsumerKey",
          "woocommerceConsumerSecret",
          "online_store_url",
          "shopify_consumer_key",
          "shopify_consumer_secret"
        ]
      },
      "CreateCampaignDto": {
        "type": "object",
        "properties": {
          "totalUsers": { "type": "number" },
          "rewardPerUser": { "type": "number" },
          "type": { "type": "string", "enum": ["signup_reward"] },
          "rewardId": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "end_date": { "format": "date-time", "type": "string" }
        },
        "required": [
          "totalUsers",
          "rewardPerUser",
          "type",
          "rewardId",
          "name",
          "description",
          "end_date"
        ]
      },
      "FundCampaignDto": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "example": {
              "from": "0x000000",
              "nonce": 0,
              "data": "0x000000",
              "r": "0x000000",
              "s": "0x000000",
              "v": "0x000000",
              "hash": "0x000000"
            }
          },
          "campaignId": { "type": "string" }
        },
        "required": ["params", "campaignId"]
      },
      "UpdateCampaignDto": {
        "type": "object",
        "properties": {
          "totalUsers": { "type": "number" },
          "rewardPerUser": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "end_date": { "format": "date-time", "type": "string" }
        },
        "required": [
          "totalUsers",
          "rewardPerUser",
          "name",
          "description",
          "end_date"
        ]
      },
      "UpdateMemberDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "profilePicture": { "type": "string" },
          "role": {
            "type": "string",
            "enum": ["owner", "collaborator", "manager", "assistant"]
          }
        },
        "required": ["name", "profilePicture", "role"]
      },
      "CreateMemberDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "role": {
            "type": "string",
            "enum": ["owner", "collaborator", "manager", "assistant"]
          },
          "email": { "type": "string" }
        },
        "required": ["name", "role", "email"]
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "phone": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["phone", "email", "name"]
      },
      "OnboardBrandDto": {
        "type": "object",
        "properties": {
          "walletAddress": { "type": "string" },
          "website": { "type": "string" }
        },
        "required": ["walletAddress", "website"]
      },
      "CreateCollectionDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "image": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "archived",
              "private",
              "paused",
              "pending",
              "active",
              "expired",
              "completed"
            ]
          },
          "products": { "type": "array", "items": { "type": "string" } },
          "isPublic": { "type": "boolean" }
        },
        "required": [
          "name",
          "description",
          "image",
          "status",
          "products",
          "isPublic"
        ]
      },
      "UpdateCollectionDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "image": { "type": "string" },
          "userId": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "archived",
              "private",
              "paused",
              "pending",
              "active",
              "expired",
              "completed"
            ]
          },
          "brandId": { "type": "string" },
          "products": { "type": "array", "items": { "type": "string" } }
        },
        "required": [
          "name",
          "description",
          "image",
          "userId",
          "status",
          "brandId",
          "products"
        ]
      },
      "FollowDto": {
        "type": "object",
        "properties": { "brandId": { "type": "string" } },
        "required": ["brandId"]
      },
      "LikeDto": {
        "type": "object",
        "properties": {
          "offerId": { "type": "string" },
          "collectionId": { "type": "string" }
        },
        "required": ["offerId", "collectionId"]
      },
      "CreateOfferDto": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "productId": { "type": "string" },
          "offerImages": { "type": "array", "items": { "type": "string" } },
          "originalPrice": { "type": "number" },
          "discountPercentage": { "type": "number" },
          "tokens": { "type": "number" },
          "inventory": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "startDate": { "format": "date-time", "type": "string" },
          "endDate": { "format": "date-time", "type": "string" },
          "rewardId": { "type": "string" },
          "coverImage": { "type": "string" }
        },
        "required": [
          "status",
          "productId",
          "offerImages",
          "originalPrice",
          "discountPercentage",
          "tokens",
          "inventory",
          "name",
          "description",
          "startDate",
          "endDate",
          "rewardId",
          "coverImage"
        ]
      },
      "UpdateOfferDto": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "productId": { "type": "string" },
          "offerImages": { "type": "array", "items": { "type": "string" } },
          "originalPrice": { "type": "number" },
          "discountPercentage": { "type": "number" },
          "tokens": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "startDate": { "format": "date-time", "type": "string" },
          "endDate": { "format": "date-time", "type": "string" },
          "rewardId": { "type": "string" },
          "inventory": { "type": "number" },
          "coverImage": { "type": "string" }
        },
        "required": [
          "status",
          "productId",
          "offerImages",
          "originalPrice",
          "discountPercentage",
          "tokens",
          "name",
          "description",
          "startDate",
          "endDate",
          "rewardId",
          "inventory",
          "coverImage"
        ]
      },
      "CreateRewardDto": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "rewardImage": { "type": "string" },
          "rewardSymbol": { "type": "string" },
          "rewardName": { "type": "string" },
          "autoSyncEnabled": { "type": "boolean" },
          "isBounty": { "type": "boolean" },
          "blockchain": { "type": "string" },
          "acceptedCustomerIdentitytypes": {
            "type": "array",
            "items": { "type": "string" }
          },
          "poolTotalSupply": { "type": "string" },
          "totalSupply": { "type": "string" },
          "rewardDollarPrice": { "type": "string" },
          "rOptimal": { "type": "string" },
          "rewardValueInDollars": { "type": "number" },
          "treasurySupply": { "type": "string" },
          "contractAddress": { "type": "string" },
          "addedLiquidity": { "type": "boolean" },
          "totalVaultSupply": { "type": "number" },
          "availableVaultSupply": { "type": "number" },
          "availableTreasurySupply": { "type": "number" }
        },
        "required": [
          "description",
          "rewardImage",
          "rewardSymbol",
          "rewardName",
          "autoSyncEnabled",
          "isBounty",
          "blockchain",
          "acceptedCustomerIdentitytypes",
          "poolTotalSupply",
          "totalSupply",
          "rewardDollarPrice",
          "rOptimal",
          "rewardValueInDollars",
          "treasurySupply",
          "contractAddress",
          "addedLiquidity",
          "totalVaultSupply",
          "availableVaultSupply",
          "availableTreasurySupply"
        ]
      },
      "UpdateRewardCreationDto": {
        "type": "object",
        "properties": {
          "rewardId": { "type": "string" },
          "rsvParams": {
            "type": "object",
            "example": {
              "from": "0x000000",
              "nonce": 0,
              "data": "0x000000",
              "r": "0x000000",
              "s": "0x000000",
              "v": "0x000000",
              "hash": "0x000000"
            }
          }
        },
        "required": ["rewardId", "rsvParams"]
      },
      "UpdateRewardDto": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "rewardImage": { "type": "string" },
          "autoSyncEnabled": { "type": "boolean" },
          "isBounty": { "type": "boolean" },
          "acceptedCustomerIdentitytypes": {
            "type": "array",
            "items": { "type": "string" }
          },
          "poolTotalSupply": { "type": "string" },
          "totalSupply": { "type": "string" },
          "rewardValueInDollars": { "type": "number" },
          "totalVaultSupply": { "type": "number" },
          "availableVaultSupply": { "type": "number" },
          "availableTreasurySupply": { "type": "number" }
        },
        "required": [
          "description",
          "rewardImage",
          "autoSyncEnabled",
          "isBounty",
          "acceptedCustomerIdentitytypes",
          "poolTotalSupply",
          "totalSupply",
          "rewardValueInDollars",
          "totalVaultSupply",
          "availableVaultSupply",
          "availableTreasurySupply"
        ]
      },
      "UpdateBatchDto": {
        "type": "object",
        "properties": {
          "rewardId": { "type": "string" },
          "description": { "type": "string" },
          "syncData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "identifier": { "type": "string" },
                "identifierType": {
                  "type": "string",
                  "enum": ["email", "phone"]
                },
                "amount": { "type": "number" }
              }
            }
          }
        },
        "required": ["rewardId", "description", "syncData"]
      },
      "DistributeBatchDto": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "example": {
              "from": "0x000000",
              "nonce": 0,
              "data": "0x000000",
              "r": "0x000000",
              "s": "0x000000",
              "v": "0x000000",
              "hash": "0x000000"
            }
          },
          "rewardId": { "type": "string" }
        },
        "required": ["params", "rewardId"]
      },
      "DistributeBatchWithApiKeyDto": { "type": "object", "properties": {} },
      "PushTransactionDto": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "example": {
              "from": "0x000000",
              "nonce": 0,
              "data": "0x000000",
              "r": "0x000000",
              "s": "0x000000",
              "v": "0x000000",
              "hash": "0x000000"
            }
          }
        },
        "required": ["params"]
      },
      "GetTreasuryPermitDto": {
        "type": "object",
        "properties": {
          "spender": { "type": "string" },
          "value": { "type": "string" },
          "brandId": { "type": "string" }
        },
        "required": ["spender", "value", "brandId"]
      },
      "CreateApiDto": {
        "type": "object",
        "properties": { "name": { "type": "string" } },
        "required": ["name"]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "offerId": { "type": "string" },
          "rewardId": { "type": "string" },
          "quantity": { "type": "number" },
          "amount": { "type": "number" }
        },
        "required": ["offerId", "rewardId", "quantity", "amount"]
      },
      "OrderFilter": {
        "type": "string",
        "enum": ["REDEEMED", "UNREDEEMED", "SUCCEDDED", "PROCESSING", "FAILED"]
      },
      "UseCouponDto": {
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "idOnBrandSite": { "type": "string" }
        },
        "required": ["code", "idOnBrandSite"]
      },
      "CompleteOrderDto": {
        "type": "object",
        "properties": {
          "orderId": { "type": "string" },
          "taskId": { "type": "string" },
          "verifier": { "type": "string", "enum": ["gelato", "runtime"] },
          "spendData": { "type": "object" }
        },
        "required": ["orderId", "taskId", "verifier", "spendData"]
      },
      "PaymentRequestDto": {
        "type": "object",
        "properties": {
          "tnxType": { "type": "string" },
          "narration": { "type": "string" },
          "network": { "type": "string" },
          "signature": { "type": "string" },
          "data": { "type": "object" }
        },
        "required": ["tnxType", "narration", "network", "signature", "data"]
      },
      "PaymentRequestInAppDto": {
        "type": "object",
        "properties": {
          "brandId": { "type": "string" },
          "tnxType": { "type": "string" },
          "narration": { "type": "string" },
          "network": { "type": "string" },
          "signature": { "type": "string" },
          "data": { "type": "object" }
        },
        "required": [
          "brandId",
          "tnxType",
          "narration",
          "network",
          "signature",
          "data"
        ]
      },
      "SetAutoTopupAmountDto": {
        "type": "object",
        "properties": { "amount": { "type": "number" } },
        "required": ["amount"]
      },
      "LinkCardDto": {
        "type": "object",
        "properties": { "paymentMethodId": { "type": "string" } },
        "required": ["paymentMethodId"]
      },
      "CreatePlanDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "amount": { "type": "number" },
          "description": { "type": "string" }
        },
        "required": ["name", "amount", "description"]
      },
      "SubscribeDto": {
        "type": "object",
        "properties": {
          "paymentMethodId": { "type": "string" },
          "planId": { "type": "string" },
          "useMeCredit": { "type": "boolean" }
        },
        "required": ["paymentMethodId", "planId", "useMeCredit"]
      },
      "PayInvoiceDto": {
        "type": "object",
        "properties": {
          "paymentMethodId": { "type": "string" },
          "invoiceId": { "type": "string" },
          "useMeCredit": { "type": "boolean" }
        },
        "required": ["paymentMethodId", "invoiceId", "useMeCredit"]
      },
      "CreateCurrencyDto": {
        "type": "object",
        "properties": {
          "value": { "type": "number" },
          "symbol": { "type": "string" },
          "name": { "type": "string" },
          "code": { "type": "string" }
        },
        "required": ["value", "symbol", "name", "code"]
      },
      "CreateRegionDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "code": { "type": "string" },
          "currencyId": { "type": "string" },
          "flag": { "type": "string" }
        },
        "required": ["name", "code", "currencyId", "flag"]
      },
      "UpdateRegionDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "code": { "type": "string" },
          "currencyId": { "type": "string" },
          "flag": { "type": "string" }
        },
        "required": ["name", "code", "currencyId", "flag"]
      },
      "CreateVoucherDto": {
        "type": "object",
        "properties": {
          "vouchers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "brandId": { "type": "string" },
                "planId": { "type": "string" },
                "discount": { "type": "number" },
                "usageLimit": { "type": "number" },
                "type": {
                  "type": "string",
                  "enum": ["plan_subscription", "metoken_credit"]
                }
              }
            }
          }
        },
        "required": ["vouchers"]
      },
      "ManualTopupDto": {
        "type": "object",
        "properties": {
          "liquidityAmount": { "type": "number" },
          "paymentMethodId": { "type": "string" },
          "useMeCredit": { "type": "boolean" },
          "planId": { "type": "string" }
        },
        "required": [
          "liquidityAmount",
          "paymentMethodId",
          "useMeCredit",
          "planId"
        ]
      },
      "IssueMeCreditsDto": {
        "type": "object",
        "properties": {
          "brandId": { "type": "string" },
          "amount": { "type": "number" }
        },
        "required": ["brandId", "amount"]
      },
      "RemoveMeCreditsDto": {
        "type": "object",
        "properties": {
          "brandId": { "type": "string" },
          "amount": { "type": "number" }
        },
        "required": ["brandId", "amount"]
      },
      "SendBulkNotificationDto": {
        "type": "object",
        "properties": {
          "notification_type": { "type": "string", "enum": ["email", "phone"] },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "offer",
              "brand",
              "expiring",
              "point",
              "order",
              "other"
            ]
          },
          "title": { "type": "string" },
          "message": { "type": "string" },
          "emailMessage": { "type": "string" },
          "icon": { "type": "string" },
          "image": { "type": "string" },
          "orderId": { "type": "string" }
        },
        "required": ["notification_type", "type", "title", "message"]
      },
      "SendNotificationDto": {
        "type": "object",
        "properties": {
          "notification_type": { "type": "string", "enum": ["email", "phone"] },
          "identifier": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "offer",
              "brand",
              "expiring",
              "point",
              "order",
              "other"
            ]
          },
          "title": { "type": "string" },
          "message": { "type": "string" },
          "emailMessage": { "type": "string" },
          "icon": { "type": "string" },
          "image": { "type": "string" },
          "orderId": { "type": "string" }
        },
        "required": [
          "notification_type",
          "identifier",
          "type",
          "title",
          "message"
        ]
      },
      "ReviewDto": {
        "type": "object",
        "properties": {
          "offerId": { "type": "string" },
          "title": { "type": "string" },
          "review": { "type": "string" },
          "rating": { "type": "number" }
        },
        "required": ["offerId", "title", "review", "rating"]
      },
      "CreateTaskDto": { "type": "object", "properties": {} },
      "UpdateTaskDto": { "type": "object", "properties": {} },
      "UpdateStatusDto": { "type": "object", "properties": {} },
      "UpdateTaskResponseDto": { "type": "object", "properties": {} },
      "UpdateSettingsDto": {
        "type": "object",
        "properties": {
          "maximumRLimit": { "type": "number" },
          "minimumRewardAmountForConversion": { "type": "number" },
          "minimumMeAmountForConversion": { "type": "number" },
          "notifyRewardAmount": { "type": "number" },
          "notifyMeTokenAmount": { "type": "number" },
          "minimumOpenRewardSetupFactor": { "type": "number" },
          "maximumOpenRewardSetupFactor": { "type": "number" },
          "rewardAutoTopUpFactor": { "type": "number" },
          "meAutoTopUpFactor": { "type": "number" },
          "meTokenValue": { "type": "number" },
          "walletVersion": { "type": "number" }
        },
        "required": [
          "maximumRLimit",
          "minimumRewardAmountForConversion",
          "minimumMeAmountForConversion",
          "notifyRewardAmount",
          "notifyMeTokenAmount",
          "minimumOpenRewardSetupFactor",
          "maximumOpenRewardSetupFactor",
          "rewardAutoTopUpFactor",
          "meAutoTopUpFactor",
          "meTokenValue",
          "walletVersion"
        ]
      }
    }
  }
}
